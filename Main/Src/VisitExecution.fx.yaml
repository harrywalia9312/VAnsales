"VisitExecution As screen.'phoneLayout_FluidGridWithHeaderPageLayout_ver3.0'":
    Fill: =_VarGblAppColors.LightText
    OnVisible: |
        =Set(
            Customers_1Detail,
            LookUp(
                Customers_1,
                Account = OrderData.Account
            )
        );
        Clear(CreateInvHeader);
        Set(
            varOrderData,
            OrderData
        );
        Set(
            varSelectedVisitActiveTab,
            1
        );
        Set(
            varCustomerGroup,
            LookUp(
                'Customer groups',
                'Customer group' = Customers_1Detail.'Customer Group'.'Customer group'
            )
        );
        Set(
            varPricingMaster,
            LookUp(
                varOfflinePricingMaster,
                'Branch/SiteÂ '.'Branch Master' = Customers_1Detail.Branch.'Branch Master'
            )
        );
        Set(
            varDiscountHeader,
            LookUp(
                'Discount Headers',
                Branch.'Branch Master' = dataforbranch
            )
        );
        /*Set(
            varPricingLine,
            Filter(
                'Item Pricing lines',
                'Item price header'.'Item pricing master' = varPricingMaster.'Item pricing master'
            )
        ); */
        Set(
            VarDropdownShow,
            false
        );
        ClearCollect(
            colSchemeHeader,
            Filter(
                colOfflineSchemeHeader,
                'Start Date' <= Today() && 'End Date' >= Today() && IsActive = 'IsActive (Scheme Headers)'.Yes && LookUp(
                    Customers_1,
                    Account = OrderData.Account
                ).'Scheme applicable' = 'Scheme applicable (Customers_1)'.Yes
            )
        );
        Clear(colSchemeApplicability);
        ForAll(
            colSchemeHeader As Item,
            Collect(
                colSchemeApplicability,
                Filter(
                    colOfflineSchemeApplicability,
                    'Scheme Code'.'Scheme Header' = Item.'Scheme Header' 
                   /*  && ('Account Type' = 'Account Type Choice'.All || ('Account Type' = 'Account Type Choice'.Customer
                      && 'Customer Code'.Account = OrderData.Account)) */
        && Manager.'Primary Email' = LookUp(
                        Customers_1,
                        Account = OrderData.Account
                    ).Manager.'Primary Email'
                )
            )
        );
        Refresh('Current Stocks');
        If(
            !IsBlank(paymentData),
            ClearCollect(
                paymentLines,
                Filter(
                    'Order Lines',
                    'Order Number'.'Order Id' = paymentData.'Order Id'/*&& !IsBlank('Order Id')*/
                )
            ),
            ClearCollect(
                paymentLines,
                Filter(
                    colOfflineOrderLines,
                    'Order Number'.'Order Id' = LookUp(
                        colOfflineVisitOrderHeader,
                        Vists.'Visit ID' = First(VisitData).'Visit ID' && !IsBlank(Vists.'Visit ID')
                    ).'Order Id'
                )
            )
        );
        If(
            !IsBlank(InvData),
            ClearCollect(
                InvLineszz,
                Filter(
                    'Invoice Lines',
                    'Invoice Number'.'Invoice Header' = InvData.'Invoice Header' && 'Invoice Type'= 'Invoice Type (Choice)'.Child
                )
            ),
            Clear(InvLineszz)
        );
        Clear(colCartItems);
        //Clear(colChildInvoiceLine);
        ForAll(
            paymentLines As ThisssItem,
            Collect(
                colCartItems,
                {
                    childInvoice: false,
                    productId: ThisssItem.'Item SKU'.'SKU Master',
                    qtyCases: ThisssItem.Cases,
                    caseUnitPrice: ThisssItem.'Cases Unit Price',
                    pcsUnitPrice: ThisssItem.'Pcs Unit Price',
                    qtyPcs: ThisssItem.PCs,
                    casesPrice: ThisssItem.'Cases Unit Price' * ThisssItem.Cases,
                    pcsPrice: ThisssItem.'Pcs Unit Price' * ThisssItem.PCs,
                    price: ThisssItem.'Total Amount',
                    discount: Text(ThisssItem.'Total Discount Amount'),
                    discountedPrice: ThisssItem.'Total Amount' - ThisssItem.'Total Discount Amount',
                    discountedPriceCases:ThisssItem.Cases*ThisssItem.'Cases Unit Price',
                    discountedPricePcs:ThisssItem.PCs*ThisssItem.'Pcs Unit Price',
                    emptyJar: ThisssItem.'Empty Jars',
                    emptyJarValue: If(
                        !IsBlank(ThisssItem.'Empty Jars'),
                        (ThisssItem.PCs - ThisssItem.'Empty Jars') * 150,
                        0
                    ),
                    schemeOrder: If(
                        ThisssItem.'Item Type' = 'Item Type (Choice)'.Free,
                        true,
                        false
                    ),
                    schemeOrderValue: LookUp(
                        'Scheme Offers',
                        'Scheme Offers' = ThisssItem.'Scheme Offer Item'.'Scheme Offers'
                    ),
                    taxAmount: ThisssItem.'Tax Amount',
                    netAmount: ThisssItem.'Net Amount',
                    SchemeOrderProductReference: ThisssItem.'Scheme Parent Item Code'.'SKU Master',
                    SchemeOrderLine: LookUp(
                        'Scheme Orders',
                        'Scheme Order' = ThisssItem.'Scheme Order Item'.'Scheme Order'
                    )
                }
            );
            
        );
        If(!IsBlank(DelOrdrline),
        RemoveIf('Order Lines', 'Order Number'.'Order Number'=DelOrdrline));
        ForAll(
            InvLineszz As ThisssssItem,
            Collect(
                colChildInvoiceLine,
                {
                    childInvoice: true,
                    schemeOrder: If(
                        ThisssssItem.'Item Type' = 'Item Type (Choice)'.Free,
                        true,
                        false
                    ),
                    productId: ThisssssItem.'Item SKU'.'SKU Master',
                    qtyCases: ThisssssItem.Cases,
                    qtyPcs:ThisssssItem.PCs,
                    cgst:ThisssssItem.CGST,
                    sgst:ThisssssItem.'SGST/UGST',
                    cess:ThisssssItem.CESS,
                    cessValue: ThisssssItem.'Cess Value',
                    cgstValue:ThisssssItem.'CGST Value',
                    sgstValue:ThisssssItem.'SGST Value',
                    discountedPrice:ThisssssItem.'Taxable Value',
                    taxAmount:ThisssssItem.'Tax Amount',
                    caseUnitPrice:ThisssssItem.'Cases Unit Price',
                    pcsUnitPrice:ThisssssItem.'Pcs Unit Price',
                    netAmount:ThisssssItem.Rate,
                    discount:Text(ThisssssItem.'Total Discount Amount'),
                    netAmountWithoutEJar:ThisssssItem.'Net Amount (Without E Jar)',
                    emptyJar:ThisssssItem.'Empty Jar'
                }
            )
        );
        
        
        Reset(txtPaymentAmountValue_2);
        Set(
            Warehousesdata,
            LookUp(
                Warehouses,
                Warehouse = varUserVanNo.Van.Warehouse
            ).Warehouse
        );
        Set(
            varGatePassHeaderAll,
            AddColumns(
                Filter(
                    'Stock Transfer Headers',
                    'To Location'.Warehouse = Warehousesdata && Date >= Today()
                ),
                "headerGUID",
                'Stock Transfer Header'
            )
        );
        Set(
            varLoading,
            false
        );
        Reset(txtPaymentAmountValue_9);
        Reset(ComboBox1_1);
        Reset(txtPaymentAmountValue_3);
        Reset(DatePicker3_1);
        Set(
            varShowGatePassFile2,
            false
        );
        Clear(colFinalErrorMessage);

    Header_15 As Header:
        HeaderText: ="Order"

    Gallery13_4 As gallery.galleryHorizontal:
        AccessibleLabel: ="Gallery13_4"
        BorderColor: =RGBA(109, 109, 109, 1)
        DisplayMode: =DisplayMode.View
        FocusedBorderColor: =Color.Transparent
        FocusedBorderThickness: =0.1
        Height: =73
        Items: |-
            =Table(
                {
                    Title: "Order Booking",
                    id: 1
                },
                {
                    Title: "Payments",
                    id: 2
                }
                /*{
                    Title: "Return Requests",
                    id: 3
                },
                {
                    Title: "Return Preview",
                    id: 4
                }*/
                
            )
        OnSelect: =
        ShowScrollbar: =false
        TabIndex: =
        TemplateSize: =300
        Width: =620
        X: =5
        Y: =80
        ZIndex: =2

        Button31_14 As button:
            BorderColor: =RGBA(0, 0, 0, 0)
            Color: =If(varSelectedVisitActiveTab = ThisItem.id ,_VarGblAppColors.BisleriBlueLight, _VarGblAppColors.BisleriBlue)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            Fill: =If(varSelectedVisitActiveTab = ThisItem.id, _VarGblAppColors.BisleriBlue, _VarGblAppColors.BisleriBlueLight)
            FocusedBorderColor: =ColorFade(Self.Fill, 75%)
            Font: =Font.'Segoe UI'
            Height: =50
            HoverBorderColor: =RGBA(0, 0, 0, 0)
            HoverColor: =_VarGblAppColors.BisleriBlue
            HoverFill: =ColorFade(Self.Color, 10%)
            PressedBorderColor: =ColorFade(RGBA(255, 200, 61, 1), 50%)
            PressedColor: =_VarGblAppColors.BisleriBlue
            PressedFill: =ColorFade(Self.Color, 30%)
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =18
            Text: =ThisItem.Title
            Width: =292
            X: =5
            Y: =3
            ZIndex: =1

    OrderBook As fluidGrid.fluidGridWithBlankCard:
        BorderThickness: =0
        Height: =900
        Visible: =varSelectedVisitActiveTab = 1
        Width: =Parent.Width
        Y: =153
        ZIndex: =3

        DataCard1_4 As dataCard:
            BorderColor: =RGBA(0, 0, 0, 1)
            BorderStyle: =BorderStyle.Solid
            BorderThickness: =0
            DisplayMode: =DisplayMode.Edit
            Fill: =_VarGblAppColors.BackgroundColor
            Height: =947
            Width: =Parent.Width
            X: =0
            Y: =0
            ZIndex: =1

            NewOrder_1 As NewOrder:
                Height: =842

            btnPaymentConfirm_3 As button:
                DisplayMode: =If(CountRows(colCartItems) = 0, DisplayMode.Disabled, DisplayMode.Edit)
                Fill: =_VarGblAppColors.BisleriBlue
                FocusedBorderThickness: =2
                Height: =50
                HoverFill: =ColorFade(_VarGblAppColors.BisleriBlue, -20%)
                OnSelect: |-
                    =Set(
                        dataforsum,
                        Filter(
                            'Order Headers',
                            Customer.Account = OrderData.Account && 'Created On' >= Today() && 'Payment Status'='Payment Status Choice'.Completed
                        )
                    );
                    If(
                        (OrderData.'Mode Of Payment' = 'Payment Type (choice)'.CREDIT || OrderData.'Mode Of Payment' = 'Payment Type (choice)'.COUPON) && LookUp(
                            Customers_1,
                            Account = OrderData.Account
                        ).'Credit Activated' = 'Credit Activated (Customers_1)'.Yes,
                        If(
                            IsBlank(
                                LookUp(
                                    'Temporary Credit Limits',
                                    'Customer code'.Account = OrderData.Account && FromDate <= Today() && ToDate >= Today()
                                )
                            ),
                            If(
                                ((LookUp(
                                    Customers_1,
                                    Account = OrderData.Account
                                ).'Total Credit limit') - (LookUp(
                                    Customers_1,
                                    Account = OrderData.Account
                                ).'Used Credit Limit') - (Sum(
                                    dataforsum,
                                    'Net Amount'
                                ))) < (Sum(
                                    colCartItems,
                                    netAmount
                                ) ),
                                Set(
                                    _varCreditLimitPopup,
                                    true
                                );
                                /*Notify(
                                    "You don't have sufficient credit limit left, Please check",
                                    NotificationType.Error,
                                    5000
                                );*/
                    ,
                                Set(
                                    varSelectedVisitActiveTab,
                                    2
                                );
                                Set(
                                    _varCreditLimitPopup,
                                    false
                                );
                            ),
                            If(
                                ((LookUp(
                                    'Temporary Credit Limits',
                                    'Customer code'.Account = OrderData.Account && FromDate <= Today() && ToDate >= Today()
                                ).'Available Limit') - (LookUp(
                                    Customers_1,
                                    Account = OrderData.Account
                                ).'Used Credit Limit') - (Sum(
                                    dataforsum,
                                    'Net Amount'
                                ))) < (Sum(
                                    colCartItems,
                                    netAmount
                                ))
                                /*((LookUp(
                                    'Temporary Credit Limits',
                                    'Customer code'.Account=OrderData.Account
                                ).'Available Limit') - (LookUp(
                                    Customers_1,
                                    Account = OrderData.Account
                                ).'Used Credit Limit') - (Sum(
                                    Filter(
                                        'Order Headers',
                                        Customer.Account = OrderData.Account && IsToday('Created On')
                                    ),
                                    'Net Amount'
                                ))) < (Sum(
                                    colCartItems,
                                    netAmount
                                ) )*/,
                                Set(
                                    _varCreditLimitPopup,
                                    true
                                );
                                /*Notify(
                                    "You don't have sufficient credit limit left, Please check",
                                    NotificationType.Error,
                                    5000
                                );*/
                    ,
                                Set(
                                    varSelectedVisitActiveTab,
                                    2
                                );
                                Set(
                                    _varCreditLimitPopup,
                                    false
                                );
                            )
                        ),
                        Set(
                            varSelectedVisitActiveTab,
                            2
                        );
                        Set(
                            _varCreditLimitPopup,
                            false
                        );
                        
                    )
                Size: =_VarGblAppFonts.Size.UpperMedium
                Text: ="Confirm"
                Width: =150
                X: =245
                Y: =815
                ZIndex: =2

    PaymentsVisits As fluidGrid.fluidGridWithBlankCard:
        BorderThickness: =0
        Height: =920
        Visible: =//Gallery13_4.Selected.Title = "Payments"
        Width: =Parent.Width
        Y: =141
        ZIndex: =4

        DataCard1_9 As dataCard:
            BorderColor: =RGBA(0, 0, 0, 1)
            BorderStyle: =BorderStyle.Solid
            BorderThickness: =0
            DisplayMode: =DisplayMode.Edit
            Fill: =RGBA(0, 0, 0, 0)
            Height: =1961
            Width: =Parent.Width
            WidthFit: =false
            X: =0
            Y: =0
            ZIndex: =1

            lblPaymentAmountLabel_1 As label:
                FontWeight: =FontWeight.Semibold
                Size: =_VarGblAppFonts.Size.UpperMedium
                Text: ="Amount"
                Width: =230
                X: =40
                Y: =1070
                ZIndex: =1

            txtPaymentAmountValue_1 As text:
                AccessibleLabel: ="txtPaymentAmountValue_1"
                BorderColor: =_VarGblAppColors.BisleriBlue
                Default: =""
                FocusedBorderThickness: =2
                Format: =TextFormat.Number
                Height: =45
                HintText: ="Enter Amount"
                HoverBorderColor: =_VarGblAppColors.BisleriBlue
                HoverFill: =ColorFade(_VarGblAppColors.BisleriBlue, 80%)
                Size: =_VarGblAppFonts.Size.UpperMedium
                Width: =230
                X: =352
                Y: =1067
                ZIndex: =2

            lblPaymentRemainingAmountValue_1 As label:
                Size: =_VarGblAppFonts.Size.Title
                Text: ="0"
                Width: =217
                X: =352
                Y: =1120
                ZIndex: =5

            lblPaymentRemainingAmount_1 As label:
                FontWeight: =FontWeight.Semibold
                Size: =_VarGblAppFonts.Size.UpperMedium
                Text: ="Remaining Amount"
                Width: =267
                X: =40
                Y: =1120
                ZIndex: =6

            lblModeOfPayment_1 As label:
                FontWeight: =FontWeight.Semibold
                Size: =_VarGblAppFonts.Size.Title
                Text: ="Mode of Payment"
                Width: =560
                X: =40
                Y: =892
                ZIndex: =9

            rdbModeOfPayment_1 As radio:
                AccessibleLabel: ="rdbModeOfPayment_1"
                FocusedBorderThickness: =0.5
                Height: =63
                Items: =["Cash", "Cheque"]
                Layout: =Layout.Horizontal
                RadioSelectionFill: =_VarGblAppColors.BisleriBlue
                RadioSize: =42
                Size: =_VarGblAppFonts.Size.UpperMedium
                Width: =293
                X: =40
                Y: =932
                ZIndex: =10

            lblPaymentDate_1 As label:
                FontWeight: =FontWeight.Semibold
                Size: =_VarGblAppFonts.Size.UpperMedium
                Text: ="Date"
                Width: =230
                X: =40
                Y: =1022
                ZIndex: =11

            shpUpperRect_1 As rectangle:
                DisplayMode: =DisplayMode.Disabled
                Fill: =_VarGblAppColors.BottomListBg
                Height: =60
                Width: =App.Width
                Y: =707
                ZIndex: =17

            shpLowerRect_1 As rectangle:
                DisplayMode: =DisplayMode.Disabled
                Fill: =_VarGblAppColors.BottomListBg
                Height: =60
                Width: =App.Width
                Y: =827
                ZIndex: =18

            lblPaymentIncoiceNo_1 As label:
                Color: =_VarGblAppColors.PrimaryText
                FontWeight: =FontWeight.Bold
                Height: =60
                Size: =_VarGblAppFonts.Size.UpperMedium
                Text: ="Invoice No."
                Width: =307
                X: =10
                Y: =707
                ZIndex: =19

            lblPaymentAmount_1 As label:
                Color: =_VarGblAppColors.PrimaryText
                FontWeight: =FontWeight.Bold
                Height: =60
                Size: =_VarGblAppFonts.Size.UpperMedium
                Text: ="Amount (INR)"
                Width: =307
                X: =333
                Y: =707
                ZIndex: =20

            lblPaymentInvoiceNoValue_1 As label:
                Color: =_VarGblAppColors.BisleriBlue
                FontWeight: =FontWeight.Bold
                Height: =60
                Size: =21
                Text: ="RI2223R260005477"
                Width: =307
                X: =10
                Y: =767
                ZIndex: =21

            lblPaymentAmountValue_1 As label:
                Color: =_VarGblAppColors.BisleriBlue
                FontWeight: =FontWeight.Bold
                Height: =60
                Size: =21
                Text: ="â¹ 1500"
                Width: =307
                X: =333
                Y: =767
                ZIndex: =22

            lblPaymentDetails_1 As label:
                Color: =_VarGblAppColors.PrimaryText
                FontWeight: =FontWeight.Bold
                Height: =60
                Size: =_VarGblAppFonts.Size.UpperMedium
                Text: ="Payment Details"
                Width: =307
                X: =10
                Y: =827
                ZIndex: =23

            ImgPaymentPaytm_1 As image:
                BorderColor: =_VarGblAppColors.HeaderBg
                BorderThickness: =2
                Height: =67
                Image: ='Paytm Image'
                Visible: =If(rdbModeOfPayment_1.Selected.Value ="Cash", true, false)
                Width: =135
                X: =370
                Y: =928
                ZIndex: =24

            lblPaymentDateValue_1 As label:
                Color: =_VarGblAppColors.PrimaryText
                FontWeight: =FontWeight.Bold
                Size: =_VarGblAppFonts.Size.UpperMedium
                Text: =Text(DateValue(Today()), "mmm dd, yyyy")
                Width: =217
                X: =352
                Y: =1022
                ZIndex: =25

            Gallery1_1 As gallery.galleryVertical:
                AccessibleLabel: ="Gallery1_1"
                Height: =447
                Items: ='Item Masters'
                Layout: =Layout.Vertical
                TabIndex: =0
                TemplateSize: =175
                ZIndex: =27

                HtmlText1_1 As htmlViewer:
                    Height: =185
                    HtmlText: |-
                        ="<div style='border-radius:15px 15px 15px 15px; background-color:#E6F7F6; width:590px; height:170px'></div>"
                    OnSelect: =Select(Parent)
                    Width: =612
                    X: =18
                    Y: =2
                    ZIndex: =1

                Label4_13 As label:
                    Color: =_VarGblAppColors.BisleriBlue
                    FontWeight: =FontWeight.Bold
                    Height: =45
                    OnSelect: =Select(Parent)
                    Size: =_VarGblAppFonts.Size.Subtitle
                    Text: =ThisItem.Description
                    Tooltip: =ThisItem.Description
                    Width: =560
                    Wrap: =false
                    X: =40
                    Y: =10
                    ZIndex: =2

                Rectangle2_1 As rectangle:
                    BorderColor: =_VarGblAppColors.SecondaryText
                    BorderStyle: =BorderStyle.Dotted
                    BorderThickness: =0.5
                    Fill: =_VarGblAppColors.SecondaryText
                    Height: =0.5
                    OnSelect: =Select(Parent)
                    Width: =560
                    X: =40
                    Y: =130
                    ZIndex: =3

                Label4_16 As label:
                    Color: =_VarGblAppColors.BisleriBlue
                    FontWeight: =FontWeight.Semibold
                    Height: =34
                    OnSelect: =Select(Parent)
                    Size: =_VarGblAppFonts.Size.Subtitle
                    Text: ="Cases"
                    Width: =70
                    X: =71
                    Y: =55
                    ZIndex: =4

                Label4_14 As label:
                    Color: =_VarGblAppColors.BisleriBlue
                    FontWeight: =FontWeight.Semibold
                    Height: =34
                    OnSelect: =Select(Parent)
                    Size: =_VarGblAppFonts.Size.Subtitle
                    Text: ="PCs"
                    Width: =57
                    X: =258
                    Y: =55
                    ZIndex: =7

                Label4_18 As label:
                    Color: =_VarGblAppColors.BisleriBlue
                    FontWeight: =FontWeight.Semibold
                    Height: =34
                    OnSelect: =Select(Parent)
                    Size: =_VarGblAppFonts.Size.Subtitle
                    Text: ="E. Jars"
                    Width: =70
                    X: =430
                    Y: =55
                    ZIndex: =8

                Label4_24 As label:
                    Color: =_VarGblAppColors.BisleriBlue
                    FontWeight: =FontWeight.Bold
                    Height: =44
                    OnSelect: =Select(Parent)
                    Size: =_VarGblAppFonts.Size.Subtitle
                    Text: |-
                        ="Total Price:"
                    Width: =130
                    X: =70
                    Y: =130
                    ZIndex: =9

                Label4_29 As label:
                    Color: =_VarGblAppColors.HeaderBg
                    FontWeight: =FontWeight.Bold
                    Height: =44
                    OnSelect: =Select(Parent)
                    Size: =_VarGblAppFonts.Size.Subtitle
                    Text: ="â¹402.50"
                    Width: =127
                    X: =200
                    Y: =130
                    ZIndex: =10

                Label4_17 As label:
                    Color: =_VarGblAppColors.PrimaryText
                    FontWeight: =FontWeight.Semibold
                    Height: =34
                    OnSelect: =Select(Parent)
                    Size: =_VarGblAppFonts.Size.Subtitle
                    Text: ="2"
                    Width: =108
                    X: =135
                    Y: =55
                    ZIndex: =11

                Label4_15 As label:
                    Color: =_VarGblAppColors.PrimaryText
                    FontWeight: =FontWeight.Semibold
                    Height: =34
                    OnSelect: =Select(Parent)
                    Size: =_VarGblAppFonts.Size.Subtitle
                    Text: ="6"
                    Width: =95
                    X: =315
                    Y: =55
                    ZIndex: =14

                Label4_19 As label:
                    Color: =_VarGblAppColors.PrimaryText
                    FontWeight: =FontWeight.Semibold
                    Height: =34
                    OnSelect: =Select(Parent)
                    Size: =_VarGblAppFonts.Size.Subtitle
                    Text: ="0"
                    Width: =97
                    X: =503
                    Y: =55
                    ZIndex: =15

                Label4_20 As label:
                    Color: =_VarGblAppColors.BisleriBlue
                    FontWeight: =FontWeight.Semibold
                    Height: =34
                    OnSelect: =Select(Parent)
                    Size: =_VarGblAppFonts.Size.Subtitle
                    Text: ="Disc."
                    Width: =70
                    X: =71
                    Y: =89
                    ZIndex: =16

                Label4_21 As label:
                    Color: =_VarGblAppColors.BisleriBlue
                    FontWeight: =FontWeight.Semibold
                    Height: =34
                    OnSelect: =Select(Parent)
                    Size: =_VarGblAppFonts.Size.Subtitle
                    Text: ="GST"
                    Width: =57
                    X: =258
                    Y: =89
                    ZIndex: =17

                Label4_22 As label:
                    Color: =_VarGblAppColors.BisleriBlue
                    FontWeight: =FontWeight.Semibold
                    Height: =34
                    OnSelect: =Select(Parent)
                    Size: =_VarGblAppFonts.Size.Subtitle
                    Text: ="Price"
                    Width: =70
                    X: =430
                    Y: =89
                    ZIndex: =18

                Label4_23 As label:
                    Color: =_VarGblAppColors.PrimaryText
                    FontWeight: =FontWeight.Semibold
                    Height: =34
                    OnSelect: =Select(Parent)
                    Size: =_VarGblAppFonts.Size.Subtitle
                    Text: ="0.0"
                    Width: =108
                    X: =135
                    Y: =89
                    ZIndex: =19

                Label4_30 As label:
                    Color: =_VarGblAppColors.PrimaryText
                    FontWeight: =FontWeight.Semibold
                    Height: =34
                    OnSelect: =Select(Parent)
                    Size: =_VarGblAppFonts.Size.Subtitle
                    Text: ="18.0"
                    Width: =95
                    X: =315
                    Y: =89
                    ZIndex: =20

                Label4_31 As label:
                    Color: =_VarGblAppColors.PrimaryText
                    FontWeight: =FontWeight.Semibold
                    Height: =34
                    OnSelect: =Select(Parent)
                    Size: =_VarGblAppFonts.Size.Subtitle
                    Text: ="â¹161.00"
                    Width: =97
                    X: =503
                    Y: =89
                    ZIndex: =21

                Label4_32 As label:
                    Color: =_VarGblAppColors.BisleriBlue
                    FontWeight: =FontWeight.Bold
                    Height: =44
                    OnSelect: =Select(Parent)
                    Size: =_VarGblAppFonts.Size.Subtitle
                    Text: |-
                        ="Invoice Price:"
                    X: =341
                    Y: =130
                    ZIndex: =22

                Label4_33 As label:
                    Color: =_VarGblAppColors.HeaderBg
                    FontWeight: =FontWeight.Bold
                    Height: =44
                    OnSelect: =Select(Parent)
                    Size: =_VarGblAppFonts.Size.Subtitle
                    Text: ="â¹402.50"
                    Width: =127
                    X: =486
                    Y: =130
                    ZIndex: =23

            grpPaymentButtons_1 As group:
                Height: =5
                Width: =5
                X: =80
                Y: =80
                ZIndex: =27

                btnPaymentCancel_1 As button:
                    Fill: =_VarGblAppColors.BisleriBlue
                    FocusedBorderThickness: =2
                    Height: =50
                    HoverFill: =ColorFade(_VarGblAppColors.BisleriBlue, -20%)
                    OnSelect: =Navigate('Payment Screen');
                    Size: =_VarGblAppFonts.Size.UpperMedium
                    Text: ="Cancel"
                    Width: =150
                    X: =334
                    Y: =1793
                    ZIndex: =16

                btnPaymentConfirm_1 As button:
                    Fill: =_VarGblAppColors.BisleriBlue
                    FocusedBorderThickness: =2
                    Height: =50
                    HoverFill: =ColorFade(_VarGblAppColors.BisleriBlue, -20%)
                    OnSelect: =Navigate('Payment Screen');
                    Size: =_VarGblAppFonts.Size.UpperMedium
                    Text: ="Confirm"
                    Width: =150
                    X: =156
                    Y: =1793
                    ZIndex: =26

            Button4_1 As button:
                DisplayMode: =DisplayMode.Disabled
                Height: =208
                Size: =24
                Text: =""
                Width: =540
                X: =50
                Y: =468
                ZIndex: =28

            Label5_8 As label:
                Color: =_VarGblAppColors.BisleriBlue
                FontWeight: =FontWeight.Semibold
                Height: =45
                Size: =_VarGblAppFonts.Size.Medium
                Text: ="Total Qty"
                Width: =192
                X: =111
                Y: =481
                ZIndex: =29

            Label5_10 As label:
                Color: =_VarGblAppColors.BisleriBlue
                FontWeight: =FontWeight.Semibold
                Height: =45
                Size: =_VarGblAppFonts.Size.Medium
                Text: ="Total Inv Amt"
                Width: =192
                X: =111
                Y: =526
                ZIndex: =30

            Label5_18 As label:
                Color: =_VarGblAppColors.BisleriBlue
                FontWeight: =FontWeight.Semibold
                Height: =45
                Size: =_VarGblAppFonts.Size.Medium
                Text: ="GST"
                Width: =192
                X: =111
                Y: =575
                ZIndex: =31

            Label5_20 As label:
                Color: =_VarGblAppColors.BisleriBlue
                FontWeight: =FontWeight.Semibold
                Height: =45
                Size: =_VarGblAppFonts.Size.Medium
                Text: ="Total Amt"
                Width: =192
                X: =111
                Y: =619
                ZIndex: =32

            Label5_9 As label:
                FontWeight: =FontWeight.Semibold
                Height: =45
                Size: =_VarGblAppFonts.Size.Medium
                Text: ="1820"
                Width: =192
                X: =318
                Y: =481
                ZIndex: =33

            Label5_11 As label:
                FontWeight: =FontWeight.Semibold
                Height: =45
                Size: =_VarGblAppFonts.Size.Medium
                Text: ="â¹13566"
                Width: =192
                X: =318
                Y: =526
                ZIndex: =34

            Label5_19 As label:
                FontWeight: =FontWeight.Semibold
                Height: =45
                Size: =_VarGblAppFonts.Size.Medium
                Text: ="18%"
                Width: =192
                X: =318
                Y: =575
                ZIndex: =35

            Label5_21 As label:
                FontWeight: =FontWeight.Semibold
                Height: =45
                Size: =_VarGblAppFonts.Size.Medium
                Text: ="â¹14521"
                Width: =192
                X: =318
                Y: =619
                ZIndex: =36

            Label12_4 As label:
                BorderColor: =RGBA(32, 54, 71, 1)
                Color: =_VarGblAppColors.BisleriBlue
                FontWeight: =FontWeight.Semibold
                Height: =47
                Size: =19
                Text: ="Customer Signature"
                Width: =300
                X: =40
                Y: =1182
                ZIndex: =38

            Label12_5 As label:
                BorderColor: =RGBA(32, 54, 71, 1)
                Color: =_VarGblAppColors.BisleriBlue
                FontWeight: =FontWeight.Semibold
                Height: =47
                Size: =19
                Text: ="Salesperson Signature"
                Width: =300
                X: =40
                Y: =1465
                ZIndex: =40

    ReturnRequests As fluidGrid.fluidGridWithBlankCard:
        BorderThickness: =0
        Height: =908
        Visible: |-
            =//varSelectedVisitActiveTab = 3
            false
        Width: =Parent.Width
        Y: =147
        ZIndex: =5

        DataCard1_12 As dataCard:
            BorderColor: =RGBA(0, 0, 0, 1)
            BorderStyle: =BorderStyle.Solid
            BorderThickness: =0
            DisplayMode: =DisplayMode.Edit
            Fill: =RGBA(0, 0, 0, 0)
            Height: =908
            Width: =Parent.Width
            X: =0
            Y: =0
            ZIndex: =1

            ReturnOrderComp_1 As ReturnOrderComp:
                Height: =905

    PaymentsVisitsTest As fluidGrid.fluidGridWithBlankCard:
        BorderThickness: =0
        Height: =920
        Visible: =varSelectedVisitActiveTab = 2
        Width: =Parent.Width
        Y: =142
        ZIndex: =6

        DataCard1_10 As dataCard:
            BorderColor: =RGBA(0, 0, 0, 1)
            BorderStyle: =BorderStyle.Solid
            BorderThickness: =0
            DisplayMode: =DisplayMode.Edit
            Fill: =RGBA(0, 0, 0, 0)
            Height: =1369
            Width: =Parent.Width
            WidthFit: =false
            X: =0
            Y: =0
            ZIndex: =1

            Gallery1_2 As gallery.galleryVertical:
                AccessibleLabel: ="Gallery1_1"
                Height: =447
                Items: ='Item Masters'
                Layout: =Layout.Vertical
                TabIndex: =0
                TemplateSize: =133
                Visible: =false
                Y: =146
                ZIndex: =19

                HtmlText1_2 As htmlViewer:
                    Height: =140
                    HtmlText: |-
                        ="<div style='border-radius:15px 15px 15px 15px; background-color:#E6F7F6; width:620px; height:300px'></div>"
                    OnSelect: =Select(Parent)
                    Width: =630
                    ZIndex: =1

                Label4_25 As label:
                    Align: =Align.Justify
                    Color: =_VarGblAppColors.PrimaryText
                    FontWeight: =FontWeight.Semibold
                    Height: =76
                    OnSelect: =Select(Parent)
                    Size: =_VarGblAppFonts.Size.Tiny
                    Text: =ThisItem.Description
                    Tooltip: =ThisItem.Description
                    VerticalAlign: =VerticalAlign.Top
                    Width: =125
                    X: =10
                    Y: =57
                    ZIndex: =2

                Rectangle2_2 As rectangle:
                    BorderColor: =_VarGblAppColors.SecondaryText
                    BorderStyle: =BorderStyle.Dotted
                    BorderThickness: =0.5
                    Fill: =_VarGblAppColors.SecondaryText
                    Height: =0.5
                    OnSelect: =Select(Parent)
                    Width: =600
                    X: =10
                    Y: =55
                    ZIndex: =3

                Label4_26 As label:
                    Color: =_VarGblAppColors.BisleriBlue
                    FontWeight: =FontWeight.Semibold
                    Height: =30
                    OnSelect: =Select(Parent)
                    Size: =_VarGblAppFonts.Size.Tiny
                    Text: ="Cases"
                    Width: =70
                    X: =135
                    Y: =12
                    ZIndex: =4

                Label4_28 As label:
                    Color: =_VarGblAppColors.BisleriBlue
                    FontWeight: =FontWeight.Semibold
                    Height: =30
                    OnSelect: =Select(Parent)
                    Size: =_VarGblAppFonts.Size.Tiny
                    Text: ="PCs"
                    Width: =57
                    X: =186
                    Y: =12
                    ZIndex: =7

                Label4_35 As label:
                    Color: =_VarGblAppColors.BisleriBlue
                    FontWeight: =FontWeight.Semibold
                    Height: =30
                    OnSelect: =Select(Parent)
                    Size: =_VarGblAppFonts.Size.Tiny
                    Text: ="E. Jars"
                    Width: =70
                    X: =225
                    Y: =12
                    ZIndex: =8

                Label4_43 As label:
                    Color: =_VarGblAppColors.BisleriBlue
                    FontWeight: =FontWeight.Semibold
                    Height: =34
                    OnSelect: =Select(Parent)
                    Size: =_VarGblAppFonts.Size.Tiny
                    Text: |-
                        ="Total Price:"
                    Width: =53
                    X: =479
                    Y: =12
                    ZIndex: =9

                Label4_44 As label:
                    Color: =_VarGblAppColors.HeaderBg
                    FontWeight: =FontWeight.Semibold
                    Height: =30
                    OnSelect: =Select(Parent)
                    Size: =_VarGblAppFonts.Size.Tiny
                    Text: ="â¹402.50"
                    Width: =76
                    X: =479
                    Y: =90
                    ZIndex: =10

                Label4_27 As label:
                    Color: =_VarGblAppColors.PrimaryText
                    FontWeight: =FontWeight.Semibold
                    Height: =30
                    OnSelect: =Select(Parent)
                    Size: =_VarGblAppFonts.Size.Tiny
                    Text: ="2"
                    Width: =51
                    X: =135
                    Y: =90
                    ZIndex: =11

                Label4_34 As label:
                    Color: =_VarGblAppColors.PrimaryText
                    FontWeight: =FontWeight.Semibold
                    Height: =30
                    OnSelect: =Select(Parent)
                    Size: =_VarGblAppFonts.Size.Tiny
                    Text: ="6"
                    Width: =46
                    X: =189
                    Y: =90
                    ZIndex: =14

                Label4_36 As label:
                    Color: =_VarGblAppColors.PrimaryText
                    FontWeight: =FontWeight.Semibold
                    Height: =30
                    OnSelect: =Select(Parent)
                    Size: =_VarGblAppFonts.Size.Tiny
                    Text: ="0"
                    Width: =57
                    X: =235
                    Y: =90
                    ZIndex: =15

                Label4_37 As label:
                    Color: =_VarGblAppColors.BisleriBlue
                    FontWeight: =FontWeight.Semibold
                    Height: =30
                    OnSelect: =Select(Parent)
                    Size: =_VarGblAppFonts.Size.Tiny
                    Text: ="Disc."
                    Width: =70
                    X: =296
                    Y: =12
                    ZIndex: =16

                Label4_39 As label:
                    Color: =_VarGblAppColors.BisleriBlue
                    FontWeight: =FontWeight.Semibold
                    Height: =30
                    OnSelect: =Select(Parent)
                    Size: =_VarGblAppFonts.Size.Tiny
                    Text: ="GST"
                    Width: =57
                    X: =362
                    Y: =12
                    ZIndex: =17

                Label4_41 As label:
                    Color: =_VarGblAppColors.BisleriBlue
                    FontWeight: =FontWeight.Semibold
                    Height: =30
                    OnSelect: =Select(Parent)
                    Size: =_VarGblAppFonts.Size.Tiny
                    Text: ="Price"
                    Width: =70
                    X: =419
                    Y: =12
                    ZIndex: =18

                Label4_38 As label:
                    Color: =_VarGblAppColors.PrimaryText
                    FontWeight: =FontWeight.Semibold
                    Height: =30
                    OnSelect: =Select(Parent)
                    Size: =_VarGblAppFonts.Size.Tiny
                    Text: ="0.0"
                    Width: =54
                    X: =298
                    Y: =90
                    ZIndex: =19

                Label4_40 As label:
                    Color: =_VarGblAppColors.PrimaryText
                    FontWeight: =FontWeight.Semibold
                    Height: =30
                    OnSelect: =Select(Parent)
                    Size: =_VarGblAppFonts.Size.Tiny
                    Text: ="18.0"
                    Width: =52
                    X: =362
                    Y: =90
                    ZIndex: =20

                Label4_42 As label:
                    Color: =_VarGblAppColors.PrimaryText
                    FontWeight: =FontWeight.Semibold
                    Height: =30
                    OnSelect: =Select(Parent)
                    Size: =_VarGblAppFonts.Size.Tiny
                    Text: ="â¹161.00"
                    Width: =69
                    X: =417
                    Y: =90
                    ZIndex: =21

                Label4_45 As label:
                    Color: =_VarGblAppColors.BisleriBlue
                    FontWeight: =FontWeight.Semibold
                    Height: =31
                    OnSelect: =Select(Parent)
                    Size: =_VarGblAppFonts.Size.Tiny
                    Text: |-
                        ="Invoice Price:"
                    Width: =69
                    X: =544
                    Y: =12
                    ZIndex: =22

                Label4_46 As label:
                    Color: =_VarGblAppColors.HeaderBg
                    FontWeight: =FontWeight.Semibold
                    Height: =30
                    OnSelect: =Select(Parent)
                    Size: =_VarGblAppFonts.Size.Tiny
                    Text: ="â¹402.50"
                    Width: =76
                    X: =544
                    Y: =90
                    ZIndex: =23

                Label4_47 As label:
                    Color: =_VarGblAppColors.BisleriBlue
                    FontWeight: =FontWeight.Semibold
                    Height: =30
                    OnSelect: =Select(Parent)
                    Size: =_VarGblAppFonts.Size.Tiny
                    Text: ="Product"
                    Width: =92
                    X: =15
                    Y: =12
                    ZIndex: =24

            contHomeOrdersUpperVertical_1 As groupContainer.verticalAutoLayoutContainer:
                Height: =contHomeOrdersUpper_1.Height
                LayoutDirection: =LayoutDirection.Vertical
                LayoutMode: =LayoutMode.Auto
                Width: =Parent.Width
                Y: =47
                ZIndex: =20

                contHomeOrdersUpper_1 As groupContainer.manualLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    FillPortions: =0
                    Height: =contHomeOrdersLowerVertical_1.Height
                    LayoutMinHeight: =112
                    LayoutMinWidth: =250
                    Width: =Parent.Width
                    ZIndex: =1

                    contHomeOrdersLowerVertical_1 As groupContainer.verticalAutoLayoutContainer:
                        Height: =contHomeOrdersHeading_1.Height + contHomeOrdersData_1.Height
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutMode: =LayoutMode.Auto
                        LayoutOverflowX: =LayoutOverflow.Scroll
                        Width: =Parent.Width
                        Y: =6
                        ZIndex: =1

                        contHomeOrdersHeading_1 As groupContainer.manualLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            FillPortions: =0
                            Height: =60
                            LayoutMinHeight: =70
                            LayoutMinWidth: =750
                            Width: =Parent.Width
                            ZIndex: =1

                            btnNewOrderHeaderProduct_15 As button:
                                DisabledBorderColor: |-
                                    =//RGBA(166, 166, 166, 1)
                                    _VarGblAppColors.BisleriBlue
                                DisabledColor: |-
                                    =//RGBA(166, 166, 166, 1)
                                    _VarGblAppColors.LightText
                                DisabledFill: |-
                                    =//RGBA(244, 244, 244, 1)
                                    _VarGblAppColors.BisleriBlue
                                DisplayMode: =DisplayMode.Disabled
                                Height: =50
                                OnSelect: =
                                RadiusBottomLeft: =5
                                RadiusBottomRight: =5
                                RadiusTopLeft: =5
                                RadiusTopRight: =5
                                Size: =_VarGblAppFonts.Size.Tiny
                                Text: ="Product"
                                Width: =95
                                X: =5
                                Y: =5
                                ZIndex: =1

                            btnNewOrderHeaderCases_15 As button:
                                DisabledBorderColor: |-
                                    =//RGBA(166, 166, 166, 1)
                                    _VarGblAppColors.BisleriBlue
                                DisabledColor: |-
                                    =//RGBA(166, 166, 166, 1)
                                    _VarGblAppColors.LightText
                                DisabledFill: |-
                                    =//RGBA(244, 244, 244, 1)
                                    _VarGblAppColors.BisleriBlue
                                DisplayMode: =DisplayMode.Disabled
                                Height: =50
                                OnSelect: =
                                RadiusBottomLeft: =5
                                RadiusBottomRight: =5
                                RadiusTopLeft: =5
                                RadiusTopRight: =5
                                Size: =_VarGblAppFonts.Size.Tiny
                                Text: ="Cases"
                                Width: =62
                                X: =btnNewOrderHeaderProduct_15.X + btnNewOrderHeaderProduct_15.Width +5
                                Y: =5
                                ZIndex: =2

                            btnNewOrderHeaderPcs_17 As button:
                                DisabledBorderColor: |-
                                    =//RGBA(166, 166, 166, 1)
                                    _VarGblAppColors.BisleriBlue
                                DisabledColor: |-
                                    =//RGBA(166, 166, 166, 1)
                                    _VarGblAppColors.LightText
                                DisabledFill: |-
                                    =//RGBA(244, 244, 244, 1)
                                    _VarGblAppColors.BisleriBlue
                                DisplayMode: =DisplayMode.Disabled
                                Height: =50
                                OnSelect: =
                                RadiusBottomLeft: =5
                                RadiusBottomRight: =5
                                RadiusTopLeft: =5
                                RadiusTopRight: =5
                                Size: =_VarGblAppFonts.Size.Tiny
                                Text: ="Pcs"
                                Width: =62
                                X: =btnNewOrderHeaderCases_15.X+btnNewOrderHeaderCases_15.Width+5
                                Y: =5
                                ZIndex: =3

                            btnNewOrderHeaderCases_16 As button:
                                DisabledBorderColor: |-
                                    =//RGBA(166, 166, 166, 1)
                                    _VarGblAppColors.BisleriBlue
                                DisabledColor: |-
                                    =//RGBA(166, 166, 166, 1)
                                    _VarGblAppColors.LightText
                                DisabledFill: |-
                                    =//RGBA(244, 244, 244, 1)
                                    _VarGblAppColors.BisleriBlue
                                DisplayMode: =DisplayMode.Disabled
                                Height: =50
                                OnSelect: =
                                RadiusBottomLeft: =5
                                RadiusBottomRight: =5
                                RadiusTopLeft: =5
                                RadiusTopRight: =5
                                Size: =_VarGblAppFonts.Size.Tiny
                                Text: ="E. Jars"
                                Width: =62
                                X: =btnNewOrderHeaderPcs_17.X+btnNewOrderHeaderPcs_17.Width+5
                                Y: =5
                                ZIndex: =4

                            btnNewOrderHeaderCases_17 As button:
                                DisabledBorderColor: |-
                                    =//RGBA(166, 166, 166, 1)
                                    _VarGblAppColors.BisleriBlue
                                DisabledColor: |-
                                    =//RGBA(166, 166, 166, 1)
                                    _VarGblAppColors.LightText
                                DisabledFill: |-
                                    =//RGBA(244, 244, 244, 1)
                                    _VarGblAppColors.BisleriBlue
                                DisplayMode: =DisplayMode.Disabled
                                Height: =50
                                OnSelect: =
                                RadiusBottomLeft: =5
                                RadiusBottomRight: =5
                                RadiusTopLeft: =5
                                RadiusTopRight: =5
                                Size: =_VarGblAppFonts.Size.Tiny
                                Text: ="Disc."
                                Width: =62
                                X: =btnNewOrderHeaderCases_16.X+btnNewOrderHeaderCases_16.Width+5
                                Y: =5
                                ZIndex: =5

                            btnNewOrderHeaderCases_18 As button:
                                DisabledBorderColor: |-
                                    =//RGBA(166, 166, 166, 1)
                                    _VarGblAppColors.BisleriBlue
                                DisabledColor: |-
                                    =//RGBA(166, 166, 166, 1)
                                    _VarGblAppColors.LightText
                                DisabledFill: |-
                                    =//RGBA(244, 244, 244, 1)
                                    _VarGblAppColors.BisleriBlue
                                DisplayMode: =DisplayMode.Disabled
                                Height: =50
                                OnSelect: =
                                RadiusBottomLeft: =5
                                RadiusBottomRight: =5
                                RadiusTopLeft: =5
                                RadiusTopRight: =5
                                Size: =_VarGblAppFonts.Size.Tiny
                                Text: ="Tax"
                                Width: =62
                                X: =btnNewOrderHeaderCases_17.X+btnNewOrderHeaderCases_17.Width+5
                                Y: =5
                                ZIndex: =6

                            btnNewOrderHeaderCases_19 As button:
                                DisabledBorderColor: |-
                                    =//RGBA(166, 166, 166, 1)
                                    _VarGblAppColors.BisleriBlue
                                DisabledColor: |-
                                    =//RGBA(166, 166, 166, 1)
                                    _VarGblAppColors.LightText
                                DisabledFill: |-
                                    =//RGBA(244, 244, 244, 1)
                                    _VarGblAppColors.BisleriBlue
                                DisplayMode: =DisplayMode.Disabled
                                Height: =50
                                OnSelect: =
                                RadiusBottomLeft: =5
                                RadiusBottomRight: =5
                                RadiusTopLeft: =5
                                RadiusTopRight: =5
                                Size: =_VarGblAppFonts.Size.Tiny
                                Text: ="Price"
                                Width: =62
                                X: =btnNewOrderHeaderCases_18.X+btnNewOrderHeaderCases_18.Width+5
                                Y: =5
                                ZIndex: =7

                            btnNewOrderHeaderCases_20 As button:
                                DisabledBorderColor: |-
                                    =//RGBA(166, 166, 166, 1)
                                    _VarGblAppColors.BisleriBlue
                                DisabledColor: |-
                                    =//RGBA(166, 166, 166, 1)
                                    _VarGblAppColors.LightText
                                DisabledFill: |-
                                    =//RGBA(244, 244, 244, 1)
                                    _VarGblAppColors.BisleriBlue
                                DisplayMode: =DisplayMode.Disabled
                                Height: =50
                                OnSelect: =
                                RadiusBottomLeft: =5
                                RadiusBottomRight: =5
                                RadiusTopLeft: =5
                                RadiusTopRight: =5
                                Size: =_VarGblAppFonts.Size.Tiny
                                Text: ="Total Price"
                                Width: =62
                                X: =btnNewOrderHeaderCases_19.X+btnNewOrderHeaderCases_19.Width+5
                                Y: =5
                                ZIndex: =8

                            btnNewOrderHeaderCases_21 As button:
                                DisabledBorderColor: |-
                                    =//RGBA(166, 166, 166, 1)
                                    _VarGblAppColors.BisleriBlue
                                DisabledColor: |-
                                    =//RGBA(166, 166, 166, 1)
                                    _VarGblAppColors.LightText
                                DisabledFill: |-
                                    =//RGBA(244, 244, 244, 1)
                                    _VarGblAppColors.BisleriBlue
                                DisplayMode: =DisplayMode.Disabled
                                Height: =50
                                OnSelect: =
                                RadiusBottomLeft: =5
                                RadiusBottomRight: =5
                                RadiusTopLeft: =5
                                RadiusTopRight: =5
                                Size: =_VarGblAppFonts.Size.Tiny
                                Text: ="Inv. Price"
                                Width: =62
                                X: =btnNewOrderHeaderCases_20.X+btnNewOrderHeaderCases_20.Width+5
                                Y: =5
                                ZIndex: =9

                        contHomeOrdersData_1 As groupContainer.horizontalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            FillPortions: =0
                            Height: =galHomeOrdersData_1.Height
                            LayoutMinHeight: =570
                            LayoutMinWidth: =640
                            LayoutMode: =LayoutMode.Auto
                            Width: =Parent.Width
                            ZIndex: =2

                            galHomeOrdersData_1 As gallery.galleryVertical:
                                AccessibleLabel: ="galHomeOrdersData"
                                AlignInContainer: =AlignInContainer.SetByContainer
                                Fill: |-
                                    =//RGBA(0, 0, 0, 0)
                                    _VarGblAppColors.LightText
                                FillPortions: =0
                                FocusedBorderColor: =Color.Transparent
                                FocusedBorderThickness: =0.2
                                Height: =(galHomeOrdersData_1.TemplateHeight * CountRows(galHomeOrdersData_1.AllItems)) + 30
                                Items: =colCartItems
                                Layout: =Layout.Vertical
                                LayoutMinHeight: =413
                                LayoutMinWidth: =1200
                                ShowScrollbar: =false
                                TabIndex: =0
                                TemplateSize: =60
                                Width: =Parent.Width
                                ZIndex: =1

                                btnHomeOrdersBackground_1 As button:
                                    DisabledBorderColor: =If(ThisItem.schemeOrder, Color.Red, _VarGblAppColors.BisleriBlue)
                                    DisabledFill: |-
                                        =//RGBA(244, 244, 244, 1)
                                        ColorFade( _VarGblAppColors.BisleriBlue, 80%)
                                    DisplayMode: =DisplayMode.Disabled
                                    Height: =58
                                    OnSelect: =Select(Parent)
                                    Size: =24
                                    Text: =""
                                    Width: =640
                                    ZIndex: =1

                                lblHomeOrdersCustomer_1 As label:
                                    Align: =Align.Center
                                    Fill: |-
                                        =RGBA(0, 0, 0, 0)
                                        //_VarGblAppColors.LightText
                                    Height: =58
                                    OnSelect: =Select(Parent)
                                    Size: =8
                                    Text: =LookUp('SKU Masters', 'SKU Master' = ThisItem.productId).'Item DescriptionÂ '
                                    Width: =100
                                    ZIndex: =2

                                lblHomeOrdersProduct_1 As label:
                                    Align: =Align.Center
                                    Height: =50
                                    OnSelect: =Select(Parent)
                                    Size: =_VarGblAppFonts.Size.Tiny
                                    Text: |-
                                        =
                                           ThisItem.qtyCases
                                    Width: =65
                                    X: =103
                                    Y: =4
                                    ZIndex: =3

                                lblHomeOrdersValue_1 As label:
                                    Align: =Align.Center
                                    Fill: |-
                                        =RGBA(0, 0, 0, 0)
                                        //_VarGblAppColors.LightText
                                    Height: =50
                                    OnSelect: =Select(Parent)
                                    Size: =_VarGblAppFonts.Size.Tiny
                                    Text: |-
                                        =
                                           ThisItem.qtyPcs
                                    Width: =65
                                    X: =btnNewOrderHeaderPcs_17.X
                                    Y: =4
                                    ZIndex: =4

                                lblHomeOrdersMode_1 As label:
                                    Align: =Align.Center
                                    Fill: |-
                                        =RGBA(0, 0, 0, 0)
                                        //_VarGblAppColors.LightText
                                    Height: =50
                                    OnSelect: =Select(Parent)
                                    Size: =_VarGblAppFonts.Size.Tiny
                                    Text: =ThisItem.emptyJar
                                    Width: =65
                                    X: =btnNewOrderHeaderCases_16.X
                                    Y: =4
                                    ZIndex: =5

                                lblHomeOrdersMode_2 As label:
                                    Align: =Align.Center
                                    Fill: |-
                                        =RGBA(0, 0, 0, 0)
                                        //_VarGblAppColors.LightText
                                    Height: =50
                                    OnSelect: =Select(Parent)
                                    Size: =_VarGblAppFonts.Size.Tiny
                                    Text: =ThisItem.discount
                                    Width: =65
                                    X: =btnNewOrderHeaderCases_17.X
                                    Y: =4
                                    ZIndex: =6

                                lblHomeOrdersMode_3 As label:
                                    Align: =Align.Center
                                    Fill: |-
                                        =RGBA(0, 0, 0, 0)
                                        //_VarGblAppColors.LightText
                                    Height: =50
                                    OnSelect: =Select(Parent)
                                    Size: =_VarGblAppFonts.Size.Tiny
                                    Text: |-
                                        =If(
                                            !IsBlank(ThisItem.taxAmount),
                                            Concatenate(
                                                "â¹",
                                                Text(
                                                    ( ThisItem.taxAmount),
                                                    "[$-hi-IN]##,##,##,###",
                                                    "hi-IN"
                                                )
                                            ),
                                            Concatenate(
                                                "â¹",
                                                Text(
                                                    (ThisItem.discountedPrice * (ThisItem.tax * 0.01)),
                                                    "[$-hi-IN]##,##,##,###",
                                                    "hi-IN"
                                                )
                                            )
                                        )
                                    Width: =65
                                    X: =btnNewOrderHeaderCases_18.X
                                    Y: =4
                                    ZIndex: =7

                                lblHomeOrdersMode_4 As label:
                                    Align: =Align.Center
                                    Fill: |-
                                        =RGBA(0, 0, 0, 0)
                                        //_VarGblAppColors.LightText
                                    Height: =50
                                    OnSelect: =Select(Parent)
                                    Size: =_VarGblAppFonts.Size.Tiny
                                    Text: |-
                                        =Concatenate(
                                            "â¹",
                                            Text(
                                                ThisItem.price,
                                                "[$-hi-IN]##,##,##,###",
                                                "hi-IN"
                                            )
                                        )
                                    Width: =65
                                    X: =btnNewOrderHeaderCases_19.X
                                    Y: =4
                                    ZIndex: =8

                                lblHomeOrdersMode_5 As label:
                                    Align: =Align.Center
                                    Fill: |-
                                        =RGBA(0, 0, 0, 0)
                                        //_VarGblAppColors.LightText
                                    Height: =50
                                    OnSelect: =Select(Parent)
                                    Size: =_VarGblAppFonts.Size.Tiny
                                    Text: |-
                                        =Concatenate(
                                            "â¹",
                                            Text(
                                                (ThisItem.discountedPrice + ThisItem.emptyJarValue),
                                                "[$-hi-IN]##,##,##,###",
                                                "hi-IN"
                                            )
                                        )
                                    Width: =65
                                    X: =btnNewOrderHeaderCases_20.X
                                    Y: =4
                                    ZIndex: =9

                                lblHomeOrdersMode_6 As label:
                                    Align: =Align.Center
                                    Fill: |-
                                        =RGBA(0, 0, 0, 0)
                                        //_VarGblAppColors.LightText
                                    Height: =50
                                    OnSelect: =Select(Parent)
                                    Size: =_VarGblAppFonts.Size.Tiny
                                    Text: |-
                                        =If(
                                            !IsBlank(ThisItem.taxAmount),
                                            Concatenate(
                                                "â¹",
                                                Text((ThisItem.taxAmount) + ThisItem.discountedPrice + ThisItem.emptyJarValue,
                                                "[$-hi-IN]##,##,##,###",
                                                "hi-IN"
                                            )),
                                            Concatenate(
                                                "â¹",
                                                Text(
                                                    ((ThisItem.discountedPrice * (ThisItem.tax * 0.01)) + ThisItem.discountedPrice + ThisItem.emptyJarValue),
                                                    "[$-hi-IN]##,##,##,###",
                                                    "hi-IN"
                                                )
                                            )
                                        )
                                    Width: =65
                                    X: =btnNewOrderHeaderCases_21.X - 10
                                    Y: =4
                                    ZIndex: =10

                                Icon9 As icon.Trash:
                                    AccessibleLabel: ="Icon9"
                                    Color: =_VarGblAppColors.BisleriBlue
                                    Height: =14
                                    Icon: =Icon.Trash
                                    OnSelect: |
                                        =Remove(
                                            colCartItems,
                                            LookUp(
                                                colCartItems,
                                                schemeOrder = true && SchemeOrderProductReference = ThisItem.productId
                                            )
                                        );
                                        Remove(
                                            colCartItems,
                                            ThisItem
                                        );
                                    TabIndex: =0
                                    Visible: =ThisItem.schemeOrder = false
                                    Width: =17
                                    X: =596
                                    Y: =4
                                    ZIndex: =11

            Group10 As group:
                Height: =5
                Width: =5
                X: =60
                Y: =60
                ZIndex: =35

                btnPaymentConfirm_4 As button:
                    DisplayMode: |-
                        =If(
                            CountRows(colCartItems) > 0 && IsBlank(lblPaymentInvoiceNoValue_2.Text),
                            DisplayMode.Edit,
                            DisplayMode.Disabled
                        )
                    Fill: =_VarGblAppColors.BisleriBlue
                    FocusedBorderThickness: =2
                    Height: =34
                    HoverFill: =ColorFade(_VarGblAppColors.BisleriBlue, -20%)
                    OnSelect: =Set(varSelectedVisitActiveTab, 1)
                    PaddingLeft: =15
                    RadiusBottomLeft: =5
                    RadiusBottomRight: =5
                    RadiusTopLeft: =5
                    RadiusTopRight: =5
                    Size: =_VarGblAppFonts.Size.Medium
                    Text: ="EDIT"
                    Width: =95
                    X: =510
                    Y: =13
                    ZIndex: =33

                Icon8 As icon.Edit:
                    AccessibleLabel: ="icnEdit"
                    Color: =_VarGblAppColors.BisleriBlueLight
                    DisplayMode: |-
                        =If(
                            CountRows(colCartItems) > 0 && IsBlank(lblPaymentInvoiceNoValue_2.Text),
                            DisplayMode.Edit,
                            DisplayMode.Disabled
                        )
                    Height: =20
                    Icon: =Icon.Edit
                    OnSelect: =Set(varSelectedVisitActiveTab, 1)
                    TabIndex: =0
                    Width: =20
                    X: =516
                    Y: =21
                    ZIndex: =34

            Container5 As groupContainer.manualLayoutContainer:
                Height: =771
                Visible: =CountRows(CreateOrderRecord) > 0 || First(CreateInvHeader).'IRN Message'="N"
                Width: =640
                Y: =Container7.Height + Container7.Y + 20
                ZIndex: =39

                lblModeOfPayment_2 As label:
                    FontWeight: =FontWeight.Semibold
                    Size: =_VarGblAppFonts.Size.Title
                    Text: ="Mode of Payment"
                    Width: =560
                    X: =40
                    Y: =185
                    ZIndex: =6

                rdbModeOfPayment_2 As radio:
                    AccessibleLabel: ="rdbModeOfPayment_1"
                    Default: |-
                        =//OrderData.'Mode Of Payment'
                        If(
                            OrderData.'Mode Of Payment' = 'Payment Type (choice)'.CASH,
                            'Payment Mode (Choice)'.CASH,
                            OrderData.'Mode Of Payment' = 'Payment Type (choice)'.COUPON,
                            'Payment Mode (Choice)'.COUPON,
                            OrderData.'Mode Of Payment' = 'Payment Type (choice)'.KOTAK,
                            'Payment Mode (Choice)'.KOTAK,
                            OrderData.'Mode Of Payment' = 'Payment Type (choice)'.PAYTM,
                            'Payment Mode (Choice)'.PAYTM
                        )
                    FocusedBorderColor: =Color.Transparent
                    FocusedBorderThickness: =0.1
                    Height: =108
                    HoverColor: =RGBA(0, 0, 0, 1)
                    HoverFill: =Color.Transparent
                    Items: |-
                        =//Table({Value: OrderData.'Mode Of Payment'})
                        If(
                            OrderData.'Mode Of Payment' = 'Payment Type (choice)'.CASH,
                            ['Payment Mode (Choice)'.CASH],
                            OrderData.'Mode Of Payment' = 'Payment Type (choice)'.COUPON,
                            ['Payment Mode (Choice)'.COUPON],
                            OrderData.'Mode Of Payment' = 'Payment Type (choice)'.KOTAK,
                            [
                                'Payment Mode (Choice)'.CASH,
                                'Payment Mode (Choice)'.KOTAK
                            ],
                            OrderData.'Mode Of Payment' = 'Payment Type (choice)'.PAYTM,
                            [
                                'Payment Mode (Choice)'.CASH,
                                'Payment Mode (Choice)'.KOTAK,
                                'Payment Mode (Choice)'.PAYTM
                            ]
                        )
                    Layout: =Layout.Horizontal
                    PressedColor: =Color.Black
                    PressedFill: =Color.Transparent
                    RadioSelectionFill: =_VarGblAppColors.BisleriBlue
                    RadioSize: =42
                    Size: =_VarGblAppFonts.Size.Medium
                    Width: =380
                    X: =30
                    Y: =212
                    ZIndex: =7

                btnPaymentCancel_2 As button:
                    DisplayMode: =If(IsBlank(lblPaymentInvoiceNoValue_2.Text), DisplayMode.Disabled, DisplayMode.Edit)
                    Fill: =_VarGblAppColors.BisleriBlue
                    FocusedBorderThickness: =2
                    Height: =50
                    HoverFill: =ColorFade(_VarGblAppColors.BisleriBlue, -20%)
                    OnSelect: =Navigate('Visit Screen');
                    Size: =_VarGblAppFonts.Size.UpperMedium
                    Text: ="Cancel"
                    Width: =150
                    X: =321
                    Y: =690
                    ZIndex: =8

                shpUpperRect_2 As rectangle:
                    DisplayMode: =DisplayMode.Disabled
                    Fill: =_VarGblAppColors.BottomListBg
                    Height: =60
                    Width: =App.Width
                    ZIndex: =9

                shpLowerRect_2 As rectangle:
                    DisplayMode: =DisplayMode.Disabled
                    Fill: =_VarGblAppColors.BottomListBg
                    Height: =60
                    Width: =App.Width
                    Y: =120
                    ZIndex: =10

                lblPaymentIncoiceNo_2 As label:
                    Color: =_VarGblAppColors.PrimaryText
                    FontWeight: =FontWeight.Bold
                    Height: =60
                    Size: =_VarGblAppFonts.Size.UpperMedium
                    Text: ="Invoice No."
                    Width: =307
                    X: =10
                    ZIndex: =11

                lblPaymentAmount_2 As label:
                    Color: =_VarGblAppColors.PrimaryText
                    FontWeight: =FontWeight.Bold
                    Height: =60
                    Size: =_VarGblAppFonts.Size.UpperMedium
                    Text: ="Amount (INR)"
                    Width: =307
                    X: =333
                    ZIndex: =12

                lblPaymentInvoiceNoValue_2 As label:
                    Color: =_VarGblAppColors.BisleriBlue
                    FontWeight: =FontWeight.Bold
                    Height: =60
                    Size: =21
                    Text: =First(CreateInvHeader).'Invoice Number'
                    Width: =307
                    X: =10
                    Y: =60
                    ZIndex: =13

                lblPaymentAmountValue_2 As label:
                    Color: =_VarGblAppColors.BisleriBlue
                    FontWeight: =FontWeight.Bold
                    Height: =60
                    Size: =21
                    Text: |-
                        =/*Concatenate(
                            "â¹",
                            Text(
                                ((Sum(
                                    colCartItems,
                                    discountedPrice
                                ) * ((Sum(
                                            colCartItems,
                                            tax
                                        )) * 0.01)) + Sum(
                                    colCartItems,
                                    discountedPrice
                                ) + Sum(
                                    colCartItems,
                                    emptyJarValue
                                )),
                                "[$-hi-IN]##,##,##,###",
                                "hi-IN"
                            )
                        )*/
                        Concatenate(
                            "â¹",
                            Text(
                                 Sum(
                                    colCartItems,
                                    netAmount
                                ),
                                "[$-hi-IN]##,##,##,###",
                                "hi-IN"
                            )
                        )
                    Width: =286
                    X: =334
                    Y: =60
                    ZIndex: =14

                lblPaymentDetails_2 As label:
                    Color: =_VarGblAppColors.PrimaryText
                    FontWeight: =FontWeight.Bold
                    Height: =60
                    Size: =_VarGblAppFonts.Size.UpperMedium
                    Text: ="Payment Details"
                    Width: =307
                    X: =10
                    Y: =120
                    ZIndex: =16

                ImgPaymentPaytm_2 As image:
                    AccessibleLabel: ="ImgPaymentPaytm_2"
                    BorderColor: =_VarGblAppColors.HeaderBg
                    BorderThickness: =2
                    Height: =67
                    Image: ='Paytm Image'
                    OnSelect: |
                        =Set(
                            orderId,
                            RandBetween(
                                0,
                                9999
                            )
                        );
                        ClearCollect(
                            payments,
                            Payment.Payment1(
                                {
                                    Orderid: Right(
                                        First(CreateOrderRecord).'Order Id',
                                        4
                                    ),
                                    Amount: First(CreateOrderRecord).'Net Amount'
                                }
                            )
                        );
                        /*Set(
                            amt,
                            txtPaymentAmountValue
                        );*/
                        /*Set(
                            var,
                            Blank()
                        );*/
                        Navigate(PaymentQR);
                    TabIndex: =0
                    Visible: |-
                        =//If(OrderData.'Mode Of Payment' ='Payment Type (choice)'.PAYTM, true, false)
                        If(rdbModeOfPayment_2.Selected.Value='Payment Mode (Choice)'.PAYTM, true, false)
                    Width: =135
                    X: =465
                    Y: =228
                    ZIndex: =19

                btnPaymentConfirm_2 As button:
                    DisplayMode: |-
                        =If(
                            OrderData.'Mode Of Payment' = 'Payment Type (choice)'.COUPON,
                            If(
                                ((Value(txtPaymentAmountValue_4.Text) < Value(
                                    Text(
                                 Sum(
                                    colCartItems,
                                    netAmount
                                ),
                                "[$-hi-IN]##,##,##,###",
                                "hi-IN"
                            )
                                ) || Value(txtPaymentAmountValue_4.Text) > Value(
                                    Text(
                                 Sum(
                                    colCartItems,
                                    netAmount
                                ),
                                "[$-hi-IN]##,##,##,###",
                                "hi-IN"
                            )
                                ) || Value(txtPaymentAmountValue_3.Text)<=0) || IsBlank(lblPaymentInvoiceNoValue_2.Text)) || CountRows(colPaymentsRec)>0,
                                DisplayMode.Disabled,
                                DisplayMode.Edit
                            ),
                            OrderData.'Mode Of Payment' = 'Payment Type (choice)'.CASH || OrderData.'Mode Of Payment' = 'Payment Type (choice)'.CREDIT || OrderData.'Mode Of Payment' = 'Payment Type (choice)'.KOTAK || OrderData.'Mode Of Payment' = 'Payment Type (choice)'.PAYTM,
                            If(
                                ((Value(txtPaymentAmountValue_2.Text) < Value(
                                    Text(
                                 Sum(
                                    colCartItems,
                                    netAmount
                                ),
                                "[$-hi-IN]##,##,##,###",
                                "hi-IN"
                            )
                                ) || Value(txtPaymentAmountValue_2.Text) > Value(
                                    Text(
                                 Sum(
                                    colCartItems,
                                    netAmount
                                ),
                                "[$-hi-IN]##,##,##,###",
                                "hi-IN"
                            )
                                )) || IsBlank(lblPaymentInvoiceNoValue_2.Text)) || CountRows(colPaymentsRec)>0,
                                DisplayMode.Disabled,
                                DisplayMode.Edit
                            )
                        )
                    Fill: =_VarGblAppColors.BisleriBlue
                    FocusedBorderThickness: =2
                    Height: =50
                    HoverFill: =ColorFade(_VarGblAppColors.BisleriBlue, -20%)
                    OnSelect: |-
                        =If(
                            IsBlank(txtPaymentAmountValue_9.Text) && rdbModeOfPayment_2.Selected.Value = 'Payment Mode (Choice)'.KOTAK,
                            Notify(
                                "Please enter Cheque Number",
                                NotificationType.Warning,
                                5000
                            ),
                            IsBlank(ComboBox1_1.Selected) && rdbModeOfPayment_2.Selected.Value = 'Payment Mode (Choice)'.KOTAK,
                            Notify(
                                "Please enter Bank Name",
                                NotificationType.Warning,
                                5000
                            ),
                            IsBlank(DatePicker3_1.SelectedDate) && rdbModeOfPayment_2.Selected.Value = 'Payment Mode (Choice)'.KOTAK,
                            Notify(
                                "Please enter Cheque Date",
                                NotificationType.Warning,
                                5000
                            ),
                            Patch(
                                'Order Headers',
                                LookUp(
                                    'Order Headers',
                                    'Order Id' = CreateOrderRecorddata.'Order Id'
                                ),
                                {'Payment Status': 'Payment Status Choice'.Completed}
                            );
                            If(
                                Not(
                                    LookUp(
                                        Customers_1,
                                        Account = OrderData.Account
                                    ).'Mode Of Payment' = 'Payment Type (choice)'.CREDIT
                                ),
                                ClearCollect(
                                    colPaymentsRec,
                                    Patch(
                                        Payments,
                                        Defaults(Payments),
                                        {
                                            'Receipt Date': Today(),
                                            Customer: LookUp(
                                                Customers_1,
                                                Account = OrderData.Account
                                            ),
                                            Salesperson: LookUp(
                                                Users,
                                                'Primary Email' = User().Email
                                            ),
                                            Amount: Sum(
                                                colCartItems,
                                                netAmount
                                            ),
                                            'Payment Mode': rdbModeOfPayment_2.Selected.Value,
                                            //'Mode of Payment': OrderData.'Mode Of Payment',
                                            Route: Areavalueid,
                                            'Van No': LookUp(
                                                Warehouses,
                                                Warehouse = varUserVanNo.Van.Warehouse
                                            ),
                                            'Payment Type': 'Payment Type (Payments)'.'Normal Flow',
                                            Order: LookUp(
                                                'Order Headers',
                                                'Order Id' = CreateOrderRecorddata.'Order Id'
                                            ),
                                            Invoice: LookUp(
                                                'Invoice Headers',
                                                'Invoice Number' = CreateInvHeaderdata.'Invoice Number'
                                            ),
                                            ChequeNo: txtPaymentAmountValue_9.Text,
                                            ChequeDate: DatePicker3_1.SelectedDate,
                                            Bank: ComboBox1_1.Selected,
                                            'Coupon Count': Value(txtPaymentAmountValue_3.Text)
                                        }
                                    );
                                );
                            );
                             ////////////////////////////////////////////////////IRN Item Data Condition
                        Clear(ManipulatedCartCollection);
                            /*Set(
                                testButton,
                                'PowerApp->RespondtoaPowerApporflow'.Run(CreateInvHeaderdata.'Invoice Header');
                            );*/
                        If(
                                CountRows(CreateOrderRecord) > 0 /*&& CountRows(CreateItemsRecord) > 0 */
                        && !IsBlank(
                                    LookUp(
                                        AllCustomerss,
                                        Account = OrderData.Account
                                    ).GSTIN
                                ) && (((LookUp(
                                    AllCustomerss,
                                    Account = OrderData.Account
                                ).'Customer Group'.Name <> "KEY-RT") && LookUp(
                                    AllCustomerss,
                                    Account = OrderData.Account
                                ).Branch.Name = "PUNE") || ((LookUp(
                                    AllCustomerss,
                                    Account = OrderData.Account
                                ).'Customer Group'.Name <> "COR-RT") && LookUp(
                                    AllCustomerss,
                                    Account = OrderData.Account
                                ).Branch.Name = "Mumbai")),
                                Set(
                                    testButton,
                                    IRNGeneration.Run(CreateInvHeaderdata.'Invoice Header')
                                );
                                Clear(coltempErrorMessage);
                                Clear(colFinalErrorMessage);
                                If(
                                    !IsBlank(testButton.errormessage),
                                    ClearCollect(
                                        coltempSplit,
                                        Split(
                                            testButton.errormessage,//"error_message",
                                            "}"
                                        )
                                    );
                                    ForAll(
                                        coltempSplit,
                        //If("message" exactin Text(ThisRecord.Value),Â 
                                        Collect(
                                            coltempErrorMessage,
                                            LastN(
                                                Split(
                                                    ThisRecord.Value,
                                                    Char(34) & "," & Char(34)
                                                ),
                                                2
                                            )
                                        );
                                        
                        //);
                                    );
                                    RemoveIf(
                                        coltempErrorMessage,
                                        !("message" exactin Text(ThisRecord.Value))
                                    );
                                    
                        Â  // ClearCollect(colFinalErrorMessage, LastN(coltempErrorMessage, CountRows(coltempErrorMessage)-1));
                        Clear(colFinalErrorMessage);
                                    ForAll(
                                        coltempErrorMessage As I,
                                        Collect(
                                            colFinalErrorMessage,
                                            Last(
                                                Split(
                                                    I.Value,
                                                    Char(34) & ":" & Char(34)
                                                )
                                            )
                                        )
                                    );
                                    Set(
                                        varIRN,
                                        true
                                    );
                                );
                                /*
                                If(!IsBlank(testButton.errormessage),
                          
                        Clear(coltempErrorMessage);
                            ForAll(Split(testButton.errormessage, //"error_message",
                            " : "),
                            Collect(coltempErrorMessage, First(Split(First(Split(ThisRecord.Value,",")).Value, Char(34))));
                            );
                           ClearCollect(colFinalErrorMessage, LastN(coltempErrorMessage, CountRows(coltempErrorMessage)-1));
                           Set(
                                            varIRN,
                                            true
                                        );
                        );
                                */
                                /*Patch(
                                    'Invoice Headers',
                                    LookUp(
                                        'Invoice Headers',
                                        'Invoice Number' = CreateInvHeaderdata.'Invoice Number'
                                    ),
                                        {
                                            'Signed QR Code': Text(testButton.qr),
                                            'IRN Number': Text(testButton.qrno),
                                            'IRN Message': Text(testButton.status)
                                        }
                                );*/
                        Set(
                                    varConfirmationIRN,
                                    "signedQRGenerated"
                                );
                                /*Notify(
                                    NotificationType.Success,
                                    2000
                                );*/
                        If(
                                    !IsBlank(testButton),
                                    Patch(
                                        'Invoice Headers',
                                        LookUp(
                                            'Invoice Headers',
                                            'Invoice Number' = CreateInvHeaderdata.'Invoice Number'
                                        ),
                                        {
                                            'Signed QR Code': Text(testButton.qr),
                                            'IRN Number': Text(testButton.qrno),
                                            'IRN Message': Text(testButton.status)
                                        }
                                    )
                                );
                                ,
                                IsBlank(
                                    LookUp(
                                        AllCustomerss,
                                        Account = OrderData.Account
                                    ).GSTIN
                                ),
                                Patch(
                                    'Invoice Headers',
                                    LookUp(
                                        'Invoice Headers',
                                        'Invoice Number' = CreateInvHeaderdata.'Invoice Number'
                                    ),
                                    {
                                        /*'Signed QR Code': Text(testButton.qr),
                                        'IRN Number': Text(testButton.qrno),
                                        'IRN Message': Text(testButton.status),*/
                                        'Local QR ': JSON(
                                            {
                                                gstin: "27AAFCD5862R013",
                                                TranDtls: {
                                                    TaxSch: "GST",
                                                    SupTyp: "B2B",
                                                    RegRev: "N",
                                                    IgstOnIntra: "N"
                                                },
                                                DocDtls: {
                                                    Typ: "INV",
                                                    No: "RI2223C064007302",
                                                    Dt: "24/12/2022"
                                                },
                                                SellerDtls: {
                                                    Gstin: "27AAFCD5862R013",
                                                    LglNm: "MH04GR6972",
                                                    TrdNm: "MH04GR6972",
                                                    Addr1: "JUPITOR HOSPITAL",
                                                    Addr2: "THANE",
                                                    Loc: "V433",
                                                    Pin: 400407,
                                                    Stcd: "27",
                                                    Ph: "982565858",
                                                    Em: "Test123@gmail.com"
                                                },
                                                /*    
                                        BuyerDtls: {
                                            Gstin: "27AABCJ1982E1ZN",
                                            LglNm: "FORTUNE PARK LAKE CITY",
                                            TrdNm: "FORTUNE PARK LAKE CITY",
                                            Pos: "27",
                                            Addr1: "JUPITER MEDIPARKEASTERN EXPRESS HIGHWAY THANE",
                                            Addr2: "WEST",
                                            Loc: "Maharashtra",
                                            Pin: 400601,
                                            Stcd: "27",
                                            Ph: "859657852",
                                            Em: "Test123@gmail.com"
                                        },
                                */
                                                BuyerDtls: {
                                                    LglNm: OrderData.'Customer Name',
                                                    TrdNm: "",
                                                    Addr1: LookUp(
                                                        AllCustomerss,
                                                        Account = OrderData.Account
                                                    ).'Address 1: Street 1',
                                                    Addr2: LookUp(
                                                        AllCustomerss,
                                                        Account = OrderData.Account
                                                    ).'Address 1: Street 2',
                                                    Loc: LookUp(
                                                        AllCustomerss,
                                                        Account = OrderData.Account
                                                    ).'Address 1: City',
                                                    Pin: LookUp(
                                                        AllCustomerss,
                                                        Account = OrderData.Account
                                                    ).'Address 1: ZIP/Postal Code',
                                                    Stcd: Left(
                                                        LookUp(
                                                            AllCustomerss,
                                                            Account = OrderData.Account
                                                        ).GSTIN,
                                                        2
                                                    ),
                                                    Ph: LookUp(
                                                        AllCustomerss,
                                                        Account = OrderData.Account
                                                    ).'Mobile No',
                                                    Em: LookUp(
                                                        AllCustomerss,
                                                        Account = OrderData.Account
                                                    ).Email
                                                },
                                                DispDtls: {
                                                    Nm: "MH04GR6972",
                                                    Addr1: "JUPITOR HOSPITAL",
                                                    Addr2: "THANE",
                                                    Loc: "V433",
                                                    Pin: 400407,
                                                    Stcd: "27"
                                                },
                                                /*
                                        ShipDtls: {
                                            Gstin: "27AABCJ1982E1ZN",
                                            LglNm: "FORTUNE PARK LAKE CITY",
                                            TrdNm: "FORTUNE PARK LAKE CITY",
                                            Addr1: "JUPITER MEDIPARKEASTERN EXPRESS HIGHWAY THANE",
                                            Addr2: "WEST",
                                            Loc: "Maharashtra",
                                            Pin: 400601,
                                            Stcd: "27"
                                        },
                                */
                                                ShipDtls: {
                                                    Gstin: LookUp(
                                                        AllCustomerss,
                                                        Account = OrderData.Account
                                                    ).GSTIN,
                                                    LglNm: OrderData.'Customer Name',
                                                    TrdNm: "",
                                                    Addr1: LookUp(
                                                        AllCustomerss,
                                                        Account = OrderData.Account
                                                    ).'Address 1: Street 1',
                                                    Addr2: LookUp(
                                                        AllCustomerss,
                                                        Account = OrderData.Account
                                                    ).'Address 1: Street 2',
                                                    Loc: LookUp(
                                                        AllCustomerss,
                                                        Account = OrderData.Account
                                                    ).'Address 1: City',
                                                    Pin: LookUp(
                                                        AllCustomerss,
                                                        Account = OrderData.Account
                                                    ).'Address 1: ZIP/Postal Code',
                                                    Stcd: Left(
                                                        LookUp(
                                                            AllCustomerss,
                                                            Account = OrderData.Account
                                                        ).GSTIN,
                                                        2
                                                    )
                                                },
                                                ItemList: ManipulatedCartCollection
                                    //  ItemList: First(ProductList)
                                            }
                                        )
                                    }
                                );
                                Set(
                                    varConfirmationIRN,
                                    "localQRGenerated"
                                );
                                Notify(
                                    "QR has been generated sucessfully",
                                    NotificationType.Success,
                                    2000
                                );
                                ,
                                !IsBlank(
                                    LookUp(
                                        AllCustomerss,
                                        Account = OrderData.Account
                                    ).GSTIN
                                ) && ((LookUp(
                                    AllCustomerss,
                                    Account = OrderData.Account
                                ).'Customer Group'.Name = "KEY-RT" && LookUp(
                                    AllCustomerss,
                                    Account = OrderData.Account
                                ).Branch.Name = "PUNE") || (LookUp(
                                    AllCustomerss,
                                    Account = OrderData.Account
                                ).'Customer Group'.Name = "COR-RT" && LookUp(
                                    AllCustomerss,
                                    Account = OrderData.Account
                                ).Branch.Name = "Mumbai")),
                                Set(
                                    varIRN,
                                    true
                                );
                            );
                          /*  If(
                                !IsBlank(testButton),
                                Patch(
                                    'Invoice Headers',
                                    LookUp(
                                        'Invoice Headers',
                                        'Invoice Number' = CreateInvHeaderdata.'Invoice Number'
                                    ),
                                    {
                                        'Signed QR Code': Text(testButton.SignedQRCode),
                                        'IRN Number': Text(testButton.Irn),
                                        'IRN Message': Text(testButton.Success)
                                    }
                                ),
                                IsBlank(testButton) && !(LookUp(
                                    AllCustomerss,
                                    Account = OrderData.Account
                                ).'Customer Group'.Code = "KEY-RT") && !(LookUp(
                                    AllCustomerss,
                                    Account = OrderData.Account
                                ).'Customer Group'.Code = "COR-RT"),
                                Patch(
                                    'Invoice Headers',
                                    LookUp(
                                        'Invoice Headers',
                                        'Invoice Number' = CreateInvHeaderdata.'Invoice Number'
                                    ),
                                    {
                                        'Local QR ': JSON(
                                            {
                                                gstin: "27AAFCD5862R013",
                                                TranDtls: {
                                                    TaxSch: "GST",
                                                    SupTyp: "B2B",
                                                    RegRev: "N",
                                                    IgstOnIntra: "N"
                                                },
                                                DocDtls: {
                                                    Typ: "INV",
                                                    No: "RI2223C064007302",
                                                    Dt: "24/12/2022"
                                                },
                                                SellerDtls: {
                                                    Gstin: "27AAFCD5862R013",
                                                    LglNm: "MH04GR6972",
                                                    TrdNm: "MH04GR6972",
                                                    Addr1: "JUPITOR HOSPITAL",
                                                    Addr2: "THANE",
                                                    Loc: "V433",
                                                    Pin: 400407,
                                                    Stcd: "27",
                                                    Ph: "982565858",
                                                    Em: "Test123@gmail.com"
                                                },
                                                BuyerDtls: {
                                                    LglNm: OrderData.'Customer Name',
                                                    TrdNm: "",
                                                    Addr1: LookUp(
                                                        AllCustomerss,
                                                        Account = OrderData.Account
                                                    ).'Address 1: Street 1',
                                                    Addr2: LookUp(
                                                        AllCustomerss,
                                                        Account = OrderData.Account
                                                    ).'Address 1: Street 2',
                                                    Loc: LookUp(
                                                        AllCustomerss,
                                                        Account = OrderData.Account
                                                    ).'Address 1: City',
                                                    Pin: LookUp(
                                                        AllCustomerss,
                                                        Account = OrderData.Account
                                                    ).'Address 1: ZIP/Postal Code',
                                                    Stcd: Left(
                                                        LookUp(
                                                            AllCustomerss,
                                                            Account = OrderData.Account
                                                        ).GSTIN,
                                                        2
                                                    ),
                                                    Ph: LookUp(
                                                        AllCustomerss,
                                                        Account = OrderData.Account
                                                    ).'Mobile No',
                                                    Em: LookUp(
                                                        AllCustomerss,
                                                        Account = OrderData.Account
                                                    ).Email
                                                },
                                                DispDtls: {
                                                    Nm: "MH04GR6972",
                                                    Addr1: "JUPITOR HOSPITAL",
                                                    Addr2: "THANE",
                                                    Loc: "V433",
                                                    Pin: 400407,
                                                    Stcd: "27"
                                                },
                                                ShipDtls: {
                                                    Gstin: LookUp(
                                                        AllCustomerss,
                                                        Account = OrderData.Account
                                                    ).GSTIN,
                                                    LglNm: OrderData.'Customer Name',
                                                    TrdNm: "",
                                                    Addr1: LookUp(
                                                        AllCustomerss,
                                                        Account = OrderData.Account
                                                    ).'Address 1: Street 1',
                                                    Addr2: LookUp(
                                                        AllCustomerss,
                                                        Account = OrderData.Account
                                                    ).'Address 1: Street 2',
                                                    Loc: LookUp(
                                                        AllCustomerss,
                                                        Account = OrderData.Account
                                                    ).'Address 1: City',
                                                    Pin: LookUp(
                                                        AllCustomerss,
                                                        Account = OrderData.Account
                                                    ).'Address 1: ZIP/Postal Code',
                                                    Stcd: Left(
                                                        LookUp(
                                                            AllCustomerss,
                                                            Account = OrderData.Account
                                                        ).GSTIN,
                                                        2
                                                    )
                                                },
                                                ItemList: ManipulatedCartCollection
                                    //  ItemList: First(ProductList)
                                            }
                                        )
                                    }
                                );
                                Set(
                                    varConfirmationIRN,
                                    "localQRGenerated"
                                );
                                Notify(
                                    "IRN/QR has been generated sucessfully",
                                    NotificationType.Success,
                                    2000
                                );
                            ); */
                        /////////////////////////////////////////////////////////_______________STOCK UPDATION FOR CASES
                        ClearCollect(
                                CurrentQtyCases,
                                First(colCartItems).qtyCases
                            );
                            Clear(StockLinesForFIFO);
                            ForAll(
                                Filter(
                                    colCartItems,
                                    schemeOrder = false
                                ) As OneProductItem,
                                Collect(
                                    StockLinesForFIFO,
                                    Sort(
                                     //   Filter(
                                        Filter(
                                            'Stock Transfer Lines',
                                            ('Transfer Order No'.'Stock Transfer Header' in varGatePassHeaderAll.headerGUID) && (SKU.'SKU Master' = OneProductItem.productId)
                                        ),
                                          //  'Created On'>=Today()
                                        //  ),
                                        'Manufacturing date',
                                        SortOrder.Ascending
                                    )
                                );
                                Patch(
                                    CurrentQtyCases,
                                    First(CurrentQtyCases),
                                    {Value: OneProductItem.qtyCases}
                                );
                                ForAll(
                                    StockLinesForFIFO As OneFifoItem,
                                    If(
                                        First(CurrentQtyCases).Value > 0 && OneFifoItem.'Remaining Qty Cases' > 0 && OneFifoItem.SKU.'SKU Master' = OneProductItem.productId,
                                    //Checking First condition if the qty is less then remainining of old_______________________________________________
                                        If(
                                            (First(CurrentQtyCases).Value <= OneFifoItem.'Remaining Qty Cases'),
                                        //////______________CART MANIPULATION
                                            If(
                                                !IsBlank(
                                                    LookUp(
                                                        colManipulatedCartItems,
                                                        skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date' && scheme = false
                                                    )
                                                ),
                                                Patch(
                                                    colManipulatedCartItems,
                                                    LookUp(
                                                        colManipulatedCartItems,
                                                        skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date' && scheme = false
                                                    ),
                                                    {
                                                        qtyCases: ((LookUp(
                                                            colManipulatedCartItems,
                                                            skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date'
                                                        ).qtyCases) + (First(CurrentQtyCases).Value)),
                                                        totalCasePriceWithoutDisc: OneProductItem.caseUnitPrice * (((LookUp(
                                                            colManipulatedCartItems,
                                                            skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date'
                                                        ).qtyCases) + (First(CurrentQtyCases).Value))),
                                                        scheme: false
                                                    }
                                                ),
                                                Collect(
                                                    colManipulatedCartItems,
                                                    {
                                                        cartItem: OneProductItem,
                                                        manDate: OneFifoItem.'Manufacturing date',
                                                        skuId: OneFifoItem.SKU.'SKU Master',
                                                        qtyCases: First(CurrentQtyCases).Value,
                                                        qtyPcs: 0,
                                                        scheme: false,
                                                        caseUnitPrice: OneProductItem.caseUnitPrice,
                                                        pcsUnitPrice: OneProductItem.pcsUnitPrice,
                                                        totalCasePriceWithoutDisc: OneProductItem.caseUnitPrice * First(CurrentQtyCases).Value,
                                                        totalPcsPriceWithoutDisc: 0,
                                                        TotalTax: OneProductItem.tax,
                                                        cgst: Value(OneProductItem.cgst),
                                                        sgst: Value(OneProductItem.sgst),
                                                        cess: Value(OneProductItem.cess)
                                                    }
                                                );
                                            );
                                        ///////________________UPDATE STOCK IN STOCK TRANSFER LINES
                        Patch(
                                                'Stock Transfer Lines',
                                                LookUp(
                                                    'Stock Transfer Lines' As oneStockLine,
                                                    ((oneStockLine.'Transfer Order No'.'Stock Transfer Header' = OneFifoItem.'Transfer Order No'.'Stock Transfer Header') && (oneStockLine.SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master') && DateValue(
                                                        Text(
                                                            oneStockLine.'Manufacturing date',
                                                            "dd/mm/yyyy"
                                                        )
                                                    ) = DateValue(
                                                        Text(
                                                            OneFifoItem.'Manufacturing date',
                                                            "dd/mm/yyyy"
                                                        )
                                                    )/*(oneStockLine.'Manufacturing date' = OneFifoItem.'Manufacturing date')*/
                                                  //  && IsToday(oneStockLine.'Created On')
                        )
                                                ),
                                                {
                                                    'Remaining Qty Cases': OneFifoItem.'Remaining Qty Cases' - First(CurrentQtyCases).Value,
                                                    'Invoiced Qty Cases': ((LookUp(
                                                        'Stock Transfer Lines' As oneStockLine,
                                                        ((oneStockLine.'Transfer Order No'.'Stock Transfer Header' = OneFifoItem.'Transfer Order No'.'Stock Transfer Header') && (oneStockLine.SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master') && DateValue(
                                                            Text(
                                                                oneStockLine.'Manufacturing date',
                                                                "dd/mm/yyyy"
                                                            )
                                                        ) = DateValue(
                                                            Text(
                                                                OneFifoItem.'Manufacturing date',
                                                                "dd/mm/yyyy"
                                                            )
                                                        )
                                                      //  && IsToday(oneStockLine.'Created On')
                        )
                                                    ).'Invoiced Qty Cases') + First(CurrentQtyCases).Value)
                                                }
                                            );
                                            Patch(
                                                CurrentQtyCases,
                                                First(CurrentQtyCases),
                                                {Value: 0}
                                            );
                                            ,
                                        //Checking Second condition if the (qty is greater then remainining cases) 
                                            ((First(CurrentQtyCases).Value > OneFifoItem.'Remaining Qty Cases')),
                                         //////______________CART MANIPULATION
                                            If(
                                                !IsBlank(
                                                    LookUp(
                                                        colManipulatedCartItems,
                                                        skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date' && scheme = false
                                                    )
                                                ),
                                                Patch(
                                                    colManipulatedCartItems,
                                                    LookUp(
                                                        colManipulatedCartItems,
                                                        skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date' && scheme = false
                                                    ),
                                                    {
                                                        qtyCases: ((LookUp(
                                                            colManipulatedCartItems,
                                                            skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date'
                                                        ).qtyCases) + (OneFifoItem.'Remaining Qty Cases')),
                                                        totalCasePriceWithoutDisc: OneProductItem.caseUnitPrice * (((LookUp(
                                                            colManipulatedCartItems,
                                                            skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date'
                                                        ).qtyCases) + (OneFifoItem.'Remaining Qty Cases'))),
                                                        scheme: false
                                                    }
                                                ),
                                                Collect(
                                                    colManipulatedCartItems,
                                                    {
                                                        cartItem: OneProductItem,
                                                        manDate: OneFifoItem.'Manufacturing date',
                                                        skuId: OneFifoItem.SKU.'SKU Master',
                                                        qtyCases: OneFifoItem.'Remaining Qty Cases',
                                                        qtyPcs: 0,
                                                        scheme: false,
                                                        caseUnitPrice: OneProductItem.caseUnitPrice,
                                                        pcsUnitPrice: OneProductItem.pcsUnitPrice,
                                                        totalCasePriceWithoutDisc: OneProductItem.caseUnitPrice * First(CurrentQtyCases).Value,
                                                        totalPcsPriceWithoutDisc: 0,
                                                        TotalTax: OneProductItem.tax
                                                    }
                                                );
                                            );
                                        ///////________________UPDATE STOCK IN STOCK TRANSFER LINES
                        Patch(
                                                'Stock Transfer Lines',
                                                LookUp(
                                                    'Stock Transfer Lines' As oneStockLine,
                                                    ((oneStockLine.'Transfer Order No'.'Stock Transfer Header' = OneFifoItem.'Transfer Order No'.'Stock Transfer Header') && (oneStockLine.SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master') && DateValue(
                                                        Text(
                                                            oneStockLine.'Manufacturing date',
                                                            "dd/mm/yyyy"
                                                        )
                                                    ) = DateValue(
                                                        Text(
                                                            OneFifoItem.'Manufacturing date',
                                                            "dd/mm/yyyy"
                                                        )
                                                    )
                                                  //  && IsToday(oneStockLine.'Created On')
                        )
                                                ),
                                                {
                                                    'Remaining Qty Cases': 0,
                                                    'Invoiced Qty Cases': ((LookUp(
                                                        'Stock Transfer Lines' As oneStockLine,
                                                        ((oneStockLine.'Transfer Order No'.'Stock Transfer Header' = OneFifoItem.'Transfer Order No'.'Stock Transfer Header') && (oneStockLine.SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master') && DateValue(
                                                            Text(
                                                                oneStockLine.'Manufacturing date',
                                                                "dd/mm/yyyy"
                                                            )
                                                        ) = DateValue(
                                                            Text(
                                                                OneFifoItem.'Manufacturing date',
                                                                "dd/mm/yyyy"
                                                            )
                                                        )
                                                        // && IsToday(oneStockLine.'Created On')
                        )
                                                    ).'Invoiced Qty Cases') + OneFifoItem.'Remaining Qty Cases')
                                                }
                                            );
                                            Patch(
                                                CurrentQtyCases,
                                                First(CurrentQtyCases),
                                                {Value: ((First(CurrentQtyCases).Value - OneFifoItem.'Remaining Qty Cases'))}
                                            );
                                        )
                                    )
                                )
                            );
                            
                        /////////////////////////////////////////////////////////_______________STOCK UPDATION FOR PCS       ____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________
                        ClearCollect(
                                CurrentQty,
                                First(colCartItems).qtyPcs
                            );
                            ClearCollect(
                                SequenceTestingVariable,
                                false
                            );
                            ClearCollect(
                                SequenceNo,
                                0
                            );
                            Clear(StockLinesForFIFO);
                            ForAll(
                                Filter(
                                    colCartItems,
                                    schemeOrder = false
                                ) As OneProductItem,
                                Collect(
                                    StockLinesForFIFO,
                                    Sort(
                                        Filter(
                                          //  Filter(
                                            'Stock Transfer Lines',
                                            ('Transfer Order No'.'Stock Transfer Header' in varGatePassHeaderAll.headerGUID) && (SKU.'SKU Master' = OneProductItem.productId)
                                        ),
                                          //  'Created On'>=Today()
                                        // ),
                                        'Manufacturing date',
                                        SortOrder.Ascending
                                    )
                                );
                                Patch(
                                    CurrentQty,
                                    First(CurrentQty),
                                    {Value: OneProductItem.qtyPcs}
                                );
                                ForAll(
                                    StockLinesForFIFO As OneFifoItem,
                                    If(
                                        First(CurrentQty).Value > 0 && (OneFifoItem.'Remaining Qty Pcs' > 0 || OneFifoItem.'Remaining Qty Cases' > 0) && OneFifoItem.SKU.'SKU Master' = OneProductItem.productId,
                                    //Checking First condition if the qty is less then remainining of old_______________________________________________
                                        If(
                                            (First(CurrentQty).Value <= OneFifoItem.'Remaining Qty Pcs'),
                                        //////______________CART MANIPULATION
                                            If(
                                                !IsBlank(
                                                    LookUp(
                                                        colManipulatedCartItems,
                                                        skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date' && scheme = false
                                                    )
                                                ),
                                                Patch(
                                                    colManipulatedCartItems,
                                                    LookUp(
                                                        colManipulatedCartItems,
                                                        skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date' && scheme = false
                                                    ),
                                                    {
                                                        qtyPcs: ((LookUp(
                                                            colManipulatedCartItems,
                                                            skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date'
                                                        ).qtyPcs) + (First(CurrentQty).Value)),
                                                        totalPcsPriceWithoutDisc: OneProductItem.pcsUnitPrice * (((LookUp(
                                                            colManipulatedCartItems,
                                                            skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date'
                                                        ).qtyPcs) + (First(CurrentQty).Value))),
                                                        scheme: false
                                                    }
                                                ),
                                                Collect(
                                                    colManipulatedCartItems,
                                                    {
                                                        cartItem: OneProductItem,
                                                        manDate: OneFifoItem.'Manufacturing date',
                                                        skuId: OneFifoItem.SKU.'SKU Master',
                                                        qtyCases: 0,
                                                        qtyPcs: First(CurrentQty).Value,
                                                        scheme: false,
                                                        caseUnitPrice: OneProductItem.caseUnitPrice,
                                                        pcsUnitPrice: OneProductItem.pcsUnitPrice,
                                                        totalPcsPriceWithoutDisc: OneProductItem.pcsUnitPrice * First(CurrentQty).Value,
                                                        totalCasePriceWithoutDisc: 0,
                                                        TotalTax: OneProductItem.tax
                                                    }
                                                );
                                            );
                                        ///////________________UPDATE STOCK IN STOCK TRANSFER LINES
                        Patch(
                                                'Stock Transfer Lines',
                                                LookUp(
                                                    'Stock Transfer Lines' As oneStockLine,
                                                    ((oneStockLine.'Transfer Order No'.'Stock Transfer Header' = OneFifoItem.'Transfer Order No'.'Stock Transfer Header') && (oneStockLine.SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master') && DateValue(
                                                        Text(
                                                            oneStockLine.'Manufacturing date',
                                                            "dd/mm/yyyy"
                                                        )
                                                    ) = DateValue(
                                                        Text(
                                                            OneFifoItem.'Manufacturing date',
                                                            "dd/mm/yyyy"
                                                        )
                                                    )
                                                   // && IsToday(oneStockLine.'Created On')
                        )
                                                ),
                                                {
                                                    'Remaining Qty Pcs': OneFifoItem.'Remaining Qty Pcs' - First(CurrentQty).Value,
                                                    'Invoiced Qty Pcs.': ((LookUp(
                                                        'Stock Transfer Lines' As oneStockLine,
                                                        ((oneStockLine.'Transfer Order No'.'Stock Transfer Header' = OneFifoItem.'Transfer Order No'.'Stock Transfer Header') && (oneStockLine.SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master') && DateValue(
                                                            Text(
                                                                oneStockLine.'Manufacturing date',
                                                                "dd/mm/yyyy"
                                                            )
                                                        ) = DateValue(
                                                            Text(
                                                                OneFifoItem.'Manufacturing date',
                                                                "dd/mm/yyyy"
                                                            )
                                                        )
                                                       //  && IsToday(oneStockLine.'Created On')
                        )
                                                    ).'Invoiced Qty Pcs.') + First(CurrentQty).Value)
                                                }
                                            );
                                            Patch(
                                                CurrentQty,
                                                First(CurrentQty),
                                                {Value: 0}
                                            );
                                            ,
                                        //Checking Second condition if the (qty is greater then remainining pcs) && ((Qty-Rem Pcs)< Conversion) ______
                                            ((First(CurrentQty).Value > OneFifoItem.'Remaining Qty Pcs') && ((First(CurrentQty).Value - OneFifoItem.'Remaining Qty Pcs') < (OneFifoItem.'Remaining Qty Cases' * LookUp(
                                                'Item UOMS',
                                                SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master'
                                            ).'Quantity Per UOM'))),
                                         //////______________CART MANIPULATION
                                            If(
                                                !IsBlank(
                                                    LookUp(
                                                        colManipulatedCartItems,
                                                        skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date' && scheme = false
                                                    )
                                                ),
                                                Patch(
                                                    colManipulatedCartItems,
                                                    LookUp(
                                                        colManipulatedCartItems,
                                                        skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date' && scheme = false
                                                    ),
                                                    {
                                                        qtyPcs: ((LookUp(
                                                            colManipulatedCartItems,
                                                            skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date'
                                                        ).qtyPcs) + (First(CurrentQty).Value)),
                                                        totalPcsPriceWithoutDisc: OneProductItem.pcsUnitPrice * (((LookUp(
                                                            colManipulatedCartItems,
                                                            skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date'
                                                        ).qtyPcs) + (First(CurrentQty).Value))),
                                                        scheme: false
                                                    }
                                                ),
                                                Collect(
                                                    colManipulatedCartItems,
                                                    {
                                                        cartItem: OneProductItem,
                                                        manDate: OneFifoItem.'Manufacturing date',
                                                        skuId: OneFifoItem.SKU.'SKU Master',
                                                        qtyCases: 0,
                                                        qtyPcs: First(CurrentQty).Value,
                                                        scheme: false,
                                                        caseUnitPrice: OneProductItem.caseUnitPrice,
                                                        pcsUnitPrice: OneProductItem.pcsUnitPrice,
                                                        totalPcsPriceWithoutDisc: OneProductItem.pcsUnitPrice * First(CurrentQty).Value,
                                                        totalCasePriceWithoutDisc: 0,
                                                        TotalTax: OneProductItem.tax
                                                    }
                                                );
                                            );
                                            
                        //Testingggggg__________________________________________________________________________________________________
                        Patch(
                                                SequenceTestingVariable,
                                                First(SequenceTestingVariable),
                                                {Value: true}
                                            );
                                            ForAll(
                                                Sequence(OneFifoItem.'Remaining Qty Cases') As sequenceNo,
                                                If(
                                                    First(SequenceTestingVariable).Value,
                                                    If(
                                                        ((sequenceNo.Value * LookUp(
                                                            'Item UOMS',
                                                            SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master'
                                                        ).'Quantity Per UOM') >= (First(CurrentQty).Value - OneFifoItem.'Remaining Qty Pcs')),
                                                        Patch(
                                                            SequenceTestingVariable,
                                                            First(SequenceTestingVariable),
                                                            {Value: false}
                                                        );
                                                        Patch(
                                                            SequenceNo,
                                                            First(SequenceNo),
                                                            {Value: sequenceNo.Value}
                                                        );
                                                    )
                                                )
                                            );
                                        ///////________________UPDATE STOCK IN STOCK TRANSFER LINES
                        Patch(
                                                'Stock Transfer Lines',
                                                LookUp(
                                                    'Stock Transfer Lines' As oneStockLine,
                                                    ((oneStockLine.'Transfer Order No'.'Stock Transfer Header' = OneFifoItem.'Transfer Order No'.'Stock Transfer Header') && (oneStockLine.SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master') && DateValue(
                                                        Text(
                                                            oneStockLine.'Manufacturing date',
                                                            "dd/mm/yyyy"
                                                        )
                                                    ) = DateValue(
                                                        Text(
                                                            OneFifoItem.'Manufacturing date',
                                                            "dd/mm/yyyy"
                                                        )
                                                    )
                                                    // && IsToday(oneStockLine.'Created On')
                        )
                                                ),
                                                {
                                                    'Remaining Qty Pcs': ((First(SequenceNo).Value) * LookUp(
                                                        'Item UOMS',
                                                        SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master'
                                                    ).'Quantity Per UOM') - (First(CurrentQty).Value - OneFifoItem.'Remaining Qty Pcs'),
                                                    'Invoiced Qty Pcs.': ((LookUp(
                                                        'Stock Transfer Lines' As oneStockLine,
                                                        ((oneStockLine.'Transfer Order No'.'Stock Transfer Header' = OneFifoItem.'Transfer Order No'.'Stock Transfer Header') && (oneStockLine.SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master') && DateValue(
                                                            Text(
                                                                oneStockLine.'Manufacturing date',
                                                                "dd/mm/yyyy"
                                                            )
                                                        ) = DateValue(
                                                            Text(
                                                                OneFifoItem.'Manufacturing date',
                                                                "dd/mm/yyyy"
                                                            )
                                                        )
                                                      //  && IsToday(oneStockLine.'Created On')
                        )
                                                    ).'Invoiced Qty Pcs.') + First(CurrentQty).Value),
                                                    'Remaining Qty Cases': ((LookUp(
                                                        'Stock Transfer Lines' As oneStockLine,
                                                        ((oneStockLine.'Transfer Order No'.'Stock Transfer Header' = OneFifoItem.'Transfer Order No'.'Stock Transfer Header') && (oneStockLine.SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master') && DateValue(
                                                            Text(
                                                                oneStockLine.'Manufacturing date',
                                                                "dd/mm/yyyy"
                                                            )
                                                        ) = DateValue(
                                                            Text(
                                                                OneFifoItem.'Manufacturing date',
                                                                "dd/mm/yyyy"
                                                            )
                                                        )
                                                        // && IsToday(oneStockLine.'Created On')
                        )
                                                    ).'Remaining Qty Cases') - First(SequenceNo).Value)
                                                }
                                            );
                                            Patch(
                                                CurrentQty,
                                                First(CurrentQty),
                                                {Value: 0}
                                            );
                                            ,
                                        //Checking Third condition if the (qty is greater then remainining pcs) && ((Qty-Rem Pcs)> Conversion) ______
                                            ((First(CurrentQty).Value > OneFifoItem.'Remaining Qty Pcs') && ((First(CurrentQty).Value - OneFifoItem.'Remaining Qty Pcs') > (OneFifoItem.'Remaining Qty Cases' * LookUp(
                                                'Item UOMS',
                                                SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master'
                                            ).'Quantity Per UOM'))),
                                         //////______________CART MANIPULATION
                                            If(
                                                !IsBlank(
                                                    LookUp(
                                                        colManipulatedCartItems,
                                                        skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date' && scheme = false
                                                    )
                                                ),
                                                Patch(
                                                    colManipulatedCartItems,
                                                    LookUp(
                                                        colManipulatedCartItems,
                                                        skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date' && scheme = false
                                                    ),
                                                    {
                                                        qtyPcs: (( LookUp(
                                                            colManipulatedCartItems,
                                                            skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date'
                                                        ).qtyPcs) + ((OneFifoItem.'Remaining Qty Cases' * LookUp(
                                                            'Item UOMS',
                                                            SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master'
                                                        ).'Quantity Per UOM') + (OneFifoItem.'Remaining Qty Pcs'))),
                                                        totalPcsPriceWithoutDisc: OneProductItem.pcsUnitPrice * ((( LookUp(
                                                            colManipulatedCartItems,
                                                            skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date'
                                                        ).qtyPcs) + ((OneFifoItem.'Remaining Qty Cases' * LookUp(
                                                            'Item UOMS',
                                                            SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master'
                                                        ).'Quantity Per UOM') + (OneFifoItem.'Remaining Qty Pcs')))),
                                                        scheme: false
                                                    }
                                                ),
                                                Collect(
                                                    colManipulatedCartItems,
                                                    {
                                                        cartItem: OneProductItem,
                                                        manDate: OneFifoItem.'Manufacturing date',
                                                        skuId: OneFifoItem.SKU.'SKU Master',
                                                        qtyCases: 0,
                                                        qtyPcs: ((OneFifoItem.'Remaining Qty Cases' * LookUp(
                                                            'Item UOMS',
                                                            SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master'
                                                        ).'Quantity Per UOM') + (OneFifoItem.'Remaining Qty Pcs')),
                                                        scheme: false,
                                                        caseUnitPrice: OneProductItem.caseUnitPrice,
                                                        pcsUnitPrice: OneProductItem.pcsUnitPrice,
                                                        totalPcsPriceWithoutDisc: OneProductItem.pcsUnitPrice * ((OneFifoItem.'Remaining Qty Cases' * LookUp(
                                                            'Item UOMS',
                                                            SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master'
                                                        ).'Quantity Per UOM') + (OneFifoItem.'Remaining Qty Pcs')),
                                                        totalCasePriceWithoutDisc: 0,
                                                        TotalTax: OneProductItem.tax
                                                    }
                                                );
                                            );
                                        ///////________________UPDATE STOCK IN STOCK TRANSFER LINES
                        Patch(
                                                'Stock Transfer Lines',
                                                LookUp(
                                                    'Stock Transfer Lines' As oneStockLine,
                                                    ((oneStockLine.'Transfer Order No'.'Stock Transfer Header' = OneFifoItem.'Transfer Order No'.'Stock Transfer Header') && (oneStockLine.SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master') && DateValue(
                                                        Text(
                                                            oneStockLine.'Manufacturing date',
                                                            "dd/mm/yyyy"
                                                        )
                                                    ) = DateValue(
                                                        Text(
                                                            OneFifoItem.'Manufacturing date',
                                                            "dd/mm/yyyy"
                                                        )
                                                    )
                                                    // && IsToday(oneStockLine.'Created On')
                        )
                                                ),
                                                {
                                                    'Remaining Qty Pcs': 0,
                                                    'Invoiced Qty Pcs.': ((LookUp(
                                                        'Stock Transfer Lines' As oneStockLine,
                                                        ((oneStockLine.'Transfer Order No'.'Stock Transfer Header' = OneFifoItem.'Transfer Order No'.'Stock Transfer Header') && (oneStockLine.SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master') && DateValue(
                                                            Text(
                                                                oneStockLine.'Manufacturing date',
                                                                "dd/mm/yyyy"
                                                            )
                                                        ) = DateValue(
                                                            Text(
                                                                OneFifoItem.'Manufacturing date',
                                                                "dd/mm/yyyy"
                                                            )
                                                        )
                                                      //  && IsToday(oneStockLine.'Created On')
                        )
                                                    ).'Invoiced Qty Pcs.') + ((OneFifoItem.'Remaining Qty Cases' * LookUp(
                                                        'Item UOMS',
                                                        SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master'
                                                    ).'Quantity Per UOM') + (OneFifoItem.'Remaining Qty Pcs'))),
                                                    'Remaining Qty Cases': 0
                                              /*  'Invoiced Qty Cases': ((LookUp(
                                                    'Stock Transfer Lines' As oneStockLine,
                                                    ((oneStockLine.'Transfer Order No'.'Stock Transfer Header' = OneFifoItem.'Transfer Order No'.'Stock Transfer Header') && (oneStockLine.SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master') && (oneStockLine.'Manufacturing date' = OneFifoItem.'Manufacturing date') && IsToday(oneStockLine.'Created On'))
                                                ).'Invoiced Qty Cases') + OneFifoItem.'Remaining Qty Cases') */
                                                }
                                            );
                                            Patch(
                                                CurrentQty,
                                                First(CurrentQty),
                                                {
                                                    Value: ((First(CurrentQty).Value - OneFifoItem.'Remaining Qty Pcs') - (OneFifoItem.'Remaining Qty Cases' * LookUp(
                                                        'Item UOMS',
                                                        SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master'
                                                    ).'Quantity Per UOM'))
                                                }
                                            );
                                        )
                                    )
                                )
                            );
                            
                        /////////////////////////////////////////////_______________///////SCHEME CART MANIPULATION AND FIFO IMPLEMENTATION

                        ClearCollect(
                                CurrentQtyCasesScheme,
                                First(colCartItems).qtyCases
                            );
                            Clear(StockLinesForFIFO);
                            ForAll(
                                Filter(
                                    colCartItems,
                                    schemeOrder = true
                                ) As OneProductItem,
                                Collect(
                                    StockLinesForFIFO,
                                    Sort(
                                       // Filter(
                                        Filter(
                                            'Stock Transfer Lines',
                                            ('Transfer Order No'.'Stock Transfer Header' in varGatePassHeaderAll.headerGUID) && (SKU.'SKU Master' = OneProductItem.productId)
                                        ),
                                         //   'Created On'>=Today()
                                      //  ),
                                        'Manufacturing date',
                                        SortOrder.Ascending
                                    )
                                );
                                Patch(
                                    CurrentQtyCasesScheme,
                                    First(CurrentQtyCasesScheme),
                                    {Value: OneProductItem.qtyCases}
                                );
                                ForAll(
                                    StockLinesForFIFO As OneFifoItem,
                                    If(
                                        First(CurrentQtyCasesScheme).Value > 0 && OneFifoItem.'Remaining Qty Cases' > 0 && OneFifoItem.SKU.'SKU Master' = OneProductItem.productId,
                                    //Checking First condition if the qty is less then remainining of old_______________________________________________
                                        If(
                                            (First(CurrentQtyCasesScheme).Value <= OneFifoItem.'Remaining Qty Cases'),
                                        //////______________CART MANIPULATION
                                            If(
                                                !IsBlank(
                                                    LookUp(
                                                        colManipulatedCartItems,
                                                        skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date' && scheme = true && schemeSKU = OneProductItem.SchemeOrderProductReference
                                                    )
                                                ),
                                                Patch(
                                                    colManipulatedCartItems,
                                                    LookUp(
                                                        colManipulatedCartItems,
                                                        skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date' && scheme = true && schemeSKU = OneProductItem.SchemeOrderProductReference
                                                    ),
                                                    {
                                                        qtyCases: ((LookUp(
                                                            colManipulatedCartItems,
                                                            skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date' && scheme = true && schemeSKU = OneProductItem.SchemeOrderProductReference
                                                        ).qtyCases) + (First(CurrentQtyCasesScheme).Value))
                                                    }
                                                ),
                                                Collect(
                                                    colManipulatedCartItems,
                                                    {
                                                        cartItem: OneProductItem,
                                                        manDate: OneFifoItem.'Manufacturing date',
                                                        skuId: OneFifoItem.SKU.'SKU Master',
                                                        qtyCases: First(CurrentQtyCasesScheme).Value,
                                                        qtyPcs: 0,
                                                        scheme: true,
                                                        schemeSKU: OneProductItem.SchemeOrderProductReference
                                                    }
                                                );
                                            );
                                        ///////________________UPDATE STOCK IN STOCK TRANSFER LINES
                        Patch(
                                                'Stock Transfer Lines',
                                                LookUp(
                                                    'Stock Transfer Lines' As oneStockLine,
                                                    ((oneStockLine.'Transfer Order No'.'Stock Transfer Header' = OneFifoItem.'Transfer Order No'.'Stock Transfer Header') && (oneStockLine.SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master') && DateValue(
                                                        Text(
                                                            oneStockLine.'Manufacturing date',
                                                            "dd/mm/yyyy"
                                                        )
                                                    ) = DateValue(
                                                        Text(
                                                            OneFifoItem.'Manufacturing date',
                                                            "dd/mm/yyyy"
                                                        )
                                                    )
                                                  //  && IsToday(oneStockLine.'Created On')
                        )
                                                ),
                                                {
                                                    'Remaining Qty Cases': OneFifoItem.'Remaining Qty Cases' - First(CurrentQtyCasesScheme).Value,
                                                    'Invoiced Qty Cases': ((LookUp(
                                                        'Stock Transfer Lines' As oneStockLine,
                                                        ((oneStockLine.'Transfer Order No'.'Stock Transfer Header' = OneFifoItem.'Transfer Order No'.'Stock Transfer Header') && (oneStockLine.SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master') && DateValue(
                                                            Text(
                                                                oneStockLine.'Manufacturing date',
                                                                "dd/mm/yyyy"
                                                            )
                                                        ) = DateValue(
                                                            Text(
                                                                OneFifoItem.'Manufacturing date',
                                                                "dd/mm/yyyy"
                                                            )
                                                        )
                                                        // && IsToday(oneStockLine.'Created On')
                        )
                                                    ).'Invoiced Qty Cases') + First(CurrentQtyCasesScheme).Value)
                                                }
                                            );
                                            Patch(
                                                CurrentQtyCasesScheme,
                                                First(CurrentQtyCasesScheme),
                                                {Value: 0}
                                            );
                                            ,
                                        //Checking Second condition if the (qty is greater then remainining cases) 
                                            ((First(CurrentQtyCasesScheme).Value > OneFifoItem.'Remaining Qty Cases')),
                                         //////______________CART MANIPULATION
                                            If(
                                                !IsBlank(
                                                    LookUp(
                                                        colManipulatedCartItems,
                                                        skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date' && scheme = true && schemeSKU = OneProductItem.SchemeOrderProductReference
                                                    )
                                                ),
                                                Patch(
                                                    colManipulatedCartItems,
                                                    LookUp(
                                                        colManipulatedCartItems,
                                                        skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date' && scheme = true && schemeSKU = OneProductItem.SchemeOrderProductReference
                                                    ),
                                                    {
                                                        qtyCases: ((LookUp(
                                                            colManipulatedCartItems,
                                                            skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date' && scheme = true && schemeSKU = OneProductItem.SchemeOrderProductReference
                                                        ).qtyCases) + (OneFifoItem.'Remaining Qty Cases'))
                                                    }
                                                ),
                                                Collect(
                                                    colManipulatedCartItems,
                                                    {
                                                        cartItem: OneProductItem,
                                                        manDate: OneFifoItem.'Manufacturing date',
                                                        skuId: OneFifoItem.SKU.'SKU Master',
                                                        qtyCases: OneFifoItem.'Remaining Qty Cases',
                                                        qtyPcs: 0,
                                                        scheme: true,
                                                        schemeSKU: OneProductItem.SchemeOrderProductReference
                                                    }
                                                );
                                            );
                                        ///////________________UPDATE STOCK IN STOCK TRANSFER LINES
                        Patch(
                                                'Stock Transfer Lines',
                                                LookUp(
                                                    'Stock Transfer Lines' As oneStockLine,
                                                    ((oneStockLine.'Transfer Order No'.'Stock Transfer Header' = OneFifoItem.'Transfer Order No'.'Stock Transfer Header') && (oneStockLine.SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master') && DateValue(
                                                        Text(
                                                            oneStockLine.'Manufacturing date',
                                                            "dd/mm/yyyy"
                                                        )
                                                    ) = DateValue(
                                                        Text(
                                                            OneFifoItem.'Manufacturing date',
                                                            "dd/mm/yyyy"
                                                        )
                                                    )
                                                  //  && IsToday(oneStockLine.'Created On')
                        )
                                                ),
                                                {
                                                    'Remaining Qty Cases': 0,
                                                    'Invoiced Qty Cases': ((LookUp(
                                                        'Stock Transfer Lines' As oneStockLine,
                                                        ((oneStockLine.'Transfer Order No'.'Stock Transfer Header' = OneFifoItem.'Transfer Order No'.'Stock Transfer Header') && (oneStockLine.SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master') && DateValue(
                                                            Text(
                                                                oneStockLine.'Manufacturing date',
                                                                "dd/mm/yyyy"
                                                            )
                                                        ) = DateValue(
                                                            Text(
                                                                OneFifoItem.'Manufacturing date',
                                                                "dd/mm/yyyy"
                                                            )
                                                        )
                                                        // && IsToday(oneStockLine.'Created On')
                        )
                                                    ).'Invoiced Qty Cases') + OneFifoItem.'Remaining Qty Cases')
                                                }
                                            );
                                            Patch(
                                                CurrentQtyCasesScheme,
                                                First(CurrentQtyCasesScheme),
                                                {Value: ((First(CurrentQtyCasesScheme).Value - OneFifoItem.'Remaining Qty Cases'))}
                                            );
                                        )
                                    )
                                )
                            );
                            
                        /////////////////////////////////////////////////////////_______________STOCK UPDATION FOR PCS__________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________
                        ClearCollect(
                                CurrentQtyScheme,
                                First(colCartItems).qtyPcs
                            );
                            ClearCollect(
                                SequenceTestingVariable1,
                                false
                            );
                            ClearCollect(
                                SequenceNo1,
                                0
                            );
                            Clear(StockLinesForFIFO);
                            ForAll(
                                Filter(
                                    colCartItems,
                                    schemeOrder = true
                                ) As OneProductItem,
                                Collect(
                                    StockLinesForFIFO,
                                    Sort(
                                      //  Filter(
                                        Filter(
                                            'Stock Transfer Lines',
                                            ('Transfer Order No'.'Stock Transfer Header' in varGatePassHeaderAll.headerGUID) && (SKU.'SKU Master' = OneProductItem.productId)
                                        ),
                                        //    'Created On'>=Today()
                                      //  ),
                                        'Manufacturing date',
                                        SortOrder.Ascending
                                    )
                                );
                                Patch(
                                    CurrentQtyScheme,
                                    First(CurrentQtyScheme),
                                    {Value: OneProductItem.qtyPcs}
                                );
                                ForAll(
                                    StockLinesForFIFO As OneFifoItem,
                                    If(
                                        First(CurrentQtyScheme).Value > 0 && (OneFifoItem.'Remaining Qty Pcs' > 0 || OneFifoItem.'Remaining Qty Cases' > 0) && OneFifoItem.SKU.'SKU Master' = OneProductItem.productId,
                                                //Checking First condition if the qty is less then remainining of old_______________________________________________
                                        If(
                                            (First(CurrentQtyScheme).Value <= OneFifoItem.'Remaining Qty Pcs'),
                                        //////______________CART MANIPULATION
                                            If(
                                                !IsBlank(
                                                    LookUp(
                                                        colManipulatedCartItems,
                                                        skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date' && scheme = true && schemeSKU = OneProductItem.SchemeOrderProductReference
                                                    )
                                                ),
                                                Patch(
                                                    colManipulatedCartItems,
                                                    LookUp(
                                                        colManipulatedCartItems,
                                                        skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date' && scheme = true && schemeSKU = OneProductItem.SchemeOrderProductReference
                                                    ),
                                                    {
                                                        qtyPcs: ((LookUp(
                                                            colManipulatedCartItems,
                                                            skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date' && scheme = true && schemeSKU = OneProductItem.SchemeOrderProductReference
                                                        ).qtyPcs) + (First(CurrentQtyScheme).Value))
                                                    }
                                                ),
                                                Collect(
                                                    colManipulatedCartItems,
                                                    {
                                                        cartItem: OneProductItem,
                                                        manDate: OneFifoItem.'Manufacturing date',
                                                        skuId: OneFifoItem.SKU.'SKU Master',
                                                        qtyCases: 0,
                                                        qtyPcs: First(CurrentQtyScheme).Value,
                                                        scheme: true,
                                                        schemeSKU: OneProductItem.SchemeOrderProductReference
                                                    }
                                                );
                                            );
                                        ///////________________UPDATE STOCK IN STOCK TRANSFER LINES
                        Patch(
                                                'Stock Transfer Lines',
                                                LookUp(
                                                    'Stock Transfer Lines' As oneStockLine,
                                                    ((oneStockLine.'Transfer Order No'.'Stock Transfer Header' = OneFifoItem.'Transfer Order No'.'Stock Transfer Header') && (oneStockLine.SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master') && DateValue(
                                                        Text(
                                                            oneStockLine.'Manufacturing date',
                                                            "dd/mm/yyyy"
                                                        )
                                                    ) = DateValue(
                                                        Text(
                                                            OneFifoItem.'Manufacturing date',
                                                            "dd/mm/yyyy"
                                                        )
                                                    )
                                                   // && IsToday(oneStockLine.'Created On')
                        )
                                                ),
                                                {
                                                    'Remaining Qty Pcs': OneFifoItem.'Remaining Qty Pcs' - First(CurrentQtyScheme).Value,
                                                    'Invoiced Qty Pcs.': ((LookUp(
                                                        'Stock Transfer Lines' As oneStockLine,
                                                        ((oneStockLine.'Transfer Order No'.'Stock Transfer Header' = OneFifoItem.'Transfer Order No'.'Stock Transfer Header') && (oneStockLine.SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master') && DateValue(
                                                            Text(
                                                                oneStockLine.'Manufacturing date',
                                                                "dd/mm/yyyy"
                                                            )
                                                        ) = DateValue(
                                                            Text(
                                                                OneFifoItem.'Manufacturing date',
                                                                "dd/mm/yyyy"
                                                            )
                                                        )
                                                       // && IsToday(oneStockLine.'Created On')
                        )
                                                    ).'Invoiced Qty Pcs.') + First(CurrentQtyScheme).Value)
                                                }
                                            );
                                            Patch(
                                                CurrentQtyScheme,
                                                First(CurrentQtyScheme),
                                                {Value: 0}
                                            );
                                            ,
                                        //Checking Second condition if the (qty is greater then remainining pcs) && ((Qty-Rem Pcs)< Conversion) ______
                                            ((First(CurrentQtyScheme).Value > OneFifoItem.'Remaining Qty Pcs') && ((First(CurrentQtyScheme).Value - OneFifoItem.'Remaining Qty Pcs') < (OneFifoItem.'Remaining Qty Cases' * LookUp(
                                                'Item UOMS',
                                                SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master'
                                            ).'Quantity Per UOM'))),
                                         //////______________CART MANIPULATION
                                            If(
                                                !IsBlank(
                                                    LookUp(
                                                        colManipulatedCartItems,
                                                        skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date' && scheme = true && schemeSKU = OneProductItem.SchemeOrderProductReference
                                                    )
                                                ),
                                                Patch(
                                                    colManipulatedCartItems,
                                                    LookUp(
                                                        colManipulatedCartItems,
                                                        skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date' && scheme = true && schemeSKU = OneProductItem.SchemeOrderProductReference
                                                    ),
                                                    {
                                                        qtyPcs: (LookUp(
                                                            colManipulatedCartItems,
                                                            skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date' && scheme = true && schemeSKU = OneProductItem.SchemeOrderProductReference
                                                        ).qtyPcs + (First(CurrentQtyScheme).Value))
                                                    }
                                                ),
                                                Collect(
                                                    colManipulatedCartItems,
                                                    {
                                                        cartItem: OneProductItem,
                                                        manDate: OneFifoItem.'Manufacturing date',
                                                        skuId: OneFifoItem.SKU.'SKU Master',
                                                        qtyCases: 0,
                                                        qtyPcs: First(CurrentQtyScheme).Value,
                                                        scheme: true,
                                                        schemeSKU: OneProductItem.SchemeOrderProductReference
                                                    }
                                                );
                                            );
                                        //Testingggggg__________________________________________________________________________________________________
                        Patch(
                                                SequenceTestingVariable1,
                                                First(SequenceTestingVariable1),
                                                {Value: true}
                                            );
                                            ForAll(
                                                Sequence(OneFifoItem.'Remaining Qty Cases') As sequenceNo,
                                                If(
                                                    First(SequenceTestingVariable1).Value,
                                                    If(
                                                        ((sequenceNo.Value * LookUp(
                                                            'Item UOMS',
                                                            SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master'
                                                        ).'Quantity Per UOM') >= (First(CurrentQty).Value - OneFifoItem.'Remaining Qty Pcs')),
                                                        Patch(
                                                            SequenceTestingVariable1,
                                                            First(SequenceTestingVariable1),
                                                            {Value: false}
                                                        );
                                                        Patch(
                                                            SequenceNo1,
                                                            First(SequenceNo1),
                                                            {Value: sequenceNo.Value}
                                                        );
                                                    )
                                                )
                                            );
                                        ///////________________UPDATE STOCK IN STOCK TRANSFER LINES
                        Patch(
                                                'Stock Transfer Lines',
                                                LookUp(
                                                    'Stock Transfer Lines' As oneStockLine,
                                                    ((oneStockLine.'Transfer Order No'.'Stock Transfer Header' = OneFifoItem.'Transfer Order No'.'Stock Transfer Header') && (oneStockLine.SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master') && DateValue(
                                                        Text(
                                                            oneStockLine.'Manufacturing date',
                                                            "dd/mm/yyyy"
                                                        )
                                                    ) = DateValue(
                                                        Text(
                                                            OneFifoItem.'Manufacturing date',
                                                            "dd/mm/yyyy"
                                                        )
                                                    )
                                                   // && IsToday(oneStockLine.'Created On')
                        )
                                                ),
                                                {
                                                    'Remaining Qty Pcs': (First(SequenceNo1).Value * LookUp(
                                                        'Item UOMS',
                                                        SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master'
                                                    ).'Quantity Per UOM') - (First(CurrentQtyScheme).Value - OneFifoItem.'Remaining Qty Pcs'),
                                                    'Invoiced Qty Pcs.': ((LookUp(
                                                        'Stock Transfer Lines' As oneStockLine,
                                                        ((oneStockLine.'Transfer Order No'.'Stock Transfer Header' = OneFifoItem.'Transfer Order No'.'Stock Transfer Header') && (oneStockLine.SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master') && DateValue(
                                                            Text(
                                                                oneStockLine.'Manufacturing date',
                                                                "dd/mm/yyyy"
                                                            )
                                                        ) = DateValue(
                                                            Text(
                                                                OneFifoItem.'Manufacturing date',
                                                                "dd/mm/yyyy"
                                                            )
                                                        )
                                                      //  && IsToday(oneStockLine.'Created On')
                        )
                                                    ).'Invoiced Qty Pcs.') + First(CurrentQtyScheme).Value),
                                                    'Remaining Qty Cases': OneFifoItem.'Remaining Qty Cases' - First(SequenceNo1).Value
                                                }
                                            );
                                            Patch(
                                                CurrentQtyScheme,
                                                First(CurrentQtyScheme),
                                                {Value: 0}
                                            );
                                            ,
                                        //Checking Third condition if the (qty is greater then remainining pcs) && ((Qty-Rem Pcs)> Conversion) ______
                                            ((First(CurrentQtyScheme).Value > OneFifoItem.'Remaining Qty Pcs') && ((First(CurrentQtyScheme).Value - OneFifoItem.'Remaining Qty Pcs') > (OneFifoItem.'Remaining Qty Cases' * LookUp(
                                                'Item UOMS',
                                                SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master'
                                            ).'Quantity Per UOM'))),
                                         //////______________CART MANIPULATION
                                            If(
                                                !IsBlank(
                                                    LookUp(
                                                        colManipulatedCartItems,
                                                        skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date' && scheme = true && schemeSKU = OneProductItem.SchemeOrderProductReference
                                                    )
                                                ),
                                                Patch(
                                                    colManipulatedCartItems,
                                                    LookUp(
                                                        colManipulatedCartItems,
                                                        skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date' && scheme = true && schemeSKU = OneProductItem.SchemeOrderProductReference
                                                    ),
                                                    {
                                                        qtyPcs: (( LookUp(
                                                            colManipulatedCartItems,
                                                            skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date' && scheme = true && schemeSKU = OneProductItem.SchemeOrderProductReference
                                                        ).qtyPcs) + ((OneFifoItem.'Remaining Qty Cases' * LookUp(
                                                            'Item UOMS',
                                                            SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master'
                                                        ).'Quantity Per UOM') + (OneFifoItem.'Remaining Qty Pcs')))
                                                    }
                                                ),
                                                Collect(
                                                    colManipulatedCartItems,
                                                    {
                                                        cartItem: OneProductItem,
                                                        manDate: OneFifoItem.'Manufacturing date',
                                                        skuId: OneFifoItem.SKU.'SKU Master',
                                                        qtyCases: 0,
                                                        qtyPcs: ((OneFifoItem.'Remaining Qty Cases' * LookUp(
                                                            'Item UOMS',
                                                            SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master'
                                                        ).'Quantity Per UOM') + (OneFifoItem.'Remaining Qty Pcs')),
                                                        scheme: true,
                                                        schemeSKU: OneProductItem.SchemeOrderProductReference
                                                    }
                                                );
                                            );
                                        ///////________________UPDATE STOCK IN STOCK TRANSFER LINES
                        Patch(
                                                'Stock Transfer Lines',
                                                LookUp(
                                                    'Stock Transfer Lines' As oneStockLine,
                                                    ((oneStockLine.'Transfer Order No'.'Stock Transfer Header' = OneFifoItem.'Transfer Order No'.'Stock Transfer Header') && (oneStockLine.SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master') && DateValue(
                                                        Text(
                                                            oneStockLine.'Manufacturing date',
                                                            "dd/mm/yyyy"
                                                        )
                                                    ) = DateValue(
                                                        Text(
                                                            OneFifoItem.'Manufacturing date',
                                                            "dd/mm/yyyy"
                                                        )
                                                    )
                                                    // && IsToday(oneStockLine.'Created On')
                        )
                                                ),
                                                {
                                                    'Remaining Qty Pcs': 0,
                                                    'Invoiced Qty Pcs.': ((LookUp(
                                                        'Stock Transfer Lines' As oneStockLine,
                                                        ((oneStockLine.'Transfer Order No'.'Stock Transfer Header' = OneFifoItem.'Transfer Order No'.'Stock Transfer Header') && (oneStockLine.SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master') && DateValue(
                                                            Text(
                                                                oneStockLine.'Manufacturing date',
                                                                "dd/mm/yyyy"
                                                            )
                                                        ) = DateValue(
                                                            Text(
                                                                OneFifoItem.'Manufacturing date',
                                                                "dd/mm/yyyy"
                                                            )
                                                        )
                                                      //  && IsToday(oneStockLine.'Created On')
                        )
                                                    ).'Invoiced Qty Pcs.') + ((OneFifoItem.'Remaining Qty Cases' * LookUp(
                                                        'Item UOMS',
                                                        SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master'
                                                    ).'Quantity Per UOM') + (OneFifoItem.'Remaining Qty Pcs'))),
                                                    'Remaining Qty Cases': 0
                                                /*'Invoiced Qty Cases': ((LookUp(
                                                    'Stock Transfer Lines' As oneStockLine,
                                                    ((oneStockLine.'Transfer Order No'.'Stock Transfer Header' = OneFifoItem.'Transfer Order No'.'Stock Transfer Header') && (oneStockLine.SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master') && (oneStockLine.'Manufacturing date' = OneFifoItem.'Manufacturing date') && IsToday(oneStockLine.'Created On'))
                                                ).'Invoiced Qty Cases') + OneFifoItem.'Remaining Qty Cases')*/
                                                }
                                            );
                                            Patch(
                                                CurrentQtyScheme,
                                                First(CurrentQtyScheme),
                                                {
                                                    Value: ((First(CurrentQtyScheme).Value - OneFifoItem.'Remaining Qty Pcs') - (OneFifoItem.'Remaining Qty Cases' * LookUp(
                                                        'Item UOMS',
                                                        SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master'
                                                    ).'Quantity Per UOM'))
                                                }
                                            );
                                        )
                                    )
                                )
                            );
                            
                        /////////////////////////////////////////////////////////_______________ORDER PLACEMENT
                        If(
                                OrderData.'Mode Of Payment' = 'Payment Type (choice)'.CASH || OrderData.'Mode Of Payment' = 'Payment Type (choice)'.COUPON || OrderData.'Mode Of Payment' = 'Payment Type (choice)'.KOTAK || OrderData.'Mode Of Payment' = 'Payment Type (choice)'.PAYTM,
                                /*ClearCollect(
                                    CreateOrderRecord,
                                    Patch(
                                        'Order Headers',
                                        LookUp(
                                            'Order Headers',
                                            Vists.'Visit ID' = visitiddata
                                        ),
                                        {
                                            'Total Quantity': (Sum(
                                                colManipulatedCartItems,
                                                qtyCases
                                            ) + Sum(
                                                colManipulatedCartItems,
                                                qtyPcs
                                            )),
                                            'Net Amount': Sum(
                                                colManipulatedCartItems,
                                                cartItem.netAmount
                                            ),
                                            'Total Amount': (Sum(
                                                colManipulatedCartItems,
                                                cartItem.discountedPrice
                                            ) ),
                                            'Total Tax Amount': (Sum(
                                                colManipulatedCartItems,
                                                cartItem.taxAmount
                                            )),
                                            'Total Discount Amount': Sum(
                                                colManipulatedCartItems,
                                                cartItem.discount
                                            )
                                        }
                                    )
                                );
                                If(
                                    !IsBlank(CreateOrderRecord),
                                    ClearCollect(
                                        CreateItemsRecord,
                                        ForAll(
                                            colManipulatedCartItems As ThissItem,
                                            If(
                                                IsBlank(
                                                    LookUp(
                                                        'Order Lines',
                                                        'Order Number'.'Order Number' = CreateOrderRecorddata.'Order Number' && 'Item SKU'.'SKU Master' = ThissItem.skuId && 'Scheme Parent Item Code'.'SKU Master' = ThissItem.schemeSKU
                                                    )
                                                ),
                                                Patch(
                                                    'Order Lines',
                                                    Defaults('Order Lines'),
                                                    {
                                                        'Total Quantity': ThissItem.qtyCases + ThissItem.qtyPcs,
                                                        Cases: ThissItem.qtyCases,
                                                        PCs: ThissItem.qtyPcs,
                                                        'Empty Jars': ThissItem.cartItem.emptyJar,
                                                        'Order Number': LookUp(
                                                            'Order Headers',
                                                            'Order Number' = CreateOrderRecorddata.'Order Number'
                                                        ),
                                                        'Item SKU': LookUp(
                                                            'SKU Masters',
                                                            'SKU Master' = ThissItem.skuId
                                                        ),
                                                        'Cases Unit Price': ThissItem.caseUnitPrice,
                                                        'Pcs Unit Price': ThissItem.pcsUnitPrice,
                                                        'Total Discount Amount': Value(ThissItem.cartItem.discount),
                                                        'Tax Amount': ThissItem.cartItem.taxAmount,
                                                        'Net Amount': ThissItem.cartItem.netAmount,
                                                        'Customer no.': LookUp(
                                                            Customers_1,
                                                            Account = OrderData.Account
                                                        ),
                                                        'Route No': Areavalueid,
                                                        'Manufacturing Date': DateValue(ThissItem.manDate)
                                                    }
                                                ),
                                                Patch(
                                                    'Order Lines',
                                                    LookUp(
                                                        'Order Lines',
                                                        'Order Number'.'Order Number' = CreateOrderRecorddata.'Order Number' && 'Item SKU'.'SKU Master' = ThissItem.skuId && 'Scheme Parent Item Code'.'SKU Master' = ThissItem.schemeSKU
                                                    ),
                                                    {
                                                        'Total Quantity': ThissItem.qtyCases + ThissItem.qtyPcs,
                                                        Cases: ThissItem.qtyCases,
                                                        PCs: ThissItem.qtyPcs,
                                                        'Empty Jars': ThissItem.cartItem.emptyJar,
                                                        'Order Number': LookUp(
                                                            'Order Headers',
                                                            'Order Number' = CreateOrderRecorddata.'Order Number'
                                                        ),
                                                        'Item SKU': LookUp(
                                                            'SKU Masters',
                                                            'SKU Master' = ThissItem.skuId
                                                        ),
                                                        'Cases Unit Price': ThissItem.caseUnitPrice,
                                                        'Pcs Unit Price': ThissItem.pcsUnitPrice,
                                                        'Total Discount Amount': Value(ThissItem.cartItem.discount),
                                                        'Tax Amount': ThissItem.cartItem.taxAmount,
                                                        'Net Amount': ThissItem.cartItem.netAmount,
                                                        'Customer no.': LookUp(
                                                            Customers_1,
                                                            Account = OrderData.Account
                                                        ),
                                                        'Route No': Areavalueid,
                                                        'Manufacturing Date': DateValue(ThissItem.manDate)
                                                    }
                                                )
                                            )
                                        )
                                    );
                                    
                        /////////// Patch Invoice Header////////////////////
                        ClearCollect(
                                        CreateInvHeader,
                                        Patch(
                                            'Invoice Headers',
                                            LookUp(
                                                'Invoice Headers',
                                                'Order Number'.'Order Number' = CreateOrderRecorddata.'Order Number'
                                            ),
                                            {
                                                Salesperson: LookUp(
                                                    Users,
                                                    'Primary Email' = User().Email
                                                ),
                                                Customer: LookUp(
                                                    Customers_1,
                                                    Account = OrderData.Account
                                                ),
                                                'Route No': Areavalueid,
                                                'Van No': LookUp(
                                                    Warehouses,
                                                    Warehouse = varUserVanNo.Van.Warehouse
                                                ),
                                                'Invoice Date': Now(),
                                                'Order Type': 'Order Type (Choice)'.'Sales Order',
                                                'Order Number': LookUp(
                                                    'Order Headers',
                                                    'Order Number' = CreateOrderRecorddata.'Order Number'
                                                ),
                                                'Total Amount': (Sum(
                                                    colManipulatedCartItems,
                                                    cartItem.discountedPrice
                                                ) ),
                                                'Total Tax Amount': (Sum(
                                                    colManipulatedCartItems,
                                                    cartItem.taxAmount
                                                )),
                                                'Total Discount Amount': Sum(
                                                    colManipulatedCartItems,
                                                    cartItem.discount
                                                ),
                                                'Net Amount': (Sum(
                                                    colManipulatedCartItems,
                                                    cartItem.netAmount
                                                )),
                                                'Mode of Payment': OrderData.'Mode Of Payment'
                                            }
                                        )
                                    );
                                    
                        //////////////Patch Invoice Line ///////////////////
                        ClearCollect(
                                        CreateInvLine,
                                        ForAll(
                                            colManipulatedCartItems As OrdrItems,
                                            If(
                                                IsBlank(
                                                    LookUp(
                                                        'Invoice Lines',
                                                        'Invoice Number'.'Invoice Number' = CreateInvHeaderdata.'Invoice Number' && 'Item SKU'.'SKU Master' = OrdrItems.skuId && 'Scheme Parent Item Code'.'SKU Master' = OrdrItems.schemeSKU && 'Invoice Type' = 'Invoice Type (Choice)'.'Parent'
                                                    )
                                                ),
                                                Patch(
                                                    'Invoice Lines',
                                                    Defaults('Invoice Lines'),
                                                    {
                                                        CGST: Value(OrdrItems.cgst),
                                                        'SGST/UGST': Value(OrdrItems.sgst),
                                                        CESS: Value(OrdrItems.cess),
                                                        'Invoice Number': LookUp(
                                                            'Invoice Headers',
                                                            'Invoice Header' = CreateInvHeaderdata.'Invoice Header'
                                                        ),
                                                        'Order Number': LookUp(
                                                            'Order Headers',
                                                            'Order Number' = CreateOrderRecorddata.'Order Number'
                                                        ),
                                                        'Item Type': If(
                                                            OrdrItems.cartItem.schemeOrder = true,
                                                            'Item Type (Choice)'.Free,
                                                            'Item Type (Choice)'.Paid
                                                        ),
                                                        'Cases Unit Price': OrdrItems.totalCasePriceWithoutDisc,
                                                        'Pcs Unit Price': OrdrItems.totalPcsPriceWithoutDisc,
                                                        'Total Quantity': OrdrItems.qtyCases + OrdrItems.qtyPcs,
                                                        Cases: OrdrItems.qtyCases,
                                                        PCs: OrdrItems.qtyPcs,
                                                        'Total Discount Amount': Value(OrdrItems.cartItem.discount),
                                                        'Tax Amount': OrdrItems.cartItem.taxAmount,
                                                        Rate: OrdrItems.cartItem.netAmount,
                                                        Customer: LookUp(
                                                            Customers_1,
                                                            Account = OrderData.Account
                                                        ),
                                                        'Route No': Areavalueid,
                                                        Salesperson: LookUp(
                                                            Users,
                                                            'Primary Email' = User().Email
                                                        ),
                                                        'Van No': LookUp(
                                                            Warehouses,
                                                            Warehouse = varUserVanNo.Van.Warehouse
                                                        ),
                                                        'Item SKU': LookUp(
                                                            'SKU Masters',
                                                            'SKU Master' = OrdrItems.skuId
                                                        ),
                                                        'Total Amount ': If(
                                                            OrdrItems.cartItem.schemeOrder = true,
                                                            0,
                                                            (Sum(
                                                                colCartItems,
                                                                discountedPrice
                                                            ))
                                                        )
                                                    }
                                                ),
                                                Patch(
                                                    'Invoice Lines',
                                                    LookUp(
                                                        'Invoice Lines',
                                                        'Invoice Number'.'Invoice Number' = CreateInvHeaderdata.'Invoice Number' && 'Item SKU'.'SKU Master' = OrdrItems.skuId && 'Scheme Parent Item Code'.'SKU Master' = OrdrItems.schemeSKU && 'Invoice Type' = 'Invoice Type (Choice)'.'Parent'
                                                    ),
                                                    {
                                                        CGST: Value(OrdrItems.cgst),
                                                        'SGST/UGST': Value(OrdrItems.sgst),
                                                        CESS: Value(OrdrItems.cess),
                                                        'Invoice Number': LookUp(
                                                            'Invoice Headers',
                                                            'Invoice Header' = CreateInvHeaderdata.'Invoice Header'
                                                        ),
                                                        'Order Number': LookUp(
                                                            'Order Headers',
                                                            'Order Number' = CreateOrderRecorddata.'Order Number'
                                                        ),
                                                        'Item Type': If(
                                                            OrdrItems.cartItem.schemeOrder = true,
                                                            'Item Type (Choice)'.Free,
                                                            'Item Type (Choice)'.Paid
                                                        ),
                                                        'Cases Unit Price': OrdrItems.totalCasePriceWithoutDisc,
                                                        'Pcs Unit Price': OrdrItems.totalPcsPriceWithoutDisc,
                                                        'Total Quantity': OrdrItems.qtyCases + OrdrItems.qtyPcs,
                                                        Cases: OrdrItems.qtyCases,
                                                        PCs: OrdrItems.qtyPcs,
                                                        'Total Discount Amount': Value(OrdrItems.cartItem.discount),
                                                        'Tax Amount': OrdrItems.cartItem.taxAmount,
                                                        Rate: OrdrItems.cartItem.netAmount,
                                                        Customer: LookUp(
                                                            Customers_1,
                                                            Account = OrderData.Account
                                                        ),
                                                        'Route No': Areavalueid,
                                                        Salesperson: LookUp(
                                                            Users,
                                                            'Primary Email' = User().Email
                                                        ),
                                                        'Van No': LookUp(
                                                            Warehouses,
                                                            Warehouse = varUserVanNo.Van.Warehouse
                                                        ),
                                                        'Total Amount ': If(
                                                            OrdrItems.cartItem.schemeOrder = true,
                                                            0,
                                                            (Sum(
                                                                colCartItems,
                                                                discountedPrice
                                                            ))
                                                        )
                                                    }
                                                )
                                            )
                                        )
                                    );
                                );*/
                        //Stock substraction from location ____________________________________________________________________________________
                                Refresh('Stock Transfer Lines');
                                ForAll(
                                    colManipulatedCartItems As oneLine,
                                    Patch(
                                        'Current Stocks',
                                        LookUp(
                                            'Current Stocks',
                                            'Item SKU'.'SKU Master' = oneLine.skuId && 'Van No'.Warehouse = varUserVanNo.Van.Warehouse && 'Created On' >= Today()
                                        ),
                                        {
                                            Cases: Sum(
                                                Filter(
                                                    'Stock Transfer Lines',
                                                    'Transfer Order No'.'Stock Transfer Header' in varGatePassHeaderAll.headerGUID && SKU.'SKU Master' = oneLine.skuId 
                                                   //  && 'Created On'>=Today() 
                        && 'Transfer accepted' = 'Transfer accepted (Stock Transfer Lines)'.Yes
                                                ),
                                                'Remaining Qty Cases'
                                            ),
                                            PCs: Sum(
                                                Filter(
                                                    'Stock Transfer Lines',
                                                    'Transfer Order No'.'Stock Transfer Header' in varGatePassHeaderAll.headerGUID && SKU.'SKU Master' = oneLine.skuId 
                                                     // && 'Created On'>=Today() 
                        && 'Transfer accepted' = 'Transfer accepted (Stock Transfer Lines)'.Yes
                                                ),
                                                'Remaining Qty Pcs'
                                            )
                                        }
                                    )
                                );
                                Refresh('Current Stocks');
                            /* Set(
                                VarPaymentConfirm,
                                true
                            ); */
                        ,
                            ///////////////////////////////////////////////////////////////////////////////////////////////Credit Customer____
                                (OrderData.'Mode Of Payment' = 'Payment Type (choice)'.CREDIT) && LookUp(
                                    Customers_1,
                                    Account = OrderData.Account
                                ).'Credit Activated' = 'Credit Activated (Customers_1)'.Yes,
                                If(
                                    !IsBlank(
                                        LookUp(
                                            'Temporary Credit Limits',
                                            'Customer code'.Account = OrderData.Account && FromDate <= Today() && ToDate >= Today()
                                        )
                                    ),
                                ///////////_____________________________________________________________________________Temporary Credit Exists
                                    If(
                                        ((LookUp(
                                            'Temporary Credit Limits',
                                            'Customer code'.Account = OrderData.Account && FromDate <= Today() && ToDate >= Today()
                                        ).'Available Limit') - (LookUp(
                                            Customers_1,
                                            Account = OrderData.Account
                                        ).'Used Credit Limit') - (Sum(
                                            datafortodayorder,
                                            'Net Amount'
                                        ))) < (Sum(
                                            colManipulatedCartItems,
                                            cartItem.netAmount
                                        )),
                                        Notify(
                                            "You don't have sufficient credit limit left, Please check",
                                            NotificationType.Error,
                                            2000
                                        );
                                        Navigate('Visit Screen');
                                        ,
                                        /*ClearCollect(
                                            CreateOrderRecord,
                                            Patch(
                                                'Order Headers',
                                                LookUp(
                                                    'Order Headers',
                                                    'Order Number' = paymentData.'Order Number'
                                                ),
                                                {
                                                    'Order Date': Today(),
                                                    'Order Type': 'Order Type (Choice)'.'Sales Order',
                                                    'Payment Type': 'Payment Type (Order Headers)'.Credit,
                                                    'Total Quantity': Sum(
                                                        colManipulatedCartItems,
                                                        qtyCases
                                                    ) + Sum(
                                                        colManipulatedCartItems,
                                                        qtyPcs
                                                    ),
                                                    'Net Amount': (Sum(
                                                        colManipulatedCartItems,
                                                        cartItem.netAmount
                                                    ) ),
                                                    'Van No': LookUp(
                                                        Warehouses,
                                                        Warehouse = varUserVanNo.Van.Warehouse
                                                    ),
                                                    'Route No': Areavalueid,
                                                    Customer: LookUp(
                                                        Customers_1,
                                                        Account = OrderData.Account
                                                    ),
                                                    Salesperson: LookUp(
                                                        Users,
                                                        'Primary Email' = User().Email
                                                    ),
                                                    'Delivery Date': Today(),
                                                    'Total Amount': (Sum(
                                                        colManipulatedCartItems,
                                                        cartItem.discountedPrice
                                                    )),
                                                    'Total Tax Amount': (Sum(
                                                        colManipulatedCartItems,
                                                        cartItem.taxAmount
                                                    )),
                                                    'Total Discount Amount': Sum(
                                                        colManipulatedCartItems,
                                                        cartItem.discount
                                                    )
                                                }
                                            )
                                        );
                                        If(
                                            !IsBlank(CreateOrderRecord),
                                            ClearCollect(
                                                CreateItemsRecord,
                                                ForAll(
                                                    colManipulatedCartItems As ThissItem,
                                                    If(
                                                        IsBlank(
                                                            LookUp(
                                                                'Order Lines',
                                                                'Order Number'.'Order Number' = CreateOrderRecorddata.'Order Number' && 'Item SKU'.'SKU Master' = ThissItem.skuId && 'Scheme Parent Item Code'.'SKU Master' = ThissItem.schemeSKU
                                                            )
                                                        ),
                                                        Patch(
                                                            'Order Lines',
                                                            Defaults('Order Lines'),
                                                            {
                                                                'Total Quantity': ThissItem.qtyCases + ThissItem.qtyPcs,
                                                                Cases: ThissItem.qtyCases,
                                                                PCs: ThissItem.qtyPcs,
                                                                'Empty Jars': ThissItem.cartItem.emptyJar,
                                                                'Order Number': LookUp(
                                                                    'Order Headers',
                                                                    'Order Number' = CreateOrderRecorddata.'Order Number'
                                                                ),
                                                                Salesperson: LookUp(
                                                                    Users,
                                                                    'Primary Email' = User().Email
                                                                ),
                                                                'Van No': LookUp(
                                                                    Warehouses,
                                                                    Warehouse = varUserVanNo.Van.Warehouse
                                                                ),
                                                                'Item Type': If(
                                                                    ThissItem.cartItem.schemeOrder = true,
                                                                    'Item Type (Choice)'.Free,
                                                                    'Item Type (Choice)'.Paid
                                                                ),
                                                                'Item SKU': LookUp(
                                                                    'SKU Masters',
                                                                    'SKU Master' = ThissItem.skuId
                                                                ),
                                                                'Cases Unit Price': ThissItem.caseUnitPrice,
                                                                'Pcs Unit Price': ThissItem.pcsUnitPrice,
                                                                'Total Discount Amount': Value(ThissItem.cartItem.discount),
                                                                'Tax Amount': ThissItem.cartItem.taxAmount,
                                                                'Net Amount': ThissItem.cartItem.netAmount,
                                                                'Customer no.': LookUp(
                                                                    Customers_1,
                                                                    Account = OrderData.Account
                                                                ),
                                                                'Route No': Areavalueid,
                                                                'Manufacturing Date': DateValue(ThissItem.manDate)
                                                            }
                                                        ),
                                                        Patch(
                                                            'Order Lines',
                                                            LookUp(
                                                                'Order Lines',
                                                                'Order Number'.'Order Number' = CreateOrderRecorddata.'Order Number' && 'Item SKU'.'SKU Master' = ThissItem.skuId && 'Scheme Parent Item Code'.'SKU Master' = ThissItem.schemeSKU
                                                            ),
                                                            {
                                                                'Total Quantity': ThissItem.qtyCases + ThissItem.qtyPcs,
                                                                Cases: ThissItem.qtyCases,
                                                                PCs: ThissItem.qtyPcs,
                                                                'Empty Jars': ThissItem.cartItem.emptyJar,
                                                                'Order Number': LookUp(
                                                                    'Order Headers',
                                                                    'Order Number' = CreateOrderRecorddata.'Order Number'
                                                                ),
                                                                'Item SKU': LookUp(
                                                                    'SKU Masters',
                                                                    'SKU Master' = ThissItem.skuId
                                                                ),
                                                                'Cases Unit Price': ThissItem.caseUnitPrice,
                                                                'Pcs Unit Price': ThissItem.pcsUnitPrice,
                                                                'Total Discount Amount': Value(ThissItem.cartItem.discount),
                                                                'Tax Amount': ThissItem.cartItem.taxAmount,
                                                                'Net Amount': ThissItem.cartItem.netAmount,
                                                                'Customer no.': LookUp(
                                                                    Customers_1,
                                                                    Account = OrderData.Account
                                                                ),
                                                                'Route No': Areavalueid,
                                                                'Manufacturing Date': DateValue(ThissItem.manDate)
                                                            }
                                                        )
                                                    )
                                                )
                                            );
                                            
                        /////////// Patch Invoice Header////////////////////
                        ClearCollect(
                                                CreateInvHeader,
                                                Patch(
                                                    'Invoice Headers',
                                                    LookUp(
                                                        'Invoice Headers',
                                                        'Order Number'.'Order Number' = CreateOrderRecorddata.'Order Number'
                                                    ),
                                                    {
                                                        Salesperson: LookUp(
                                                            Users,
                                                            'Primary Email' = User().Email
                                                        ),
                                                        Customer: LookUp(
                                                            Customers_1,
                                                            Account = OrderData.Account
                                                        ),
                                                        'Route No': Areavalueid,
                                                        'Van No': LookUp(
                                                            Warehouses,
                                                            Warehouse = varUserVanNo.Van.Warehouse
                                                        ),
                                                        'Invoice Date': Today(),
                                                        'Order Type': 'Order Type (Choice)'.'Sales Order',
                                                        'Order Number': LookUp(
                                                            'Order Headers',
                                                            'Order Number' = CreateOrderRecorddata.'Order Number'
                                                        ),
                                                        'Total Amount': (Sum(
                                                            colManipulatedCartItems,
                                                            cartItem.discountedPrice
                                                        ) ),
                                                        'Total Tax Amount': (Sum(
                                                            colManipulatedCartItems,
                                                            cartItem.taxAmount
                                                        ) ),
                                                        'Total Discount Amount': Sum(
                                                            colManipulatedCartItems,
                                                            cartItem.discount
                                                        ),
                                                        'Net Amount': (Sum(
                                                            colManipulatedCartItems,
                                                            cartItem.netAmount
                                                        ) ),
                                                        'Mode of Payment': 'Payment Type (choice)'.CREDIT
                                                    }
                                                )
                                            );
                                           
                        //////////////Patch Invoice Line ///////////////////
                        ClearCollect(
                                                CreateInvLine,
                                                ForAll(
                                                    colManipulatedCartItems As OrdrItems,
                                                    If(
                                                        IsBlank(
                                                            LookUp(
                                                                'Invoice Lines',
                                                                'Invoice Number'.'Invoice Number' = CreateInvHeaderdata.'Invoice Number' && 'Item SKU'.'SKU Master' = OrdrItems.skuId && 'Invoice Type' = 'Invoice Type (Choice)'.'Parent'
                                                            )
                                                        ),
                                                        Patch(
                                                            'Invoice Lines',
                                                            Defaults('Invoice Lines'),
                                                            {
                                                                CGST: Value(OrdrItems.cgst),
                                                                'SGST/UGST': Value(OrdrItems.sgst),
                                                                CESS: Value(OrdrItems.cess),
                                                                'Invoice Number': LookUp(
                                                                    'Invoice Headers',
                                                                    'Invoice Header' = CreateInvHeaderdata.'Invoice Header'
                                                                ),
                                                                'Order Number': LookUp(
                                                                    'Order Headers',
                                                                    'Order Number' = CreateOrderRecorddata.'Order Number'
                                                                ),
                                                                'Item Type': If(
                                                                    OrdrItems.cartItem.schemeOrder = true,
                                                                    'Item Type (Choice)'.Free,
                                                                    'Item Type (Choice)'.Paid
                                                                ),
                                                                'Cases Unit Price': OrdrItems.totalCasePriceWithoutDisc,
                                                                'Pcs Unit Price': OrdrItems.totalPcsPriceWithoutDisc,
                                                                'Total Quantity': OrdrItems.qtyCases + OrdrItems.qtyPcs,
                                                                Cases: OrdrItems.qtyCases,
                                                                PCs: OrdrItems.qtyPcs,
                                                                'Total Discount Amount': Value(OrdrItems.cartItem.discount),
                                                                'Tax Amount': OrdrItems.cartItem.taxAmount,
                                                                Rate: OrdrItems.cartItem.netAmount,
                                                                Customer: LookUp(
                                                                    Customers_1,
                                                                    Account = OrderData.Account
                                                                ),
                                                                'Route No': Areavalueid,
                                                                Salesperson: LookUp(
                                                                    Users,
                                                                    'Primary Email' = User().Email
                                                                ),
                                                                'Van No': LookUp(
                                                                    Warehouses,
                                                                    Warehouse = varUserVanNo.Van.Warehouse
                                                                ),
                                                                'Total Amount ': If(
                                                                    OrdrItems.cartItem.schemeOrder = true,
                                                                    0,
                                                                    (Sum(
                                                                        colCartItems,
                                                                        discountedPrice
                                                                    ))
                                                                )
                                                            }
                                                        ),
                                                        Patch(
                                                            'Invoice Lines',
                                                            LookUp(
                                                                'Invoice Lines',
                                                                'Invoice Number'.'Invoice Number' = CreateInvHeaderdata.'Invoice Number' && 'Item SKU'.'SKU Master' = OrdrItems.skuId && 'Invoice Type' = 'Invoice Type (Choice)'.'Parent'
                                                            ),
                                                            {
                                                                CGST: Value(OrdrItems.cgst),
                                                                'SGST/UGST': Value(OrdrItems.sgst),
                                                                CESS: Value(OrdrItems.cess),
                                                                'Invoice Number': LookUp(
                                                                    'Invoice Headers',
                                                                    'Invoice Header' = CreateInvHeaderdata.'Invoice Header'
                                                                ),
                                                                'Order Number': LookUp(
                                                                    'Order Headers',
                                                                    'Order Number' = CreateOrderRecorddata.'Order Number'
                                                                ),
                                                                'Item Type': If(
                                                                    OrdrItems.cartItem.schemeOrder = true,
                                                                    'Item Type (Choice)'.Free,
                                                                    'Item Type (Choice)'.Paid
                                                                ),
                                                                'Cases Unit Price': OrdrItems.totalCasePriceWithoutDisc,
                                                                'Pcs Unit Price': OrdrItems.totalPcsPriceWithoutDisc,
                                                                'Total Quantity': OrdrItems.qtyCases + OrdrItems.qtyPcs,
                                                                Cases: OrdrItems.qtyCases,
                                                                PCs: OrdrItems.qtyPcs,
                                                                'Total Discount Amount': Value(OrdrItems.cartItem.discount),
                                                                'Tax Amount': OrdrItems.cartItem.taxAmount,
                                                                Rate: OrdrItems.cartItem.netAmount,
                                                                Customer: LookUp(
                                                                    Customers_1,
                                                                    Account = OrderData.Account
                                                                ),
                                                                'Route No': Areavalueid,
                                                                Salesperson: LookUp(
                                                                    Users,
                                                                    'Primary Email' = User().Email
                                                                ),
                                                                'Van No': LookUp(
                                                                    Warehouses,
                                                                    Warehouse = varUserVanNo.Van.Warehouse
                                                                ),
                                                                'Total Amount ': If(
                                                                    OrdrItems.cartItem.schemeOrder = true,
                                                                    0,
                                                                    (Sum(
                                                                        colCartItems,
                                                                        discountedPrice
                                                                    ))
                                                                )
                                                            }
                                                        )
                                                    )
                                                )
                                            );
                                            Set(
                                                datafortodayorder,
                                                Filter(
                                                    'Order Headers',
                                                    Customer.Account = OrderData.Account && 'Created On' >= Today()
                                                )
                                            );
                                        );*/
                                        Set(
                                            datafortodayorder,
                                            Filter(
                                                'Order Headers',
                                                Customer.Account = OrderData.Account && 'Created On' >= Today() && 'Payment Status' = 'Payment Status Choice'.Completed
                                            )
                                        );
                                        
                        //Stock substraction from location ____________________________________________________________________________________
                        ForAll(
                                            colManipulatedCartItems As oneLine,
                                            Patch(
                                                'Current Stocks',
                                                LookUp(
                                                    'Current Stocks',
                                                    'Item SKU'.'SKU Master' = oneLine.skuId && 'Van No'.Warehouse = varUserVanNo.Van.Warehouse && 'Created On' >= Today()
                                                ),
                                                {
                                                    Cases: Sum(
                                                        Filter(
                                                            'Stock Transfer Lines',
                                                            'Transfer Order No'.'Stock Transfer Header' in varGatePassHeaderAll.headerGUID && SKU.'SKU Master' = oneLine.skuId && 'Transfer accepted' = 'Transfer accepted (Stock Transfer Lines)'.Yes
                                                        ),
                                                        'Remaining Qty Cases'
                                                    ),
                                                    PCs: Sum(
                                                        Filter(
                                                            'Stock Transfer Lines',
                                                            'Transfer Order No'.'Stock Transfer Header' in varGatePassHeaderAll.headerGUID && SKU.'SKU Master' = oneLine.skuId && 'Transfer accepted' = 'Transfer accepted (Stock Transfer Lines)'.Yes
                                                        ),
                                                        'Remaining Qty Pcs'
                                                    )
                                                }
                                            )
                                        );
                                        Refresh('Current Stocks');
                                        
                        ///////////////////////////////////////////////////////////////////////////Credit Updation in Temporary Credit customer
                        /*Patch(
                                        'Temporary Credit Limits',
                                        LookUp(
                                            'Temporary Credit Limits',
                                            'Customer code'.Account = OrderData.Account && FromDate <= Today() && ToDate >= Today()
                                        ),
                                        {
                                            BlockedLimit: LookUp(
                                                'Temporary Credit Limits',
                                                'Customer code'.Account = OrderData.Account && FromDate <= Today() && ToDate >= Today()
                                            ).BlockedLimit + ((Sum(
                                                colManipulatedCartItems,
                                                cartItem.discountedPrice
                                            ) * ((Sum(
                                                colManipulatedCartItems,
                                                cartItem.tax
                                            )) * 0.01)) + Sum(
                                                colManipulatedCartItems,
                                                cartItem.discountedPrice
                                            ) + Sum(
                                                colManipulatedCartItems,
                                                cartItem.emptyJarValue
                                            ))
                                        }
                                    ); */
                                 /*   Set(
                                        VarPaymentConfirm,
                                        true
                                    ); */
                                    ),
                            ////////////______________________________________________Temporary customer credit does not exists, Permanent exists    
                                    If(
                                        ((LookUp(
                                            Customers_1,
                                            Account = OrderData.Account
                                        ).'Total Credit limit') - (LookUp(
                                            Customers_1,
                                            Account = OrderData.Account
                                        ).'Used Credit Limit') - (Sum(
                                            datafortodayorder,
                                            'Net Amount'
                                        ))) < (Sum(
                                            colManipulatedCartItems,
                                            cartItem.netAmount
                                        )),
                                        Notify(
                                            "You don't have sufficient credit limit left, Please check",
                                            NotificationType.Error,
                                            2000
                                        );
                                        Navigate('Visit Screen');
                                        ,
                                       /* ClearCollect(
                                            CreateOrderRecord,
                                            Patch(
                                                'Order Headers',
                                                LookUp(
                                                    'Order Headers',
                                                    'Order Number' = paymentData.'Order Number'
                                                ),
                                                {
                                                    'Order Date': Today(),
                                                    'Order Type': 'Order Type (Choice)'.'Sales Order',
                                                    'Payment Type': 'Payment Type (Order Headers)'.Credit,
                                                    'Total Quantity': Sum(
                                                        colManipulatedCartItems,
                                                        qtyCases
                                                    ) + Sum(
                                                        colManipulatedCartItems,
                                                        qtyPcs
                                                    ),
                                                    'Net Amount': (Sum(
                                                        colManipulatedCartItems,
                                                        cartItem.netAmount
                                                    )),
                                                    'Van No': LookUp(
                                                        Warehouses,
                                                        Warehouse = varUserVanNo.Van.Warehouse
                                                    ),
                                                    'Route No': Areavalueid,
                                                    Customer: LookUp(
                                                        Customers_1,
                                                        Account = OrderData.Account
                                                    ),
                                                    Salesperson: LookUp(
                                                        Users,
                                                        'Primary Email' = User().Email
                                                    ),
                                                    'Delivery Date': Today(),
                                                    'Total Amount': (Sum(
                                                        colManipulatedCartItems,
                                                        cartItem.discountedPrice
                                                    ) ),
                                                    'Total Tax Amount': (Sum(
                                                        colManipulatedCartItems,
                                                        cartItem.taxAmount
                                                    )),
                                                    'Total Discount Amount': Sum(
                                                        colManipulatedCartItems,
                                                        cartItem.discount
                                                    )
                                                }
                                            )
                                        );
                                        If(
                                            !IsBlank(CreateOrderRecord),
                                            ClearCollect(
                                                CreateItemsRecord,
                                                ForAll(
                                                    colManipulatedCartItems As ThissItem,
                                                    If(
                                                        IsBlank(
                                                            LookUp(
                                                                'Order Lines',
                                                                'Order Number'.'Order Number' = CreateOrderRecorddata.'Order Number' && 'Item SKU'.'SKU Master' = ThissItem.skuId && 'Scheme Parent Item Code'.'SKU Master' = ThissItem.schemeSKU
                                                            )
                                                        ),
                                                        Patch(
                                                            'Order Lines',
                                                            Defaults('Order Lines'),
                                                            {
                                                                'Total Quantity': ThissItem.qtyCases + ThissItem.qtyPcs,
                                                                Cases: ThissItem.qtyCases,
                                                                PCs: ThissItem.qtyPcs,
                                                                'Empty Jars': ThissItem.cartItem.emptyJar,
                                                                'Order Number': LookUp(
                                                                    'Order Headers',
                                                                    'Order Number' = CreateOrderRecorddata.'Order Number'
                                                                ),
                                                                Salesperson: LookUp(
                                                                    Users,
                                                                    'Primary Email' = User().Email
                                                                ),
                                                                'Van No': LookUp(
                                                                    Warehouses,
                                                                    Warehouse = varUserVanNo.Van.Warehouse
                                                                ),
                                                                'Item Type': If(
                                                                    ThissItem.cartItem.schemeOrder = true,
                                                                    'Item Type (Choice)'.Free,
                                                                    'Item Type (Choice)'.Paid
                                                                ),
                                                                'Item SKU': LookUp(
                                                                    'SKU Masters',
                                                                    'SKU Master' = ThissItem.skuId
                                                                ),
                                                                'Cases Unit Price': ThissItem.caseUnitPrice,
                                                                'Pcs Unit Price': ThissItem.pcsUnitPrice,
                                                                'Total Discount Amount': Value(ThissItem.cartItem.discount),
                                                                'Tax Amount': ThissItem.cartItem.taxAmount,
                                                                'Net Amount': ThissItem.cartItem.netAmount,
                                                                'Customer no.': LookUp(
                                                                    Customers_1,
                                                                    Account = OrderData.Account
                                                                ),
                                                                'Route No': Areavalueid,
                                                                'Manufacturing Date': DateValue(ThissItem.manDate)
                                                            }
                                                        ),
                                                        Patch(
                                                            'Order Lines',
                                                            LookUp(
                                                                'Order Lines',
                                                                'Order Number'.'Order Number' = CreateOrderRecorddata.'Order Number' && 'Item SKU'.'SKU Master' = ThissItem.skuId && 'Scheme Parent Item Code'.'SKU Master' = ThissItem.schemeSKU
                                                            ),
                                                            {
                                                                'Total Quantity': ThissItem.qtyCases + ThissItem.qtyPcs,
                                                                Cases: ThissItem.qtyCases,
                                                                PCs: ThissItem.qtyPcs,
                                                                'Empty Jars': ThissItem.cartItem.emptyJar,
                                                                'Order Number': LookUp(
                                                                    'Order Headers',
                                                                    'Order Number' = CreateOrderRecorddata.'Order Number'
                                                                ),
                                                                'Item SKU': LookUp(
                                                                    'SKU Masters',
                                                                    'SKU Master' = ThissItem.skuId
                                                                ),
                                                                'Cases Unit Price': ThissItem.caseUnitPrice,
                                                                'Pcs Unit Price': ThissItem.pcsUnitPrice,
                                                                'Total Discount Amount': Value(ThissItem.cartItem.discount),
                                                                'Tax Amount': ThissItem.cartItem.taxAmount,
                                                                'Net Amount': ThissItem.cartItem.netAmount,
                                                                'Customer no.': LookUp(
                                                                    Customers_1,
                                                                    Account = OrderData.Account
                                                                ),
                                                                'Route No': Areavalueid,
                                                                'Manufacturing Date': DateValue(ThissItem.manDate)
                                                            }
                                                        )
                                                    )
                                                )
                                            );
                                            
                        /////////// Patch Invoice Header////////////////////
                        ClearCollect(
                                                CreateInvHeader,
                                                Patch(
                                                    'Invoice Headers',
                                                    LookUp(
                                                        'Invoice Headers',
                                                        'Order Number'.'Order Number' = CreateOrderRecorddata.'Order Number'
                                                    ),
                                                    {
                                                        Salesperson: LookUp(
                                                            Users,
                                                            'Primary Email' = User().Email
                                                        ),
                                                        Customer: LookUp(
                                                            Customers_1,
                                                            Account = OrderData.Account
                                                        ),
                                                        'Route No': Areavalueid,
                                                        'Van No': LookUp(
                                                            Warehouses,
                                                            Warehouse = varUserVanNo.Van.Warehouse
                                                        ),
                                                        'Invoice Date': Today(),
                                                        'Order Type': 'Order Type (Choice)'.'Sales Order',
                                                        'Order Number': LookUp(
                                                            'Order Headers',
                                                            'Order Number' = CreateOrderRecorddata.'Order Number'
                                                        ),
                                                        'Total Amount': (Sum(
                                                            colCartItems,
                                                            discountedPrice
                                                        ) ),
                                                        'Total Tax Amount': (Sum(
                                                            colCartItems,
                                                            taxAmount
                                                        )),
                                                        'Total Discount Amount': Sum(
                                                            colCartItems,
                                                            discount
                                                        ),
                                                        'Net Amount': (Sum(
                                                            colCartItems,
                                                            netAmount
                                                        )),
                                                        'Mode of Payment': 'Payment Type (choice)'.CREDIT
                                                    }
                                                )
                                            );
                                          
                        //////////////Patch Invoice Line ///////////////////
                        ClearCollect(
                                                CreateInvLine,
                                                ForAll(
                                                    colManipulatedCartItems As OrdrItems,
                                                    If(
                                                        IsBlank(
                                                            LookUp(
                                                                'Invoice Lines',
                                                                'Invoice Number'.'Invoice Number' = CreateInvHeaderdata.'Invoice Number' && 'Item SKU'.'SKU Master' = OrdrItems.skuId && 'Invoice Type' = 'Invoice Type (Choice)'.'Parent'
                                                            )
                                                        ),
                                                        Patch(
                                                            'Invoice Lines',
                                                            Defaults('Invoice Lines'),
                                                            {
                                                                CGST: Value(OrdrItems.cgst),
                                                                'SGST/UGST': Value(OrdrItems.sgst),
                                                                CESS: Value(OrdrItems.cess),
                                                                'Invoice Number': LookUp(
                                                                    'Invoice Headers',
                                                                    'Invoice Header' = CreateInvHeaderdata.'Invoice Header'
                                                                ),
                                                                'Order Number': LookUp(
                                                                    'Order Headers',
                                                                    'Order Number' = CreateOrderRecorddata.'Order Number'
                                                                ),
                                                                'Item Type': If(
                                                                    OrdrItems.cartItem.schemeOrder = true,
                                                                    'Item Type (Choice)'.Free,
                                                                    'Item Type (Choice)'.Paid
                                                                ),
                                                                'Cases Unit Price': OrdrItems.totalCasePriceWithoutDisc,
                                                                'Pcs Unit Price': OrdrItems.totalPcsPriceWithoutDisc,
                                                                'Total Quantity': OrdrItems.qtyCases + OrdrItems.qtyPcs,
                                                                Cases: OrdrItems.qtyCases,
                                                                PCs: OrdrItems.qtyPcs,
                                                                'Total Discount Amount': Value(OrdrItems.cartItem.discount),
                                                                'Tax Amount': OrdrItems.cartItem.taxAmount,
                                                                Rate: OrdrItems.cartItem.netAmount,
                                                                Customer: LookUp(
                                                                    Customers_1,
                                                                    Account = OrderData.Account
                                                                ),
                                                                'Route No': Areavalueid,
                                                                Salesperson: LookUp(
                                                                    Users,
                                                                    'Primary Email' = User().Email
                                                                ),
                                                                'Van No': LookUp(
                                                                    Warehouses,
                                                                    Warehouse = varUserVanNo.Van.Warehouse
                                                                ),
                                                                'Total Amount ': If(
                                                                    OrdrItems.cartItem.schemeOrder = true,
                                                                    0,
                                                                    (Sum(
                                                                        colCartItems,
                                                                        discountedPrice
                                                                    ))
                                                                )
                                                            }
                                                        ),
                                                        Patch(
                                                            'Invoice Lines',
                                                            LookUp(
                                                                'Invoice Lines',
                                                                'Invoice Number'.'Invoice Number' = CreateInvHeaderdata.'Invoice Number' && 'Item SKU'.'SKU Master' = OrdrItems.skuId && 'Invoice Type' = 'Invoice Type (Choice)'.'Parent'
                                                            ),
                                                            {
                                                                CGST: Value(OrdrItems.cgst),
                                                                'SGST/UGST': Value(OrdrItems.sgst),
                                                                CESS: Value(OrdrItems.cess),
                                                                'Invoice Number': LookUp(
                                                                    'Invoice Headers',
                                                                    'Invoice Header' = CreateInvHeaderdata.'Invoice Header'
                                                                ),
                                                                'Order Number': LookUp(
                                                                    'Order Headers',
                                                                    'Order Number' = CreateOrderRecorddata.'Order Number'
                                                                ),
                                                                'Item Type': If(
                                                                    OrdrItems.cartItem.schemeOrder = true,
                                                                    'Item Type (Choice)'.Free,
                                                                    'Item Type (Choice)'.Paid
                                                                ),
                                                                'Cases Unit Price': OrdrItems.totalCasePriceWithoutDisc,
                                                                'Pcs Unit Price': OrdrItems.totalPcsPriceWithoutDisc,
                                                                'Total Quantity': OrdrItems.qtyCases + OrdrItems.qtyPcs,
                                                                Cases: OrdrItems.qtyCases,
                                                                PCs: OrdrItems.qtyPcs,
                                                                'Total Discount Amount': Value(OrdrItems.cartItem.discount),
                                                                'Tax Amount': OrdrItems.cartItem.taxAmount,
                                                                Rate: OrdrItems.cartItem.netAmount,
                                                                Customer: LookUp(
                                                                    Customers_1,
                                                                    Account = OrderData.Account
                                                                ),
                                                                'Route No': Areavalueid,
                                                                Salesperson: LookUp(
                                                                    Users,
                                                                    'Primary Email' = User().Email
                                                                ),
                                                                'Van No': LookUp(
                                                                    Warehouses,
                                                                    Warehouse = varUserVanNo.Van.Warehouse
                                                                ),
                                                                'Total Amount ': If(
                                                                    OrdrItems.cartItem.schemeOrder = true,
                                                                    0,
                                                                    (Sum(
                                                                        colCartItems,
                                                                        discountedPrice
                                                                    ))
                                                                )
                                                            }
                                                        )
                                                    )
                                                )
                                            );
                                        );*/
                        //Stock substraction from location ____________________________________________________________________________________
                                        ForAll(
                                            colManipulatedCartItems As oneLine,
                                            Patch(
                                                'Current Stocks',
                                                LookUp(
                                                    'Current Stocks',
                                                    'Item SKU'.'SKU Master' = oneLine.skuId && 'Van No'.Warehouse = varUserVanNo.Van.Warehouse && 'Created On' >= Today()
                                                ),
                                                {
                                                    Cases: Sum(
                                                        Filter(
                                                            'Stock Transfer Lines',
                                                            'Transfer Order No'.'Stock Transfer Header' in varGatePassHeaderAll.headerGUID && SKU.'SKU Master' = oneLine.skuId /*&& 'Created On'>=Today()*/&& 'Transfer accepted' = 'Transfer accepted (Stock Transfer Lines)'.Yes
                                                        ),
                                                        'Remaining Qty Cases'
                                                    ),
                                                    PCs: Sum(
                                                        Filter(
                                                            'Stock Transfer Lines',
                                                            'Transfer Order No'.'Stock Transfer Header' in varGatePassHeaderAll.headerGUID && SKU.'SKU Master' = oneLine.skuId /*&& 'Created On'>=Today()*/&& 'Transfer accepted' = 'Transfer accepted (Stock Transfer Lines)'.Yes
                                                        ),
                                                        'Remaining Qty Pcs'
                                                    )
                                                }
                                            )
                                        );
                                        Refresh('Current Stocks');
                                        
                        ///////////////////////////////////////////////////////////////////////////Credit Updation in customer
                        /*Patch(
                                        Customers_1,
                                        LookUp(
                                            Customers_1,
                                            Account = OrderData.Account
                                        ),
                                        {
                                            'Remaining Credit Limit': LookUp(
                                                Customers_1,
                                                Account = OrderData.Account
                                            ).'Remaining Credit Limit' - ((Sum(
                                                colManipulatedCartItems,
                                                cartItem.discountedPrice
                                            ) * ((Sum(
                                                colManipulatedCartItems,
                                                cartItem.tax
                                            )) * 0.01)) + Sum(
                                                colManipulatedCartItems,
                                                cartItem.discountedPrice
                                            ) + Sum(
                                                colManipulatedCartItems,
                                                cartItem.emptyJarValue
                                            ))
                                        }
                                    );*/
                                  /*  Set(
                                        VarPaymentConfirm,
                                        true
                                    );*/
                                    )
                                )
                            );
                            Refresh('Current Stocks');
                            /*Set(
                                VarPaymentConfirm,
                                true
                            );*/
                        If(
                                !IsBlank(varConfirmationIRN),
                                If(
                                    IsBlank(Text(testButton.qr)) && Not(First(CreateInvHeader).'IRN Message' = "N"),
                                    Set(
                                        varIRN,
                                        true
                                    );
                                    Notify(
                                        "QR Code generated successfully.",
                                        NotificationType.Success,
                                        4000
                                    );
                                    ,
                                    If(
                                        Not(First(CreateInvHeader).'IRN Message' = "N"),
                                        Set(
                                            varIRN,
                                            true
                                        );
                                        Notify(
                                            "IRN has been generated successfully.",
                                            NotificationType.Success,
                                            4000
                                        )
                                    )
                                ),
                                If(
                                    First(CreateInvHeader).'IRN Message' = "N",
                                    Notify(
                                        "IRN not generated.",
                                        NotificationType.Warning,
                                        4000
                                    );
                                )
                            );
                            
                        )
                    Size: =_VarGblAppFonts.Size.UpperMedium
                    Text: ="Confirm"
                    Width: =150
                    X: =154
                    Y: =690
                    ZIndex: =20

                contCCouponPayment As groupContainer.manualLayoutContainer:
                    Height: =234
                    Visible: |-
                        =If(
                            OrderData.'Mode Of Payment' = 'Payment Type (choice)'.COUPON,
                            true,
                            false
                        )
                    Width: =App.Width
                    Y: =300
                    ZIndex: =21

                    lblPaymentAmountLabel_3 As label:
                        FontWeight: =FontWeight.Semibold
                        Size: =_VarGblAppFonts.Size.UpperMedium
                        Text: ="No. of coupons"
                        Width: =230
                        X: =45
                        Y: =26
                        ZIndex: =1

                    txtPaymentAmountValue_3 As text:
                        AccessibleLabel: ="txtPaymentAmountValue_1"
                        BorderColor: =_VarGblAppColors.BisleriBlue
                        Default: =
                        DisplayMode: =
                        FocusedBorderThickness: =2
                        Format: =TextFormat.Number
                        Height: =45
                        HintText: ="Enter Count"
                        HoverBorderColor: =_VarGblAppColors.BisleriBlue
                        HoverFill: =ColorFade(_VarGblAppColors.BisleriBlue, 80%)
                        OnChange: |-
                            =If(
                                Self.Text <> "" And Value(Self.Text) <> RoundDown(
                                    Value(Self.Text),
                                    0
                                ) Or Value(Self.Text) < 1,
                                Notify(
                                    "Please enter whole number",
                                    NotificationType.Information,
                                    1000
                                );
                                Reset(Self)
                            )
                        Size: =_VarGblAppFonts.Size.UpperMedium
                        Width: =230
                        X: =352
                        Y: =26
                        ZIndex: =2

                    txtPaymentAmountValue_4 As text:
                        AccessibleLabel: ="txtPaymentAmountValue_1"
                        BorderColor: =_VarGblAppColors.BisleriBlue
                        Default: |-
                            =/*If(
                                varOrderData.'Mode Of Payment' = 'Payment Type (choice)'.COUPON,
                                    Text(
                                        ((Sum(
                                            colCartItems,
                                            discountedPrice
                                        ) * ((Sum(
                                                colCartItems,
                                                tax
                                            )) * 0.01)) + Sum(
                                            colCartItems,
                                            discountedPrice
                                        ) + Sum(
                                            colCartItems,
                                            emptyJarValue
                                        )),
                                        "[$-hi-IN]##,##,##,###",
                                        "hi-IN"
                                    ),
                                    ""
                            )*/
                            If(
                                varOrderData.'Mode Of Payment' = 'Payment Type (choice)'.COUPON,
                                Text(
                                    Sum(
                                        colCartItems,
                                        netAmount
                                    ),
                                    "[$-hi-IN]##,##,##,###",
                                    "hi-IN"
                                )
                            )
                        DisabledColor: |-
                            =//RGBA(166, 166, 166, 1)
                            _VarGblAppColors.HeaderBg
                        DisabledFill: |-
                            =//RGBA(244, 244, 244, 1)
                            _VarGblAppColors.LightText
                        DisplayMode: |-
                            =//DisplayMode.Edit
                            If(OrderData.'Mode Of Payment' = 'Payment Type (choice)'.COUPON , DisplayMode.Disabled, DisplayMode.Edit)
                        FocusedBorderThickness: =2
                        Format: =TextFormat.Number
                        Height: =45
                        HintText: ="Enter Amount"
                        HoverBorderColor: =_VarGblAppColors.BisleriBlue
                        HoverFill: =ColorFade(_VarGblAppColors.BisleriBlue, 80%)
                        OnChange: |-
                            =If(
                                Value(Self.Text) < Value(
                                    Text(
                                        ((Sum(
                                            colCartItems,
                                            discountedPrice
                                        ) * 0.18) + Sum(
                                            colCartItems,
                                            discountedPrice
                                        ) + Sum(
                                            colCartItems,
                                            emptyJarValue
                                        )),
                                        "[$-hi-IN]##,##,##,###",
                                        "hi-IN"
                                    )
                                ) || Value(Self.Text) > Value(
                                    Text(
                                        ((Sum(
                                            colCartItems,
                                            discountedPrice
                                        ) * 0.18) + Sum(
                                            colCartItems,
                                            discountedPrice
                                        ) + Sum(
                                            colCartItems,
                                            emptyJarValue
                                        )),
                                        "[$-hi-IN]##,##,##,###",
                                        "hi-IN"
                                    )
                                ),
                                Notify(
                                    "Please enter correct amount",
                                    NotificationType.Error,
                                    2000
                                )
                            )
                        Size: =_VarGblAppFonts.Size.UpperMedium
                        Width: =230
                        X: =352
                        Y: =105
                        ZIndex: =3

                    lblPaymentAmountLabel_4 As label:
                        FontWeight: =FontWeight.Semibold
                        Size: =_VarGblAppFonts.Size.UpperMedium
                        Text: ="Amount"
                        Width: =230
                        X: =45
                        Y: =110
                        ZIndex: =4

                DatePicker3_1 As datepicker:
                    AccessibleLabel: ="DatePicker3_1"
                    BorderColor: =_VarGblAppColors.BisleriBlue
                    DefaultDate: =
                    FocusedBorderThickness: =2
                    Height: =45
                    IconBackground: =_VarGblAppColors.BisleriBlue
                    OnChange: =If(Self.SelectedDate <= Today() && Self.SelectedDate>= Today()-15, false, Reset(Self); Notify("Kindly select only Today's or last 15 date", NotificationType.Information, 5000))
                    Size: =_VarGblAppFonts.Size.UpperMedium
                    StartYear: =2023
                    Visible: =If(rdbModeOfPayment_2.Selected.Value='Payment Mode (Choice)'.KOTAK, true, false)
                    Width: =230
                    X: =353
                    Y: =551
                    ZIndex: =25

                lblPaymentAmountLabel_13 As label:
                    Color: =_VarGblAppColors.PrimaryText
                    FontWeight: =FontWeight.Semibold
                    Size: =_VarGblAppFonts.Size.UpperMedium
                    Text: ="Bank Name"
                    Visible: =If(rdbModeOfPayment_2.Selected.Value='Payment Mode (Choice)'.KOTAK, true, false)
                    Width: =230
                    X: =41
                    Y: =618
                    ZIndex: =26

                ComboBox1_1 As combobox:
                    AccessibleLabel: ="ComboBox1_1"
                    BorderColor: =_VarGblAppColors.BisleriBlue
                    ChevronBackground: =_VarGblAppColors.BisleriBlue
                    ChevronHoverBackground: =ColorFade(_VarGblAppColors.BisleriBlue, -20%)
                    DisplayFields: =["zx_name"]
                    FocusedBorderColor: =_VarGblAppColors.BisleriBlue
                    FocusedBorderThickness: =2
                    Height: =45
                    InputTextPlaceholder: ="Find Bank"
                    Items: ='Bank Masters'
                    PressedFill: =_VarGblAppColors.BisleriBlue
                    SearchFields: =["zx_name"]
                    SearchItems: =Search('Bank Masters',ComboBox1_1.SearchText,"zx_name")
                    SelectionFill: =ColorFade(_VarGblAppColors.BisleriBlue, 20%)
                    SelectMultiple: =false
                    Size: =_VarGblAppFonts.Size.UpperMedium
                    Visible: =If(rdbModeOfPayment_2.Selected.Value='Payment Mode (Choice)'.KOTAK, true, false)
                    Width: =230
                    X: =353
                    Y: =616
                    ZIndex: =27

                Checkbox2 As checkbox:
                    CheckboxBorderColor: =_VarGblAppColors.BisleriBlue
                    CheckboxSize: =40
                    CheckmarkFill: =_VarGblAppColors.BisleriBlue
                    Color: =_VarGblAppColors.BisleriBlue
                    Height: =67
                    Size: =15
                    Text: =""
                    Visible: |-
                        =//If(OrderData.'Mode Of Payment' ='Payment Type (choice)'.PAYTM, true, false)
                        If(rdbModeOfPayment_2.Selected.Value='Payment Mode (Choice)'.PAYTM, true, false)
                    Width: =50
                    X: =415
                    Y: =228
                    ZIndex: =28

                btnPaymentConfirm_8 As button:
                    DisplayMode: |-
                        =//If(IsBlank(lblPaymentInvoiceNoValue_2.Text), DisplayMode.Disabled, DisplayMode.Edit)
                        DisplayMode.Edit
                    Fill: =_VarGblAppColors.BisleriBlue
                    FocusedBorderThickness: =2
                    HoverFill: =ColorFade(_VarGblAppColors.BisleriBlue, -20%)
                    OnSelect: |
                        =Clear(ManipulatedCartCollection);
                        If(
                                CountRows(CreateOrderRecord) > 0 /*&& CountRows(CreateItemsRecord) > 0 */
                        && !IsBlank(
                                    LookUp(
                                        AllCustomerss,
                                        Account = OrderData.Account
                                    ).GSTIN
                                ) && (((LookUp(
                                    AllCustomerss,
                                    Account = OrderData.Account
                                ).'Customer Group'.Name <> "KEY-RT") && LookUp(
                                    AllCustomerss,
                                    Account = OrderData.Account
                                ).Branch.Name = "PUNE") || ((LookUp(
                                    AllCustomerss,
                                    Account = OrderData.Account
                                ).'Customer Group'.Name <> "COR-RT") && LookUp(
                                    AllCustomerss,
                                    Account = OrderData.Account
                                ).Branch.Name = "Mumbai")
                                ),
                               
                                    Set(testButton,
                                   IRNGeneration.Run(CreateInvHeaderdata.'Invoice Header')
                                );
                                /*Patch(
                                    'Invoice Headers',
                                    LookUp(
                                        'Invoice Headers',
                                        'Invoice Number' = CreateInvHeaderdata.'Invoice Number'
                                    ),
                                        {
                                            'Signed QR Code': Text(testButton.qr),
                                            'IRN Number': Text(testButton.qrno),
                                            'IRN Message': Text(testButton.status)
                                        }
                                );*/
                        Set(
                                    varConfirmationIRN,
                                    "signedQRGenerated"
                                );
                                /*Notify(
                                    NotificationType.Success,
                                    2000
                                );*/
                        If(
                                    !IsBlank(testButton),
                                    Patch(
                                        'Invoice Headers',
                                        LookUp(
                                            'Invoice Headers',
                                            'Invoice Number' = CreateInvHeaderdata.'Invoice Number'
                                        ),
                                        {
                                            'Signed QR Code': Text(testButton.qr),
                                            'IRN Number': Text(testButton.qrno),
                                            'IRN Message': Text(testButton.status)
                                        }
                                    )
                                );
                                ,
                                IsBlank(
                                    LookUp(
                                        AllCustomerss,
                                        Account = OrderData.Account
                                    ).GSTIN
                                ),
                                Patch(
                                    'Invoice Headers',
                                    LookUp(
                                        'Invoice Headers',
                                        'Invoice Number' = CreateInvHeaderdata.'Invoice Number'
                                    ),
                                    {
                                        /*'Signed QR Code': Text(testButton.qr),
                                        'IRN Number': Text(testButton.qrno),
                                        'IRN Message': Text(testButton.status),*/
                                        'Local QR ': JSON(
                                            {
                                                gstin: "27AAFCD5862R013",
                                                TranDtls: {
                                                    TaxSch: "GST",
                                                    SupTyp: "B2B",
                                                    RegRev: "N",
                                                    IgstOnIntra: "N"
                                                },
                                                DocDtls: {
                                                    Typ: "INV",
                                                    No: "RI2223C064007302",
                                                    Dt: "24/12/2022"
                                                },
                                                SellerDtls: {
                                                    Gstin: "27AAFCD5862R013",
                                                    LglNm: "MH04GR6972",
                                                    TrdNm: "MH04GR6972",
                                                    Addr1: "JUPITOR HOSPITAL",
                                                    Addr2: "THANE",
                                                    Loc: "V433",
                                                    Pin: 400407,
                                                    Stcd: "27",
                                                    Ph: "982565858",
                                                    Em: "Test123@gmail.com"
                                                },
                                                /*    
                                        BuyerDtls: {
                                            Gstin: "27AABCJ1982E1ZN",
                                            LglNm: "FORTUNE PARK LAKE CITY",
                                            TrdNm: "FORTUNE PARK LAKE CITY",
                                            Pos: "27",
                                            Addr1: "JUPITER MEDIPARKEASTERN EXPRESS HIGHWAY THANE",
                                            Addr2: "WEST",
                                            Loc: "Maharashtra",
                                            Pin: 400601,
                                            Stcd: "27",
                                            Ph: "859657852",
                                            Em: "Test123@gmail.com"
                                        },
                                */
                                                BuyerDtls: {
                                                    LglNm: OrderData.'Customer Name',
                                                    TrdNm: "",
                                                    Addr1: LookUp(
                                                        AllCustomerss,
                                                        Account = OrderData.Account
                                                    ).'Address 1: Street 1',
                                                    Addr2: LookUp(
                                                        AllCustomerss,
                                                        Account = OrderData.Account
                                                    ).'Address 1: Street 2',
                                                    Loc: LookUp(
                                                        AllCustomerss,
                                                        Account = OrderData.Account
                                                    ).'Address 1: City',
                                                    Pin: LookUp(
                                                        AllCustomerss,
                                                        Account = OrderData.Account
                                                    ).'Address 1: ZIP/Postal Code',
                                                    Stcd: Left(
                                                        LookUp(
                                                            AllCustomerss,
                                                            Account = OrderData.Account
                                                        ).GSTIN,
                                                        2
                                                    ),
                                                    Ph: LookUp(
                                                        AllCustomerss,
                                                        Account = OrderData.Account
                                                    ).'Mobile No',
                                                    Em: LookUp(
                                                        AllCustomerss,
                                                        Account = OrderData.Account
                                                    ).Email
                                                },
                                                DispDtls: {
                                                    Nm: "MH04GR6972",
                                                    Addr1: "JUPITOR HOSPITAL",
                                                    Addr2: "THANE",
                                                    Loc: "V433",
                                                    Pin: 400407,
                                                    Stcd: "27"
                                                },
                                                /*
                                        ShipDtls: {
                                            Gstin: "27AABCJ1982E1ZN",
                                            LglNm: "FORTUNE PARK LAKE CITY",
                                            TrdNm: "FORTUNE PARK LAKE CITY",
                                            Addr1: "JUPITER MEDIPARKEASTERN EXPRESS HIGHWAY THANE",
                                            Addr2: "WEST",
                                            Loc: "Maharashtra",
                                            Pin: 400601,
                                            Stcd: "27"
                                        },
                                */
                                                ShipDtls: {
                                                    Gstin: LookUp(
                                                        AllCustomerss,
                                                        Account = OrderData.Account
                                                    ).GSTIN,
                                                    LglNm: OrderData.'Customer Name',
                                                    TrdNm: "",
                                                    Addr1: LookUp(
                                                        AllCustomerss,
                                                        Account = OrderData.Account
                                                    ).'Address 1: Street 1',
                                                    Addr2: LookUp(
                                                        AllCustomerss,
                                                        Account = OrderData.Account
                                                    ).'Address 1: Street 2',
                                                    Loc: LookUp(
                                                        AllCustomerss,
                                                        Account = OrderData.Account
                                                    ).'Address 1: City',
                                                    Pin: LookUp(
                                                        AllCustomerss,
                                                        Account = OrderData.Account
                                                    ).'Address 1: ZIP/Postal Code',
                                                    Stcd: Left(
                                                        LookUp(
                                                            AllCustomerss,
                                                            Account = OrderData.Account
                                                        ).GSTIN,
                                                        2
                                                    )
                                                },
                                                ItemList: ManipulatedCartCollection
                                    //  ItemList: First(ProductList)
                                            }
                                        )
                                    }
                                );
                                Set(
                                    varConfirmationIRN,
                                    "localQRGenerated"
                                );
                                Notify(
                                    "QR has been generated sucessfully",
                                    NotificationType.Success,
                                    2000
                                );
                                ,
                                !IsBlank(
                                    LookUp(
                                        AllCustomerss,
                                        Account = OrderData.Account
                                    ).GSTIN
                                ) && ((LookUp(
                                    AllCustomerss,
                                    Account = OrderData.Account
                                ).'Customer Group'.Name = "KEY-RT" && LookUp(
                                    AllCustomerss,
                                    Account = OrderData.Account
                                ).Branch.Name = "PUNE") || (LookUp(
                                    AllCustomerss,
                                    Account = OrderData.Account
                                ).'Customer Group'.Name = "COR-RT" && LookUp(
                                    AllCustomerss,
                                    Account = OrderData.Account
                                ).Branch.Name = "Mumbai")),
                                Set(
                                    varIRN,
                                    true
                                );
                            );
                        If(
                            !IsBlank(varConfirmationIRN),
                            If(
                                IsBlank(Text(testButton.qr)) && First(CreateInvHeader).'IRN Message' = "N",
                                Set(
                                    varIRN,
                                    true
                                );
                                Notify(
                                    "QR Code generated successfully.",
                                    NotificationType.Success,
                                    4000
                                );
                                ,
                                If(
                                    Not(First(CreateInvHeader).'IRN Message' = "N"),
                                    Set(
                                        varIRN,
                                        true
                                    );
                                    Notify(
                                        "IRN has been generated successfully.",
                                        NotificationType.Success,
                                        4000
                                    )
                                )
                            ),
                            If(
                                First(CreateInvHeader).'IRN Message' = "N",
                                Notify(
                                    "IRN not generated.",
                                    NotificationType.Warning,
                                    4000
                                );
                            )
                        );
                    Size: =_VarGblAppFonts.Size.Medium
                    Text: ="Regenerate IRN"
                    Visible: =false//If(First(CreateInvHeader).'IRN Message'="N", true , false )
                    Width: =200
                    X: =380
                    Y: =635
                    ZIndex: =29

                Group13 As group:
                    Height: =5
                    Width: =5
                    X: =80
                    Y: =80
                    ZIndex: =31

                    lblPaymentAmountLabel_2 As label:
                        FontWeight: =FontWeight.Semibold
                        Size: =_VarGblAppFonts.Size.UpperMedium
                        Text: ="Amount"
                        Visible: |-
                            =/*If(
                                OrderData.'Mode Of Payment' = 'Payment Type (choice)'.CASH || OrderData.'Mode Of Payment' = 'Payment Type (choice)'.CREDIT,
                                true,
                                false
                            )*/
                            If(
                                (rdbModeOfPayment_2.Selected.Value = 'Payment Mode (Choice)'.CASH || rdbModeOfPayment_2.Selected.Value = 'Payment Mode (Choice)'.KOTAK) && Not(OrderData.'Mode Of Payment' = 'Payment Type (choice)'.COUPON),
                                true,
                                false
                            )
                        Width: =230
                        X: =40
                        Y: =428
                        ZIndex: =1

                    txtPaymentAmountValue_2 As text:
                        AccessibleLabel: ="txtPaymentAmountValue_1"
                        BorderColor: =_VarGblAppColors.BisleriBlue
                        Default: |-
                            =/*If(
                                varOrderData.'Mode Of Payment' = 'Payment Type (choice)'.CREDIT,
                                    Text(
                                        ((Sum(
                                            colCartItems,
                                            discountedPrice
                                        ) * ((Sum(
                                                colCartItems,
                                                tax
                                            )) * 0.01)) + Sum(
                                            colCartItems,
                                            discountedPrice
                                        ) + Sum(
                                            colCartItems,
                                            emptyJarValue
                                        )),
                                        "[$-hi-IN]##,##,##,###",
                                        "hi-IN"
                                    ),
                                    ""
                            ) */
                            Text(
                                Sum(
                                    colCartItems,
                                    netAmount
                                ),
                                "[$-hi-IN]##,##,##,###",
                                "hi-IN"
                            )
                        DisplayMode: =If(varOrderData.'Mode Of Payment' = 'Payment Type (choice)'.CREDIT , DisplayMode.View, DisplayMode.Edit)
                        FocusedBorderThickness: =2
                        FontWeight: =FontWeight.Semibold
                        Format: =TextFormat.Number
                        Height: =45
                        HintText: ="Enter Amount"
                        HoverBorderColor: =_VarGblAppColors.BisleriBlue
                        HoverFill: =ColorFade(_VarGblAppColors.BisleriBlue, 80%)
                        OnChange: |-
                            =If(
                                Value(Self.Text) < Value(
                                    Text(
                                        ((Sum(
                                            colCartItems,
                                            discountedPrice
                                        ) * ((Sum(
                                            colCartItems,
                                            tax
                                        )) * 0.01)) + Sum(
                                            colCartItems,
                                            discountedPrice
                                        ) + Sum(
                                            colCartItems,
                                            emptyJarValue
                                        )),
                                        "[$-hi-IN]##,##,##,###",
                                        "hi-IN"
                                    )
                                ) || Value(Self.Text) > Value(
                                    Text(
                                        ((Sum(
                                            colCartItems,
                                            discountedPrice
                                        ) * ((Sum(
                                            colCartItems,
                                            tax
                                        )) * 0.01)) + Sum(
                                            colCartItems,
                                            discountedPrice
                                        ) + Sum(
                                            colCartItems,
                                            emptyJarValue
                                        )),
                                        "[$-hi-IN]##,##,##,###",
                                        "hi-IN"
                                    )
                                ),
                                Notify(
                                    "Please enter correct amount",
                                    NotificationType.Error,
                                    2000
                                )
                            )
                        Size: =_VarGblAppFonts.Size.UpperMedium
                        Visible: |-
                            =/*If(
                                OrderData.'Mode Of Payment' = 'Payment Type (choice)'.CASH || OrderData.'Mode Of Payment' = 'Payment Type (choice)'.CREDIT,
                                true,
                                false
                            )*/
                            If(
                                (rdbModeOfPayment_2.Selected.Value = 'Payment Mode (Choice)'.CASH || rdbModeOfPayment_2.Selected.Value = 'Payment Mode (Choice)'.KOTAK) && Not(OrderData.'Mode Of Payment' = 'Payment Type (choice)'.COUPON),
                                true,
                                false
                            )
                        Width: =230
                        X: =352
                        Y: =425
                        ZIndex: =2

                    lblPaymentRemainingAmountValue_2 As label:
                        Size: =_VarGblAppFonts.Size.Title
                        Text: |-
                            =/*Concatenate(
                                "â¹",
                                Text(
                                    (((Sum(
                                        colCartItems,
                                        discountedPrice
                                    ) * 0.18) + Sum(
                                        colCartItems,
                                        discountedPrice
                                    ) + Sum(
                                        colCartItems,
                                        emptyJarValue
                                    )) - txtPaymentAmountValue_2.Text),
                                    "[$-hi-IN]##,##,##,###",
                                    "hi-IN"
                                )
                            )*/
                            /*Concatenate(
                                "â¹",
                                If(
                                        (((Sum(
                                            colCartItems,
                                            discountedPrice
                                        ) * ((Sum(
                                            colCartItems,
                                            tax
                                        )) * 0.01)) + Sum(
                                            colCartItems,
                                            discountedPrice
                                        ) + Sum(
                                            colCartItems,
                                            emptyJarValue
                                        )) - txtPaymentAmountValue_2.Text) = "-"
                                    ,
                                    Text(
                                        (((Sum(
                                            colCartItems,
                                            discountedPrice
                                        ) * ((Sum(
                                            colCartItems,
                                            tax
                                        )) * 0.01)) + Sum(
                                            colCartItems,
                                            discountedPrice
                                        ) + Sum(
                                            colCartItems,
                                            emptyJarValue
                                        )) - txtPaymentAmountValue_2.Text),
                                        "[$-hi-IN]##,##,##,###",
                                        "hi-IN"
                                    ),
                                    "0"
                                )
                            )*/
                            Concatenate(
                                "â¹",
                                If(
                                        (( Sum(
                                            colCartItems,
                                            netAmount
                                        )) - txtPaymentAmountValue_2.Text) = "-"
                                    ,
                                    Text(
                                        (( Sum(
                                            colCartItems,
                                            netAmount
                                        )) - txtPaymentAmountValue_2.Text),
                                        "[$-hi-IN]##,##,##,###",
                                        "hi-IN"
                                    ),
                                    "0"
                                )
                            )
                        Visible: |-
                            =/*If(
                                OrderData.'Mode Of Payment' = 'Payment Type (choice)'.CASH || OrderData.'Mode Of Payment' = 'Payment Type (choice)'.CREDIT,
                                true,
                                false
                            )*/
                            false
                        Width: =217
                        X: =352
                        Y: =478
                        ZIndex: =3

                    lblPaymentRemainingAmount_2 As label:
                        FontWeight: =FontWeight.Semibold
                        Size: =_VarGblAppFonts.Size.UpperMedium
                        Text: ="Remaining Amount"
                        Visible: |-
                            =/*If(
                                OrderData.'Mode Of Payment' = 'Payment Type (choice)'.CASH || OrderData.'Mode Of Payment' = 'Payment Type (choice)'.CREDIT,
                                true,
                                false
                            )*/
                            false
                        Width: =267
                        X: =40
                        Y: =478
                        ZIndex: =4

                    lblPaymentDate_2 As label:
                        FontWeight: =FontWeight.Semibold
                        Size: =_VarGblAppFonts.Size.UpperMedium
                        Text: ="Date"
                        Visible: |-
                            =/*If(
                                OrderData.'Mode Of Payment' = 'Payment Type (choice)'.CASH || OrderData.'Mode Of Payment' = 'Payment Type (choice)'.CREDIT,
                                true,
                                false
                            )*/
                            If(
                                (rdbModeOfPayment_2.Selected.Value = 'Payment Mode (Choice)'.CASH || rdbModeOfPayment_2.Selected.Value = 'Payment Mode (Choice)'.KOTAK) && Not(OrderData.'Mode Of Payment' = 'Payment Type (choice)'.COUPON),
                                true,
                                false
                            )
                        Width: =230
                        X: =40
                        Y: =328
                        ZIndex: =5

                    lblPaymentDateValue_2 As label:
                        Color: =_VarGblAppColors.PrimaryText
                        FontWeight: =FontWeight.Bold
                        Size: =_VarGblAppFonts.Size.UpperMedium
                        Text: =Text(DateValue(Today()), "mmm dd, yyyy")
                        Visible: |-
                            =/*If(
                                OrderData.'Mode Of Payment' = 'Payment Type (choice)'.CASH || OrderData.'Mode Of Payment' = 'Payment Type (choice)'.CREDIT,
                                true,
                                false
                            )*/
                            If(
                                (rdbModeOfPayment_2.Selected.Value = 'Payment Mode (Choice)'.CASH || rdbModeOfPayment_2.Selected.Value = 'Payment Mode (Choice)'.KOTAK) && Not(OrderData.'Mode Of Payment' = 'Payment Type (choice)'.COUPON),
                                true,
                                false
                            )
                        Width: =217
                        X: =352
                        Y: =328
                        ZIndex: =15

                    lblPaymentDate_3 As label:
                        FontWeight: =FontWeight.Semibold
                        Size: =_VarGblAppFonts.Size.UpperMedium
                        Text: ="Total Invoice Value"
                        Visible: |-
                            =/*If(
                                OrderData.'Mode Of Payment' = 'Payment Type (choice)'.CASH || OrderData.'Mode Of Payment' = 'Payment Type (choice)'.CREDIT,
                                true,
                                false
                            )*/
                            If(
                                (rdbModeOfPayment_2.Selected.Value = 'Payment Mode (Choice)'.CASH || rdbModeOfPayment_2.Selected.Value = 'Payment Mode (Choice)'.KOTAK) && Not(OrderData.'Mode Of Payment' = 'Payment Type (choice)'.COUPON),
                                true,
                                false
                            )
                        Width: =230
                        X: =40
                        Y: =375
                        ZIndex: =17

                    lblPaymentDateValue_3 As label:
                        Color: =_VarGblAppColors.PrimaryText
                        FontWeight: =FontWeight.Bold
                        Size: =_VarGblAppFonts.Size.UpperMedium
                        Text: |-
                            =/*Concatenate(
                                "â¹",
                                Text(
                                    ((Sum(
                                        colCartItems,
                                        discountedPrice
                                    ) * ((Sum(
                                                colCartItems,
                                                tax
                                            )) * 0.01)) + Sum(
                                        colCartItems,
                                        discountedPrice
                                    ) + Sum(
                                        colCartItems,
                                        emptyJarValue
                                    )),
                                    "[$-hi-IN]##,##,##,###",
                                    "hi-IN"
                                )
                            )*/
                            /*Concatenate(
                                "â¹",
                                Text(
                                    ((Sum(
                                        colCartItems,
                                        discountedPrice
                                    ) * ((Sum(
                                                colCartItems,
                                                tax
                                            )) * 0.01)) + Sum(
                                        colCartItems,
                                        discountedPrice
                                    ) + Sum(
                                        colCartItems,
                                        emptyJarValue
                                    )),
                                    "[$-hi-IN]##,##,##,###",
                                    "hi-IN"
                                )
                            )*/
                            Concatenate(
                                "â¹",
                                Text(
                                     Sum(
                                        colCartItems,
                                        netAmount
                                    ),
                                    "[$-hi-IN]##,##,##,###",
                                    "hi-IN"
                                )
                            )
                        Visible: |-
                            =/*If(
                                OrderData.'Mode Of Payment' = 'Payment Type (choice)'.CASH || OrderData.'Mode Of Payment' = 'Payment Type (choice)'.CREDIT,
                                true,
                                false
                            )*/
                            If(
                                (rdbModeOfPayment_2.Selected.Value = 'Payment Mode (Choice)'.CASH || rdbModeOfPayment_2.Selected.Value = 'Payment Mode (Choice)'.KOTAK) && Not(OrderData.'Mode Of Payment' = 'Payment Type (choice)'.COUPON),
                                true,
                                false
                            )
                        Width: =217
                        X: =352
                        Y: =375
                        ZIndex: =18

                    lblPaymentAmountLabel_11 As label:
                        Color: =_VarGblAppColors.PrimaryText
                        FontWeight: =FontWeight.Semibold
                        Size: =_VarGblAppFonts.Size.UpperMedium
                        Text: ="Cheque No."
                        Visible: =If(rdbModeOfPayment_2.Selected.Value='Payment Mode (Choice)'.KOTAK, true, false)
                        Width: =230
                        X: =41
                        Y: =486
                        ZIndex: =22

                    txtPaymentAmountValue_9 As text:
                        AccessibleLabel: ="txtPaymentAmountValue"
                        BorderColor: =_VarGblAppColors.BisleriBlue
                        Default: =""
                        FocusedBorderThickness: =2
                        Format: =TextFormat.Number
                        Height: =45
                        HintText: ="Enter Check No."
                        HoverBorderColor: =_VarGblAppColors.BisleriBlue
                        HoverFill: =ColorFade(_VarGblAppColors.BisleriBlue, 80%)
                        OnChange: =If(Len(Self.Text)=6, false, Reset(Self); Notify("Please enter 6 digit Cheque Number", NotificationType.Information, 2000))
                        Size: =_VarGblAppFonts.Size.UpperMedium
                        Visible: =If(rdbModeOfPayment_2.Selected.Value='Payment Mode (Choice)'.KOTAK, true, false)
                        Width: =230
                        X: =353
                        Y: =483
                        ZIndex: =23

                    lblPaymentAmountLabel_12 As label:
                        Color: =_VarGblAppColors.PrimaryText
                        FontWeight: =FontWeight.Semibold
                        Size: =_VarGblAppFonts.Size.UpperMedium
                        Text: ="Cheque Date"
                        Visible: =If(rdbModeOfPayment_2.Selected.Value='Payment Mode (Choice)'.KOTAK, true, false)
                        Width: =230
                        X: =41
                        Y: =551
                        ZIndex: =24

            Container7 As groupContainer.manualLayoutContainer:
                Height: =303
                Width: =640
                Y: =contHomeOrdersUpperVertical_1.Height + contHomeOrdersUpperVertical_1.Y + 30
                ZIndex: =40

                btnPaymentCancel_3 As button:
                    DisplayMode: |-
                        =If(
                            CountRows(colCartItems) > 0 && IsBlank(lblPaymentInvoiceNoValue_2.Text),
                            DisplayMode.Edit,
                            DisplayMode.Disabled
                        )
                    Fill: =_VarGblAppColors.BisleriBlue
                    FocusedBorderThickness: =2
                    Height: =50
                    HoverFill: =ColorFade(_VarGblAppColors.BisleriBlue, -20%)
                    OnSelect: =Navigate('Visit Screen');
                    Size: =_VarGblAppFonts.Size.UpperMedium
                    Text: ="Cancel"
                    Width: =150
                    X: =308
                    Y: =238
                    ZIndex: =11

                btnPaymentConfirm_5 As button:
                    DisplayMode: |-
                        =If(
                            CountRows(colCartItems) > 0 && IsBlank(lblPaymentInvoiceNoValue_2.Text),
                            DisplayMode.Edit,
                            DisplayMode.Disabled
                        )
                    Fill: =_VarGblAppColors.BisleriBlue
                    FocusedBorderThickness: =2
                    Height: =50
                    HoverFill: =ColorFade(_VarGblAppColors.BisleriBlue, -20%)
                    OnSelect: |-
                        =/////////////////////////////////////////////////////////_____. __________ORDER PLACEMENT
                        Set(
                            visitiddata,
                            First(VisitData).'Visit ID'
                        );
                        Set(
                            Areavalueid,
                            LookUp(
                                Areas,
                                Area = varUserArea.Area.Area
                            )
                        );
                        
                        If(
                            OrderData.'Mode Of Payment' = 'Payment Type (choice)'.CASH || OrderData.'Mode Of Payment' = 'Payment Type (choice)'.COUPON || OrderData.'Mode Of Payment' = 'Payment Type (choice)'.KOTAK || OrderData.'Mode Of Payment' = 'Payment Type (choice)'.PAYTM,
                            ClearCollect(
                                CreateOrderRecord,
                                If(
                                    IsBlank(
                                        LookUp(
                                            'Order Headers',
                                            Vists.'Visit ID' = visitiddata
                                        )
                                    ),
                                    Patch(
                                        'Order Headers',
                                        Defaults('Order Headers'),
                                        {
                                            'Order Date': Now(),
                                            'Order Type': 'Order Type (Choice)'.'Sales Order',
                                            'Mode of Payment': If(
                                                OrderData.'Mode Of Payment' = 'Payment Type (choice)'.CASH,
                                                'Payment Type (choice)'.CASH,
                                                OrderData.'Mode Of Payment' = 'Payment Type (choice)'.COUPON,
                                                'Payment Type (choice)'.COUPON,
                                                OrderData.'Mode Of Payment' = 'Payment Type (choice)'.KOTAK,
                                                'Payment Type (choice)'.KOTAK,
                                                OrderData.'Mode Of Payment' = 'Payment Type (choice)'.PAYTM,
                                                'Payment Type (choice)'.PAYTM
                                            ),
                                            'Total Quantity': (Sum(
                                                colCartItems,
                                                qtyCases
                                            ) + Sum(
                                                colCartItems,
                                                qtyPcs
                                            )),
                                            'Net Amount': ((Sum(
                                                colCartItems,
                                                netAmount
                                            ))),
                                            'Van No': LookUp(
                                                Warehouses,
                                                Warehouse = varUserVanNo.Van.Warehouse
                                            ),
                                            'Route No': LookUp(
                                                Areas,
                                                Area = varUserArea.Area.Area
                                            ),
                                            Customer: LookUp(
                                                Customers_1,
                                                Account = OrderData.Account
                                            ),
                                            Salesperson: LookUp(
                                                Users,
                                                'Primary Email' = User().Email
                                            ),
                                            'Delivery Date': Today(),
                                            'Total Amount': (Sum(
                                                colCartItems,
                                                discountedPrice
                                            ) ),
                                            'Total Tax Amount': (Sum(
                                                colCartItems,
                                                taxAmount
                                            ) ),
                                            'Total Discount Amount': Sum(
                                                colCartItems,
                                                discount
                                            ),
                                            Vists: LookUp(
                                                Visits,
                                                'Visit ID' = visitiddata
                                            )
                                        }
                                    ),
                                    Patch(
                                        'Order Headers',
                                        LookUp(
                                            'Order Headers',
                                            Vists.'Visit ID' = visitiddata
                                        ),
                                        {
                                            'Order Date': Today(),
                                            'Order Type': 'Order Type (Choice)'.'Sales Order',
                                            'Mode of Payment': If(
                                                OrderData.'Mode Of Payment' = 'Payment Type (choice)'.CASH,
                                                'Payment Type (choice)'.CASH,
                                                OrderData.'Mode Of Payment' = 'Payment Type (choice)'.COUPON,
                                                'Payment Type (choice)'.COUPON,
                                                OrderData.'Mode Of Payment' = 'Payment Type (choice)'.KOTAK,
                                                'Payment Type (choice)'.KOTAK,
                                                OrderData.'Mode Of Payment' = 'Payment Type (choice)'.PAYTM,
                                                'Payment Type (choice)'.PAYTM
                                            ),
                                            'Total Quantity': (Sum(
                                                colCartItems,
                                                qtyCases
                                            ) + Sum(
                                                colCartItems,
                                                qtyPcs
                                            )),
                                            'Net Amount': (Sum(
                                                colCartItems,
                                                netAmount
                                            )),
                                            'Van No': LookUp(
                                                Warehouses,
                                                Warehouse = varUserVanNo.Van.Warehouse
                                            ),
                                            'Route No': LookUp(
                                                Areas,
                                                Area = varUserArea.Area.Area
                                            ),
                                            Customer: LookUp(
                                                Customers_1,
                                                Account = OrderData.Account
                                            ),
                                            Salesperson: LookUp(
                                                Users,
                                                'Primary Email' = User().Email
                                            ),
                                            'Delivery Date': Today(),
                                            'Total Amount': (Sum(
                                                colCartItems,
                                                discountedPrice
                                            ) ),
                                            'Total Tax Amount': (Sum(
                                                colCartItems,
                                                taxAmount
                                            )),
                                            'Total Discount Amount': Sum(
                                                colCartItems,
                                                discount
                                            ),
                                            Vists: LookUp(
                                                Visits,
                                                'Visit ID' = visitiddata
                                            )
                                        }
                                    )
                                )
                            );
                            Set(
                                CreateOrderRecorddata,
                                First(CreateOrderRecord)
                            );
                            If(
                                !IsBlank(CreateOrderRecord) && CountRows(CreateOrderRecord) > 0,
                                ClearCollect(
                                    CreateItemsRecord,
                                    ForAll(
                                        Filter(
                                            colCartItems,
                                            schemeOrder = false
                                        ) As ThissItem,
                                        If(
                                            IsBlank(
                                                LookUp(
                                                    'Order Lines',
                                                    'Order Number'.'Order Id' = CreateOrderRecorddata.'Order Id' && 'Item SKU'.'SKU Master' = ThissItem.productId && 'Item Type' = 'Item Type (Choice)'.Paid
                                                )
                                            ),
                                            Patch(
                                                'Order Lines',
                                                Defaults('Order Lines'),
                                                {
                                                    'Total Quantity': ThissItem.qtyCases + ThissItem.qtyPcs,
                                                    Cases: ThissItem.qtyCases,
                                                    PCs: ThissItem.qtyPcs,
                                                    'Empty Jars': ThissItem.emptyJar,
                                                    'Order Number': LookUp(
                                                        'Order Headers',
                                                        'Order Number' = CreateOrderRecorddata.'Order Number'
                                                    ),
                                                    Salesperson: LookUp(
                                                        Users,
                                                        'Primary Email' = User().Email
                                                    ),
                                                    'Van No': LookUp(
                                                        Warehouses,
                                                        Warehouse = varUserVanNo.Van.Warehouse
                                                    ),
                                                    'Item Type': If(
                                                        ThissItem.schemeOrder = true,
                                                        'Item Type (Choice)'.Free,
                                                        'Item Type (Choice)'.Paid
                                                    ),
                                                    'Item SKU': LookUp(
                                                        'SKU Masters',
                                                        'SKU Master' = ThissItem.productId
                                                    ),
                                                    'Cases Unit Price': ThissItem.caseUnitPrice,
                                                    'Pcs Unit Price': ThissItem.pcsUnitPrice,
                                                    // 'Total Amount': (ThissItem.qtyCases * ThissItem.caseUnitPrice) + (ThissItem.qtyPcs * ThissItem.pcsUnitPrice),
                                                    'Total Discount Amount': Value(ThissItem.discount),
                                                    'Tax Amount': ThissItem.taxAmount,
                                                    'Net Amount': ThissItem.netAmount,
                                                    'Customer no.': LookUp(
                                                        Customers_1,
                                                        Account = OrderData.Account
                                                    ),
                                                    'Route No': LookUp(
                                                        Areas,
                                                        Area = varUserArea.Area.Area
                                                    )
                                                   /* 'Reference Scheme ': LookUp(
                                                        'Scheme Orders',
                                                        'Scheme Order' = ThissItem.schemeOrderValue.zx_schemeorderid
                                                    ),
                                                    'Reference Line': LookUp(
                                                        'Order Lines',
                                                        'Order Number'.'Order Number' = CreateOrderRecorddata.'Order Number' && 'Item SKU'.'SKU Master' = LookUp(
                                                            'Scheme Orders',
                                                            'Scheme Order' = ThissItem.schemeOrderValue.zx_schemeorderid
                                                        ).'Item Code'.'SKU Master'
                                                    ) */
                                                  //  'Manufacturing Date': DateValue(ThissItem.manDate)
                                                }
                                            ),
                                            Patch(
                                                'Order Lines',
                                                LookUp(
                                                    'Order Lines',
                                                    'Order Number'.'Order Id' = CreateOrderRecorddata.'Order Id' && 'Item SKU'.'SKU Master' = ThissItem.productId && 'Item Type' = 'Item Type (Choice)'.Paid
                                                ),
                                                {
                                                    'Total Quantity': ThissItem.qtyCases + ThissItem.qtyPcs,
                                                    Cases: ThissItem.qtyCases,
                                                    PCs: ThissItem.qtyPcs,
                                                    'Empty Jars': ThissItem.emptyJar,
                                                    'Order Number': LookUp(
                                                        'Order Headers',
                                                        'Order Number' = CreateOrderRecorddata.'Order Number'
                                                    ),
                                                    Salesperson: LookUp(
                                                        Users,
                                                        'Primary Email' = User().Email
                                                    ),
                                                    'Van No': LookUp(
                                                        Warehouses,
                                                        Warehouse = varUserVanNo.Van.Warehouse
                                                    ),
                                                    'Item Type': If(
                                                        ThissItem.schemeOrder = true,
                                                        'Item Type (Choice)'.Free,
                                                        'Item Type (Choice)'.Paid
                                                    ),
                                                    'Item SKU': LookUp(
                                                        'SKU Masters',
                                                        'SKU Master' = ThissItem.productId
                                                    ),
                                                    'Cases Unit Price': ThissItem.caseUnitPrice,
                                                    'Pcs Unit Price': ThissItem.pcsUnitPrice,
                                                    // 'Total Amount': (ThissItem.qtyCases * ThissItem.caseUnitPrice) + (ThissItem.qtyPcs * ThissItem.pcsUnitPrice),
                                                    'Total Discount Amount': Value(ThissItem.discount),
                                                    'Tax Amount': ThissItem.taxAmount,
                                                    'Net Amount': ThissItem.netAmount,
                                                    'Customer no.': LookUp(
                                                        Customers_1,
                                                        Account = OrderData.Account
                                                    ),
                                                    'Route No': LookUp(
                                                        Areas,
                                                        Area = varUserArea.Area.Area
                                                    )
                                                   /* 'Reference Scheme ': LookUp(
                                                        'Scheme Orders',
                                                        'Scheme Order' = ThissItem.schemeOrderValue.zx_schemeorderid
                                                    ),
                                                    'Reference Line': LookUp(
                                                        'Order Lines',
                                                        'Order Number'.'Order Number' = CreateOrderRecorddata.'Order Number' && 'Item SKU'.'SKU Master' = LookUp(
                                                            'Scheme Orders',
                                                            'Scheme Order' = ThissItem.schemeOrderValue.zx_schemeorderid
                                                        ).'Item Code'.'SKU Master'
                                                    ) */
                                                  //  'Manufacturing Date': DateValue(ThissItem.manDate)
                                                }
                                            )
                                        )
                                    )
                                );
                                ////////////////////////______________________________________Scheme Order Line
                        ClearCollect(
                                    CreateItemsRecord,
                                    ForAll(
                                        Filter(
                                            colCartItems,
                                            schemeOrder = true
                                        ) As ThissItem,
                                        If(
                                            IsBlank(
                                                LookUp(
                                                    'Order Lines',
                                                    'Order Number'.'Order Id' = CreateOrderRecorddata.'Order Id' && 'Item SKU'.'SKU Master' = ThissItem.productId && 'Item Type' = 'Item Type (Choice)'.Free && 'Scheme Parent Item Code'.'SKU Master' = ThissItem.SchemeOrderProductReference
                                                )
                                            ),
                                            Patch(
                                                'Order Lines',
                                                Defaults('Order Lines'),
                                                {
                                                    'Total Quantity': ThissItem.qtyCases + ThissItem.qtyPcs,
                                                    Cases: ThissItem.qtyCases,
                                                    PCs: ThissItem.qtyPcs,
                                                    'Empty Jars': ThissItem.emptyJar,
                                                    'Order Number': LookUp(
                                                        'Order Headers',
                                                        'Order Number' = CreateOrderRecorddata.'Order Number'
                                                    ),
                                                    Salesperson: LookUp(
                                                        Users,
                                                        'Primary Email' = User().Email
                                                    ),
                                                    'Van No': LookUp(
                                                        Warehouses,
                                                        Warehouse = varUserVanNo.Van.Warehouse
                                                    ),
                                                    'Item Type': If(
                                                        ThissItem.schemeOrder = true,
                                                        'Item Type (Choice)'.Free,
                                                        'Item Type (Choice)'.Paid
                                                    ),
                                                    'Item SKU': LookUp(
                                                        'SKU Masters',
                                                        'SKU Master' = ThissItem.productId
                                                    ),
                                                    'Cases Unit Price': ThissItem.caseUnitPrice,
                                                    'Pcs Unit Price': ThissItem.pcsUnitPrice,
                                                    // 'Total Amount': (ThissItem.qtyCases * ThissItem.caseUnitPrice) + (ThissItem.qtyPcs * ThissItem.pcsUnitPrice),
                                                    'Total Discount Amount': Value(ThissItem.discount),
                                                    'Tax Amount': ThissItem.taxAmount,
                                                    'Net Amount': ThissItem.netAmount,
                                                    'Customer no.': LookUp(
                                                        Customers_1,
                                                        Account = OrderData.Account
                                                    ),
                                                    'Route No': LookUp(
                                                        Areas,
                                                        Area = varUserArea.Area.Area
                                                    ),
                                                    'Scheme Parent Item Code': LookUp(
                                                        'SKU Masters',
                                                        'SKU Master' = ThissItem.SchemeOrderProductReference
                                                    ),
                                                    'Scheme Order Item': 
                                                    LookUp(
                                                        'Scheme Orders',
                                                        'Scheme Order' = ThissItem.SchemeOrderLine. 'Scheme Order'
                                                    ),
                                                    'Scheme Offer Item': LookUp(
                                                        'Scheme Offers',
                                                        'Scheme Offers' = ThissItem.schemeOrderValue.'Scheme Offers'
                                                    )
                                                  //  'Manufacturing Date': DateValue(ThissItem.manDate)
                                                }
                                            ),
                                            Patch(
                                                'Order Lines',
                                                LookUp(
                                                    'Order Lines',
                                                    'Order Number'.'Order Id' = CreateOrderRecorddata.'Order Id' && 'Item SKU'.'SKU Master' = ThissItem.productId && 'Item Type' = 'Item Type (Choice)'.Free && 'Scheme Parent Item Code'.'SKU Master' = ThissItem.SchemeOrderProductReference
                                                ),
                                                {
                                                    'Total Quantity': ThissItem.qtyCases + ThissItem.qtyPcs,
                                                    Cases: ThissItem.qtyCases,
                                                    PCs: ThissItem.qtyPcs,
                                                    'Empty Jars': ThissItem.emptyJar,
                                                    'Order Number': LookUp(
                                                        'Order Headers',
                                                        'Order Number' = CreateOrderRecorddata.'Order Number'
                                                    ),
                                                    Salesperson: LookUp(
                                                        Users,
                                                        'Primary Email' = User().Email
                                                    ),
                                                    'Van No': LookUp(
                                                        Warehouses,
                                                        Warehouse = varUserVanNo.Van.Warehouse
                                                    ),
                                                    'Item Type': If(
                                                        ThissItem.schemeOrder = true,
                                                        'Item Type (Choice)'.Free,
                                                        'Item Type (Choice)'.Paid
                                                    ),
                                                    'Item SKU': LookUp(
                                                        'SKU Masters',
                                                        'SKU Master' = ThissItem.productId
                                                    ),
                                                    'Cases Unit Price': ThissItem.caseUnitPrice,
                                                    'Pcs Unit Price': ThissItem.pcsUnitPrice,
                                                    // 'Total Amount': (ThissItem.qtyCases * ThissItem.caseUnitPrice) + (ThissItem.qtyPcs * ThissItem.pcsUnitPrice),
                                                    'Total Discount Amount': Value(ThissItem.discount),
                                                    'Tax Amount': ThissItem.taxAmount,
                                                    'Net Amount': ThissItem.netAmount,
                                                    'Customer no.': LookUp(
                                                        Customers_1,
                                                        Account = OrderData.Account
                                                    ),
                                                    'Route No': LookUp(
                                                        Areas,
                                                        Area = varUserArea.Area.Area
                                                    ),
                                                    'Scheme Parent Item Code': LookUp(
                                                        'SKU Masters',
                                                        'SKU Master' = ThissItem.SchemeOrderProductReference
                                                    ),
                                                    'Scheme Order Item': LookUp(
                                                        'Scheme Orders',
                                                        'Scheme Order' = ThissItem.SchemeOrderLine.'Scheme Order'
                                                    ),
                                                    'Scheme Offer Item': LookUp(
                                                        'Scheme Offers',
                                                        'Scheme Offers' = ThissItem.schemeOrderValue.'Scheme Offers'
                                                    )
                                                  //  'Manufacturing Date': DateValue(ThissItem.manDate)
                                                }
                                            )
                                        )
                                    )
                                );
                                
                        /////////// Patch Invoice Header////////////////////
                        ClearCollect(
                                    CreateInvHeader,
                                    If(
                                        IsBlank(
                                            LookUp(
                                                'Invoice Headers',
                                                'Order Number'.'Order Id' = CreateOrderRecorddata.'Order Id'
                                            )
                                        ),
                                        Patch(
                                            'Invoice Headers',
                                            Defaults('Invoice Headers'),
                                            {
                                                'Invoice Number': Text(
                                                    LookUp(
                                                        'Invoice Series',
                                                        'Route No'.Area = Areavalueid.Area
                                                    ).'Financial Year'
                                                ) & Left(
                                                    LookUp(
                                                        'Invoice Series',
                                                        'Route No'.Area = Areavalueid.Area
                                                    ).'Sequence No',
                                                    4
                                                ) & Text(
                                                    LookUp(
                                                        'Invoice Series',
                                                        'Route No'.Area = Areavalueid.Area
                                                    ).'Route No'.'Name (zx_name)'
                                                ) &
                                            /*LookUp(
                                                'Invoice Series',
                                                'Route No'.Area = LookUp(
                                                    Areas,
                                                    Area = varUserArea.Area.Area
                                                ).Area
                                            ).'Last Sequence No' + "000001",
                         Left(
                                                LookUp(
                                                    'Invoice Series',
                                                    'Route No'.Area = LookUp(
                                                        Areas,
                                                        Area = varUserArea.Area.Area
                                                    ).Area
                                                ).'Sequence No',
                                                4
                                            ) &*/ 
                         Right(
                                                    LookUp(
                                                        'Invoice Series',
                                                        'Route No'.Area = Areavalueid.Area
                                                    ).'Sequence No' + 1,
                                                    6
                                                ),
                                                Salesperson: LookUp(
                                                    Users,
                                                    'Primary Email' = User().Email
                                                ),
                                                Customer: LookUp(
                                                    Customers_1,
                                                    Account = OrderData.Account
                                                ),
                                                'Route No': LookUp(
                                                    Areas,
                                                    Area = varUserArea.Area.Area
                                                ),
                                                'Van No': LookUp(
                                                    Warehouses,
                                                    Warehouse = varUserVanNo.Van.Warehouse
                                                ),
                                                'Invoice Date': Now(),
                                                'Order Type': 'Order Type (Choice)'.'Sales Order',
                                                'Order Number': LookUp(
                                                    'Order Headers',
                                                    'Order Number' = CreateOrderRecorddata.'Order Number'
                                                ),
                                                'Total Amount': (Sum(
                                                    colChildInvoiceLine,
                                                    discountedPrice
                                                ) ),
                                                'Total Tax Amount': (Sum(
                                                    colChildInvoiceLine,
                                                    taxAmount
                                                )),
                                                'Total Discount Amount': Sum(
                                                    colChildInvoiceLine,
                                                    discount
                                                ),
                                                'Cess Value':Sum(colChildInvoiceLine,cessValue),
                                                'CGST Value':Sum(colChildInvoiceLine, cgstValue),
                                                'SGST Value':Sum(colChildInvoiceLine, sgstValue),
                                                'Taxable Value':Sum(colChildInvoiceLine, discountedPrice),
                                                'Net Amount': Sum(
                                                    colChildInvoiceLine,
                                                    netAmount
                                                ),
                                                'Net Amount (Without E Jar)':Sum(
                                                    colChildInvoiceLine,
                                                    netAmountWithoutEJar
                                                ),
                                                'Mode of Payment': OrderData.'Mode Of Payment'
                                            //'IRN Number':,
                                            //'IRN Status':,
                                            //'IRN Message':,
                                            //'Signed QR Code':,
                                            //'Synced Date':,
                                            }
                                        ),
                                        Patch(
                                            'Invoice Headers',
                                            LookUp(
                                                'Invoice Headers',
                                                'Order Number'.'Order Id' = CreateOrderRecorddata.'Order Id'
                                            ),
                                            {
                                                Salesperson: LookUp(
                                                    Users,
                                                    'Primary Email' = User().Email
                                                ),
                                                Customer: LookUp(
                                                    Customers_1,
                                                    Account = OrderData.Account
                                                ),
                                                'Route No': Areavalueid,
                                                'Van No': LookUp(
                                                    Warehouses,
                                                    Warehouse = varUserVanNo.Van.Warehouse
                                                ),
                                                'Invoice Date': Now(),
                                                'Order Type': 'Order Type (Choice)'.'Sales Order',
                                                'Order Number': LookUp(
                                                    'Order Headers',
                                                    'Order Number' = CreateOrderRecorddata.'Order Number'
                                                ),
                                                'Total Amount': (Sum(
                                                    colChildInvoiceLine,
                                                    discountedPrice
                                                ) ),
                                                'Total Tax Amount': (Sum(
                                                    colChildInvoiceLine,
                                                    taxAmount
                                                )),
                                                'Total Discount Amount': Sum(
                                                    colChildInvoiceLine,
                                                    discount
                                                ),
                                                'Cess Value':Sum(colChildInvoiceLine,cessValue),
                                                'CGST Value':Sum(colChildInvoiceLine, cgstValue),
                                                'SGST Value':Sum(colChildInvoiceLine, sgstValue),
                                                'Taxable Value':Sum(colChildInvoiceLine, discountedPrice),
                                                'Net Amount': Sum(
                                                    colChildInvoiceLine,
                                                    netAmount
                                                ),
                                                'Net Amount (Without E Jar)':Sum(
                                                    colChildInvoiceLine,
                                                    netAmountWithoutEJar
                                                ),
                                                'Mode of Payment': OrderData.'Mode Of Payment'
                                            //'IRN Number':,
                                            //'IRN Status':,
                                            //'IRN Message':,
                                            //'Signed QR Code':,
                                            //'Synced Date':,
                                            }
                                        )
                                    )
                                );
                                Set(
                                    CreateInvHeaderdata,
                                    First(CreateInvHeader)
                                );
                                Patch(
                                    'Invoice Series',
                                    LookUp(
                                        'Invoice Series',
                                        'Route No'.Area = Areavalueid.Area
                                    ),
                                    {
                                        'Sequence No': LookUp(
                                            'Invoice Series',
                                            'Route No'.Area = Areavalueid.Area
                                        ).'Sequence No' + 1
                                    }
                                );
                                
                        //////////////Patch Invoice Line ///////////////////
                        ClearCollect(
                                    CreateInvLine,
                                    ForAll(
                                        Filter(
                                            colCartItems,
                                            schemeOrder = false
                                        ) As OrdrItems,
                                        If(
                                            IsBlank(
                                                LookUp(
                                                    'Invoice Lines',
                                                    'Invoice Number'.'Invoice Number' = CreateInvHeaderdata.'Invoice Number' && 'Item SKU'.'SKU Master' = OrdrItems.productId && 'Item Type' = 'Item Type (Choice)'.Paid && 'Invoice Type'= 'Invoice Type (Choice)'.'Parent'
                                                )
                                            ),
                                            Patch(
                                                'Invoice Lines',
                                                Defaults('Invoice Lines'),
                                                {
                                                    'Invoice Number': LookUp(
                                                        'Invoice Headers',
                                                        'Invoice Header' = CreateInvHeaderdata.'Invoice Header'
                                                    ),
                                                    'Order Number': LookUp(
                                                        'Order Headers',
                                                        'Order Number' = CreateOrderRecorddata.'Order Number'
                                                    ),
                                                    'Item Type': If(
                                                        OrdrItems.schemeOrder = true,
                                                        'Item Type (Choice)'.Free,
                                                        'Item Type (Choice)'.Paid
                                                    ),
                                                    'Item SKU': LookUp(
                                                        'SKU Masters',
                                                        'SKU Master' = OrdrItems.productId
                                                    ),
                                                    CGST:Value(OrdrItems.cgst), 
                                                     'SGST/UGST':Value(OrdrItems.sgst), 
                                                   
                                                    CESS:Value(OrdrItems.cess), 
                        
                        
                                                    'Cases Unit Price': OrdrItems.caseUnitPrice,
                                                    'Pcs Unit Price': OrdrItems.pcsUnitPrice,
                                                    'Total Quantity': OrdrItems.qtyCases + OrdrItems.qtyPcs,
                                                    Cases: OrdrItems.qtyCases,
                                                    PCs: OrdrItems.qtyPcs,
                                                    'Total Discount Amount': Value(OrdrItems.discount),
                                                    'Tax Amount': OrdrItems.taxAmount,
                                                    'Cess Value': OrdrItems.cessValue,
                                                    'CGST Value': OrdrItems.cgstValue,
                                                    'SGST Value': OrdrItems.sgstValue,
                                                    'Taxable Value':OrdrItems.discountedPrice,
                                                    Rate: OrdrItems.netAmount,
                                                    'Net Amount (Without E Jar)':OrdrItems.netAmountWithoutEJar,
                                                    Customer: LookUp(
                                                        Customers_1,
                                                        Account = OrderData.Account
                                                    ),
                                                    'Route No': Areavalueid,
                                                    Salesperson: LookUp(
                                                        Users,
                                                        'Primary Email' = User().Email
                                                    ),
                                                    'Van No': LookUp(
                                                        Warehouses,
                                                        Warehouse = varUserVanNo.Van.Warehouse
                                                    ),
                                                    'Batch No': LookUp(
                                                        'Stock Transfer Lines',
                                                        SKU.'SKU Master' = OrdrItems.productId
                                                    ).'Batch no.',
                                                    'Lot No': LookUp(
                                                        'Stock Transfer Lines',
                                                        SKU.'SKU Master' = OrdrItems.productId
                                                    ).'Lot no.',
                                                    'Manufacturing Date': LookUp(
                                                        'Stock Transfer Lines',
                                                        SKU.'SKU Master' = OrdrItems.productId
                                                    ).'Manufacturing date',
                                                    'Empty Jar': OrdrItems.emptyJar
                                                   
                                                }
                                            ),
                                            Patch(
                                                'Invoice Lines',
                                                LookUp(
                                                    'Invoice Lines',
                                                    'Invoice Number'.'Invoice Number' = CreateInvHeaderdata.'Invoice Number' && 'Item SKU'.'SKU Master' = OrdrItems.productId && 'Item Type' = 'Item Type (Choice)'.Paid && 'Invoice Type'= 'Invoice Type (Choice)'.'Parent'
                                                ),
                                                {
                                                     CGST:Value(OrdrItems.cgst), 
                                                     'SGST/UGST':Value(OrdrItems.sgst), 
                                                   
                                                    CESS:Value(OrdrItems.cess), 
                                                    'Invoice Number': LookUp(
                                                        'Invoice Headers',
                                                        'Invoice Header' = CreateInvHeaderdata.'Invoice Header'
                                                    ),
                                                    'Order Number': LookUp(
                                                        'Order Headers',
                                                        'Order Number' = CreateOrderRecorddata.'Order Number'
                                                    ),
                                                    'Item Type': If(
                                                        OrdrItems.schemeOrder = true,
                                                        'Item Type (Choice)'.Free,
                                                        'Item Type (Choice)'.Paid
                                                    ),
                                                    'Item SKU': LookUp(
                                                        'SKU Masters',
                                                        'SKU Master' = OrdrItems.productId
                                                    ),
                                                    'Cases Unit Price': OrdrItems.caseUnitPrice,
                                                    'Pcs Unit Price': OrdrItems.pcsUnitPrice,
                                                    'Total Quantity': OrdrItems.qtyCases + OrdrItems.qtyPcs,
                                                    Cases: OrdrItems.qtyCases,
                                                    PCs: OrdrItems.qtyPcs,
                                                    'Total Discount Amount': Value(OrdrItems.discount),
                                                    'Tax Amount': OrdrItems.taxAmount,
                                                    'Cess Value': OrdrItems.cessValue,
                                                    'CGST Value': OrdrItems.cgstValue,
                                                    'SGST Value': OrdrItems.sgstValue,
                                                    'Taxable Value':OrdrItems.discountedPrice,
                                                    Rate: OrdrItems.netAmount,
                                                    'Net Amount (Without E Jar)':OrdrItems.netAmountWithoutEJar,                            
                                                    Customer: LookUp(
                                                        Customers_1,
                                                        Account = OrderData.Account
                                                    ),
                                                    'Route No': Areavalueid,
                                                    Salesperson: LookUp(
                                                        Users,
                                                        'Primary Email' = User().Email
                                                    ),
                                                    'Van No': LookUp(
                                                        Warehouses,
                                                        Warehouse = varUserVanNo.Van.Warehouse
                                                    ),
                                                    'Batch No': LookUp(
                                                        'Stock Transfer Lines',
                                                        SKU.'SKU Master' = OrdrItems.productId
                                                    ).'Batch no.',
                                                    'Lot No': LookUp(
                                                        'Stock Transfer Lines',
                                                        SKU.'SKU Master' = OrdrItems.productId
                                                    ).'Lot no.',
                                                    'Manufacturing Date': LookUp(
                                                        'Stock Transfer Lines',
                                                        SKU.'SKU Master' = OrdrItems.productId
                                                    ).'Manufacturing date',
                                                    'Empty Jar': OrdrItems.emptyJar
                                                }
                                            )
                                        )
                                    )
                                );
                                ClearCollect(
                                    CreateChildInvLine,
                                    ForAll(
                                        Filter(
                                            colChildInvoiceLine,
                                            schemeOrder = false && childInvoice=true
                                        ) As ChildOrdrItems,
                                        /*If(
                                            IsBlank(
                                                LookUp(
                                                    'Invoice Lines',
                                                    'Invoice Number'.'Invoice Number' = CreateInvHeaderdata.'Invoice Number' && 'Item SKU'.'SKU Master' = ChildOrdrItems.productId && 'Item Type' = 'Item Type (Choice)'.Paid && 'Invoice Type'= 'Invoice Type (Choice)'.Child
                                                )
                                            ),*/
                                            Patch(
                                                'Invoice Lines',
                                                Defaults('Invoice Lines'),
                                                {
                                                    'Invoice Number': LookUp(
                                                        'Invoice Headers',
                                                        'Invoice Header' = CreateInvHeaderdata.'Invoice Header'
                                                    ),
                                                    'Order Number': LookUp(
                                                        'Order Headers',
                                                        'Order Number' = CreateOrderRecorddata.'Order Number'
                                                    ),
                                                    'Item Type': If(
                                                        ChildOrdrItems.schemeOrder = true,
                                                        'Item Type (Choice)'.Free,
                                                        'Item Type (Choice)'.Paid
                                                    ),
                                                    'Item SKU': LookUp(
                                                        'SKU Masters',
                                                        'SKU Master' = ChildOrdrItems.productId
                                                    ),
                                                    'Cases Unit Price': ChildOrdrItems.caseUnitPrice,
                                                    'Pcs Unit Price': ChildOrdrItems.pcsUnitPrice,
                                                    'Total Quantity': ChildOrdrItems.qtyCases + ChildOrdrItems.qtyPcs,
                                                    Cases: ChildOrdrItems.qtyCases,
                                                    PCs: ChildOrdrItems.qtyPcs,
                                                    'Total Discount Amount': Value(ChildOrdrItems.discount),
                                                    'Tax Amount': ChildOrdrItems.taxAmount,
                                                    'Cess Value': ChildOrdrItems.cessValue,
                                                    'CGST Value': ChildOrdrItems.cgstValue,
                                                    'SGST Value': ChildOrdrItems.sgstValue,
                                                    'Taxable Value': ChildOrdrItems.discountedPrice,
                                                    Rate: ChildOrdrItems.netAmount,
                                                    'Net Amount (Without E Jar)': ChildOrdrItems.netAmountWithoutEJar,
                                                    Customer: LookUp(
                                                        Customers_1,
                                                        Account = OrderData.Account
                                                    ),
                                                    'Route No': Areavalueid,
                                                    Salesperson: LookUp(
                                                        Users,
                                                        'Primary Email' = User().Email
                                                    ),
                                                    'Van No': LookUp(
                                                        Warehouses,
                                                        Warehouse = varUserVanNo.Van.Warehouse
                                                    ),
                                                    'Batch No': LookUp(
                                                        'Stock Transfer Lines',
                                                        SKU.'SKU Master' = ChildOrdrItems.productId
                                                    ).'Batch no.',
                                                    'Lot No': LookUp(
                                                        'Stock Transfer Lines',
                                                        SKU.'SKU Master' = ChildOrdrItems.productId
                                                    ).'Lot no.',
                                                    'Manufacturing Date': LookUp(
                                                        'Stock Transfer Lines',
                                                        SKU.'SKU Master' = ChildOrdrItems.productId
                                                    ).'Manufacturing date',
                                                    'Empty Jar': ChildOrdrItems.emptyJar,
                                                    'Invoice Type': 'Invoice Type (Choice)'.Child
                                                }
                                            )/*,
                                            Patch(
                                                'Invoice Lines',
                                                LookUp(
                                                    'Invoice Lines',
                                                    'Invoice Number'.'Invoice Number' = CreateInvHeaderdata.'Invoice Number' && 'Item SKU'.'SKU Master' = ChildOrdrItems.productId && 'Item Type' = 'Item Type (Choice)'.Paid && 'Invoice Type'= 'Invoice Type (Choice)'.Child
                                                ),
                                                {
                                                    'Invoice Number': LookUp(
                                                        'Invoice Headers',
                                                        'Invoice Header' = CreateInvHeaderdata.'Invoice Header'
                                                    ),
                                                    'Order Number': LookUp(
                                                        'Order Headers',
                                                        'Order Number' = CreateOrderRecorddata.'Order Number'
                                                    ),
                                                    'Item Type': If(
                                                        ChildOrdrItems.schemeOrder = true,
                                                        'Item Type (Choice)'.Free,
                                                        'Item Type (Choice)'.Paid
                                                    ),
                                                    'Item SKU': LookUp(
                                                        'SKU Masters',
                                                        'SKU Master' = ChildOrdrItems.productId
                                                    ),
                                                    'Cases Unit Price': ChildOrdrItems.caseUnitPrice,
                                                    'Pcs Unit Price': ChildOrdrItems.pcsUnitPrice,
                                                    'Total Quantity': ChildOrdrItems.qtyCases + ChildOrdrItems.qtyPcs,
                                                    Cases: ChildOrdrItems.qtyCases,
                                                    PCs: ChildOrdrItems.qtyPcs,
                                                    'Total Discount Amount': Value(ChildOrdrItems.discount),
                                                    'Tax Amount': ChildOrdrItems.taxAmount,
                                                    'Cess Value': ChildOrdrItems.cessValue,
                                                    'CGST Value': ChildOrdrItems.cgstValue,
                                                    'SGST Value': ChildOrdrItems.sgstValue,
                                                    'Taxable Value': ChildOrdrItems.discountedPrice,
                                                    Rate: ChildOrdrItems.netAmount,
                                                    'Net Amount (Without E Jar)': ChildOrdrItems.netAmountWithoutEJar,
                                                    Customer: LookUp(
                                                        Customers_1,
                                                        Account = OrderData.Account
                                                    ),
                                                    'Route No': Areavalueid,
                                                    Salesperson: LookUp(
                                                        Users,
                                                        'Primary Email' = User().Email
                                                    ),
                                                    'Van No': LookUp(
                                                        Warehouses,
                                                        Warehouse = varUserVanNo.Van.Warehouse
                                                    ),
                                                    'Batch No': LookUp(
                                                        'Stock Transfer Lines',
                                                        SKU.'SKU Master' = ChildOrdrItems.productId
                                                    ).'Batch no.',
                                                    'Lot No': LookUp(
                                                        'Stock Transfer Lines',
                                                        SKU.'SKU Master' = ChildOrdrItems.productId
                                                    ).'Lot no.',
                                                    'Manufacturing Date': LookUp(
                                                        'Stock Transfer Lines',
                                                        SKU.'SKU Master' = ChildOrdrItems.productId
                                                    ).'Manufacturing date',
                                                    'Empty Jar': ChildOrdrItems.emptyJar,
                                                    'Invoice Type': 'Invoice Type (Choice)'.Child
                                                }
                                            )
                                        )*/
                                    )
                                );
                                ////////////////////////////////_____________Scheme Invoice Line
                        ClearCollect(
                                    CreateInvLine,
                                    ForAll(
                                        Filter(
                                            colCartItems,
                                            schemeOrder = true
                                        ) As OrdrItems,
                                        If(
                                            IsBlank(
                                                LookUp(
                                                    'Invoice Lines',
                                                    'Invoice Number'.'Invoice Number' = CreateInvHeaderdata.'Invoice Number' && 'Item SKU'.'SKU Master' = OrdrItems.productId && 'Item Type' = 'Item Type (Choice)'.Free && 'Scheme Parent Item Code'.'SKU Master' = OrdrItems.SchemeOrderProductReference && 'Invoice Type'= 'Invoice Type (Choice)'.'Parent'
                                                )
                                            ),
                                            Patch(
                                                'Invoice Lines',
                                                Defaults('Invoice Lines'),
                                                {  CGST:Value(OrdrItems.cgst), 
                                                     'SGST/UGST':Value(OrdrItems.sgst), 
                                                   
                                                    CESS:Value(OrdrItems.cess), 
                                                    'Invoice Number': LookUp(
                                                        'Invoice Headers',
                                                        'Invoice Header' = CreateInvHeaderdata.'Invoice Header'
                                                    ),
                                                    'Order Number': LookUp(
                                                        'Order Headers',
                                                        'Order Number' = CreateOrderRecorddata.'Order Number'
                                                    ),
                                                    'Item Type': If(
                                                        OrdrItems.schemeOrder = true,
                                                        'Item Type (Choice)'.Free,
                                                        'Item Type (Choice)'.Paid
                                                    ),
                                                    'Item SKU': LookUp(
                                                        'SKU Masters',
                                                        'SKU Master' = OrdrItems.productId
                                                    ),
                                                    'Cases Unit Price': OrdrItems.caseUnitPrice,
                                                    'Pcs Unit Price': OrdrItems.pcsUnitPrice,
                                                    'Total Quantity': OrdrItems.qtyCases + OrdrItems.qtyPcs,
                                                    Cases: OrdrItems.qtyCases,
                                                    PCs: OrdrItems.qtyPcs,
                                                    'Total Discount Amount': Value(OrdrItems.discount),
                                                    'Tax Amount': OrdrItems.taxAmount,
                                                    Rate: OrdrItems.netAmount,
                                                    'Net Amount (Without E Jar)':OrdrItems.netAmountWithoutEJar,
                                                    'Cess Value': OrdrItems.cessValue,
                                                    'CGST Value': OrdrItems.cgstValue,
                                                    'SGST Value': OrdrItems.sgstValue,
                                                    'Taxable Value':OrdrItems.discountedPrice,
                                                    Customer: LookUp(
                                                        Customers_1,
                                                        Account = OrderData.Account
                                                    ),
                                                    'Route No': Areavalueid,
                                                    Salesperson: LookUp(
                                                        Users,
                                                        'Primary Email' = User().Email
                                                    ),
                                                    'Van No': LookUp(
                                                        Warehouses,
                                                        Warehouse = varUserVanNo.Van.Warehouse
                                                    ),
                                                    'Batch No': LookUp(
                                                        'Stock Transfer Lines',
                                                        SKU.'SKU Master' = OrdrItems.productId
                                                    ).'Batch no.',
                                                    'Lot No': LookUp(
                                                        'Stock Transfer Lines',
                                                        SKU.'SKU Master' = OrdrItems.productId
                                                    ).'Lot no.',
                                                    'Manufacturing Date': LookUp(
                                                        'Stock Transfer Lines',
                                                        SKU.'SKU Master' = OrdrItems.productId
                                                    ).'Manufacturing date',
                                                    'Empty Jar': OrdrItems.emptyJar,
                                                    'Scheme Parent Item Code': LookUp(
                                                        'SKU Masters',
                                                        'SKU Master' = OrdrItems.SchemeOrderProductReference
                                                    ),
                                                    'Scheme Order Item': LookUp(
                                                        'Scheme Orders',
                                                        'Scheme Order' = OrdrItems.SchemeOrderLine.'Scheme Order'
                                                    ),
                                                    'Scheme Offer Item': LookUp(
                                                        'Scheme Offers',
                                                        'Scheme Offers' = OrdrItems.schemeOrderValue.'Scheme Offers'
                                                    )
                                                }
                                            ),
                                            Patch(
                                                'Invoice Lines',
                                                LookUp(
                                                    'Invoice Lines',
                                                    'Invoice Number'.'Invoice Number' = CreateInvHeaderdata.'Invoice Number' && 'Item SKU'.'SKU Master' = OrdrItems.productId && 'Item Type' = 'Item Type (Choice)'.Free && 'Scheme Parent Item Code'.'SKU Master' = OrdrItems.SchemeOrderProductReference && 'Invoice Type'= 'Invoice Type (Choice)'.'Parent'
                                                ),
                                                {
                                                    CGST:Value(OrdrItems.cgst), 
                                                     'SGST/UGST':Value(OrdrItems.sgst), 
                                                   
                                                    CESS:Value(OrdrItems.cess), 
                                                    'Invoice Number': LookUp(
                                                        'Invoice Headers',
                                                        'Invoice Header' = CreateInvHeaderdata.'Invoice Header'
                                                    ),
                                                    'Order Number': LookUp(
                                                        'Order Headers',
                                                        'Order Number' = CreateOrderRecorddata.'Order Number'
                                                    ),
                                                    'Item Type': If(
                                                        OrdrItems.schemeOrder = true,
                                                        'Item Type (Choice)'.Free,
                                                        'Item Type (Choice)'.Paid
                                                    ),
                                                    'Item SKU': LookUp(
                                                        'SKU Masters',
                                                        'SKU Master' = OrdrItems.productId
                                                    ),
                                                    'Cases Unit Price': OrdrItems.caseUnitPrice,
                                                    'Pcs Unit Price': OrdrItems.pcsUnitPrice,
                                                    'Total Quantity': OrdrItems.qtyCases + OrdrItems.qtyPcs,
                                                    Cases: OrdrItems.qtyCases,
                                                    PCs: OrdrItems.qtyPcs,
                                                    'Total Discount Amount': Value(OrdrItems.discount),
                                                    'Tax Amount': OrdrItems.taxAmount,
                                                    'Cess Value': OrdrItems.cessValue,
                                                    'CGST Value': OrdrItems.cgstValue,
                                                    'SGST Value': OrdrItems.sgstValue,
                                                    'Taxable Value':OrdrItems.discountedPrice,
                                                    Rate: OrdrItems.netAmount,
                                                    'Net Amount (Without E Jar)':OrdrItems.netAmountWithoutEJar,
                                                    Customer: LookUp(
                                                        Customers_1,
                                                        Account = OrderData.Account
                                                    ),
                                                    'Route No': Areavalueid,
                                                    Salesperson: LookUp(
                                                        Users,
                                                        'Primary Email' = User().Email
                                                    ),
                                                    'Van No': LookUp(
                                                        Warehouses,
                                                        Warehouse = varUserVanNo.Van.Warehouse
                                                    ),
                                                    'Batch No': LookUp(
                                                        'Stock Transfer Lines',
                                                        SKU.'SKU Master' = OrdrItems.productId
                                                    ).'Batch no.',
                                                    'Lot No': LookUp(
                                                        'Stock Transfer Lines',
                                                        SKU.'SKU Master' = OrdrItems.productId
                                                    ).'Lot no.',
                                                    'Manufacturing Date': LookUp(
                                                        'Stock Transfer Lines',
                                                        SKU.'SKU Master' = OrdrItems.productId
                                                    ).'Manufacturing date',
                                                    'Empty Jar': OrdrItems.emptyJar,
                                                    'Scheme Parent Item Code': LookUp(
                                                        'SKU Masters',
                                                        'SKU Master' = OrdrItems.SchemeOrderProductReference
                                                    ),
                                                    'Scheme Order Item': LookUp(
                                                        'Scheme Orders',
                                                        'Scheme Order' = OrdrItems.SchemeOrderLine.'Scheme Order'
                                                    ),
                                                    'Scheme Offer Item': LookUp(
                                                        'Scheme Offers',
                                                        'Scheme Offers' = OrdrItems.schemeOrderValue.'Scheme Offers'
                                                    )
                                                }
                                            )
                                        )
                                    )
                                );
                                ClearCollect(
                                    CreateChildInvLine,
                                    ForAll(
                                        Filter(
                                            colChildInvoiceLine,
                                            schemeOrder = true && childInvoice = true
                                        ) As ChildOrdrItems,
                                        /*If(
                                            IsBlank(
                                                LookUp(
                                                    'Invoice Lines',
                                                    'Invoice Number'.'Invoice Number' = CreateInvHeaderdata.'Invoice Number' && 'Item SKU'.'SKU Master' = ChildOrdrItems.productId && 'Item Type' = 'Item Type (Choice)'.Free && 'Scheme Parent Item Code'.'SKU Master' = ChildOrdrItems.SchemeOrderProductReference && 'Invoice Type'= 'Invoice Type (Choice)'.Child
                                                )
                                            ),*/
                                            Patch(
                                                'Invoice Lines',
                                                Defaults('Invoice Lines'),
                                                {
                                                    'Invoice Number': LookUp(
                                                        'Invoice Headers',
                                                        'Invoice Header' = CreateInvHeaderdata.'Invoice Header'
                                                    ),
                                                    'Order Number': LookUp(
                                                        'Order Headers',
                                                        'Order Number' = CreateOrderRecorddata.'Order Number'
                                                    ),
                                                    'Item Type': If(
                                                        ChildOrdrItems.schemeOrder = true,
                                                        'Item Type (Choice)'.Free,
                                                        'Item Type (Choice)'.Paid
                                                    ),
                                                    'Item SKU': LookUp(
                                                        'SKU Masters',
                                                        'SKU Master' = ChildOrdrItems.productId
                                                    ),
                                                    'Cases Unit Price': ChildOrdrItems.caseUnitPrice,
                                                    'Pcs Unit Price': ChildOrdrItems.pcsUnitPrice,
                                                    'Total Quantity': ChildOrdrItems.qtyCases + ChildOrdrItems.qtyPcs,
                                                    Cases: ChildOrdrItems.qtyCases,
                                                    PCs: ChildOrdrItems.qtyPcs,
                                                    'Total Discount Amount': Value(ChildOrdrItems.discount),
                                                    'Tax Amount': ChildOrdrItems.taxAmount,
                                                    Rate: ChildOrdrItems.netAmount,
                                                    'Net Amount (Without E Jar)': ChildOrdrItems.netAmountWithoutEJar,
                                                    'Cess Value': ChildOrdrItems.cessValue,
                                                    'CGST Value': ChildOrdrItems.cgstValue,
                                                    'SGST Value': ChildOrdrItems.sgstValue,
                                                    'Taxable Value': ChildOrdrItems.discountedPrice,
                                                    Customer: LookUp(
                                                        Customers_1,
                                                        Account = OrderData.Account
                                                    ),
                                                    'Route No': Areavalueid,
                                                    Salesperson: LookUp(
                                                        Users,
                                                        'Primary Email' = User().Email
                                                    ),
                                                    'Van No': LookUp(
                                                        Warehouses,
                                                        Warehouse = varUserVanNo.Van.Warehouse
                                                    ),
                                                    'Batch No': LookUp(
                                                        'Stock Transfer Lines',
                                                        SKU.'SKU Master' = ChildOrdrItems.productId
                                                    ).'Batch no.',
                                                    'Lot No': LookUp(
                                                        'Stock Transfer Lines',
                                                        SKU.'SKU Master' = ChildOrdrItems.productId
                                                    ).'Lot no.',
                                                    'Manufacturing Date': LookUp(
                                                        'Stock Transfer Lines',
                                                        SKU.'SKU Master' = ChildOrdrItems.productId
                                                    ).'Manufacturing date',
                                                    'Empty Jar': ChildOrdrItems.emptyJar,
                                                    'Scheme Parent Item Code': LookUp(
                                                        'SKU Masters',
                                                        'SKU Master' = ChildOrdrItems.SchemeOrderProductReference
                                                    ),
                                                    'Scheme Order Item': LookUp(
                                                        'Scheme Orders',
                                                        'Scheme Order' = ChildOrdrItems.SchemeOrderLine.'Scheme Order'
                                                    ),
                                                    'Scheme Offer Item': LookUp(
                                                        'Scheme Offers',
                                                        'Scheme Offers' = ChildOrdrItems.schemeOrderValue.'Scheme Offers'
                                                    ),
                                                    'Invoice Type': 'Invoice Type (Choice)'.Child
                                                }
                                            )/*,
                                            Patch(
                                                'Invoice Lines',
                                                LookUp(
                                                    'Invoice Lines',
                                                    'Invoice Number'.'Invoice Number' = CreateInvHeaderdata.'Invoice Number' && 'Item SKU'.'SKU Master' = ChildOrdrItems.productId && 'Item Type' = 'Item Type (Choice)'.Free && 'Scheme Parent Item Code'.'SKU Master' = ChildOrdrItems.SchemeOrderProductReference && 'Invoice Type'= 'Invoice Type (Choice)'.Child
                                                ),
                                                {
                                                    'Invoice Number': LookUp(
                                                        'Invoice Headers',
                                                        'Invoice Header' = CreateInvHeaderdata.'Invoice Header'
                                                    ),
                                                    'Order Number': LookUp(
                                                        'Order Headers',
                                                        'Order Number' = CreateOrderRecorddata.'Order Number'
                                                    ),
                                                    'Item Type': If(
                                                        ChildOrdrItems.schemeOrder = true,
                                                        'Item Type (Choice)'.Free,
                                                        'Item Type (Choice)'.Paid
                                                    ),
                                                    'Item SKU': LookUp(
                                                        'SKU Masters',
                                                        'SKU Master' = ChildOrdrItems.productId
                                                    ),
                                                    'Cases Unit Price': ChildOrdrItems.caseUnitPrice,
                                                    'Pcs Unit Price': ChildOrdrItems.pcsUnitPrice,
                                                    'Total Quantity': ChildOrdrItems.qtyCases + ChildOrdrItems.qtyPcs,
                                                    Cases: ChildOrdrItems.qtyCases,
                                                    PCs: ChildOrdrItems.qtyPcs,
                                                    'Total Discount Amount': Value(ChildOrdrItems.discount),
                                                    'Tax Amount': ChildOrdrItems.taxAmount,
                                                    'Cess Value': ChildOrdrItems.cessValue,
                                                    'CGST Value': ChildOrdrItems.cgstValue,
                                                    'SGST Value': ChildOrdrItems.sgstValue,
                                                    'Taxable Value': ChildOrdrItems.discountedPrice,
                                                    Rate: ChildOrdrItems.netAmount,
                                                    'Net Amount (Without E Jar)': ChildOrdrItems.netAmountWithoutEJar,
                                                    Customer: LookUp(
                                                        Customers_1,
                                                        Account = OrderData.Account
                                                    ),
                                                    'Route No': Areavalueid,
                                                    Salesperson: LookUp(
                                                        Users,
                                                        'Primary Email' = User().Email
                                                    ),
                                                    'Van No': LookUp(
                                                        Warehouses,
                                                        Warehouse = varUserVanNo.Van.Warehouse
                                                    ),
                                                    'Batch No': LookUp(
                                                        'Stock Transfer Lines',
                                                        SKU.'SKU Master' = ChildOrdrItems.productId
                                                    ).'Batch no.',
                                                    'Lot No': LookUp(
                                                        'Stock Transfer Lines',
                                                        SKU.'SKU Master' = ChildOrdrItems.productId
                                                    ).'Lot no.',
                                                    'Manufacturing Date': LookUp(
                                                        'Stock Transfer Lines',
                                                        SKU.'SKU Master' = ChildOrdrItems.productId
                                                    ).'Manufacturing date',
                                                    'Empty Jar': ChildOrdrItems.emptyJar,
                                                    'Scheme Parent Item Code': LookUp(
                                                        'SKU Masters',
                                                        'SKU Master' = ChildOrdrItems.SchemeOrderProductReference
                                                    ),
                                                    'Scheme Order Item': LookUp(
                                                        'Scheme Orders',
                                                        'Scheme Order' = ChildOrdrItems.SchemeOrderLine.'Scheme Order'
                                                    ),
                                                    'Scheme Offer Item': LookUp(
                                                        'Scheme Offers',
                                                        'Scheme Offers' = ChildOrdrItems.schemeOrderValue.'Scheme Offers'
                                                    ),
                                                    'Invoice Type': 'Invoice Type (Choice)'.Child
                                                }
                                            )
                                        )*/
                                    )
                                );
                                
                        ////////// Print Invoice ///////////////
                        /*
                        Launch(
                                    Invoice.Run(
                                        LookUp(
                                            'Invoice Headers',
                                            'Invoice Header' = CreateInvHeaderdata.'Invoice Header'
                                        ).'Invoice Header'
                                    ).bisleriinvoice
                                );
                         */
                            );
                            Set(
                                dataforsum,
                                Filter(
                                    'Order Headers',
                                    Customer.Account = OrderData.Account && 'Created On' >= Today() && 'Payment Status'='Payment Status Choice'.Completed   
                                    ));
                        //Stock substraction from location ____________________________________________________________________________________
                        /*ForAll(
                                colCartItems As oneLine,
                                Patch(
                                    'Current Stocks',
                                    LookUp(
                                        'Current Stocks',
                                        'Item SKU'.'SKU Master' = oneLine.productId && 'Van No'.Warehouse = varUserVanNo.Van.Warehouse && IsToday('Created On')
                                    ),
                                    {
                                        Cases: Sum(
                                            Filter(
                                                'Stock Transfer Lines',
                                                'Transfer Order No'.'Stock Transfer Header' exactin varGatePassHeader.headerGUID && SKU.'SKU Master' = oneLine.productId && IsToday('Created On')
                                            ),
                                            'Remaining Qty Cases'
                                        ),
                                        PCs: Sum(
                                            Filter(
                                                'Stock Transfer Lines',
                                                'Transfer Order No'.'Stock Transfer Header' exactin varGatePassHeader.headerGUID && SKU.'SKU Master' = oneLine.productId && IsToday('Created On')
                                            ),
                                            'Remaining Qty Pcs'
                                        )
                                    }
                                )
                            );
                            Refresh('Current Stocks'); */
                            /* Set(
                                VarPaymentConfirm,
                                true
                            ); */
                        ,
                            ///////////////////////////////////////////////////////////////////////////////////////////////Credit Customer____
                            (OrderData.'Mode Of Payment' = 'Payment Type (choice)'.CREDIT || OrderData.'Mode Of Payment' = 'Payment Type (choice)'.COUPON) && LookUp(
                                Customers_1,
                                Account = OrderData.Account
                            ).'Credit Activated' = 'Credit Activated (Customers_1)'.Yes,
                            If(
                                !IsBlank(
                                    LookUp(
                                        'Temporary Credit Limits',
                                        'Customer code'.Account = OrderData.Account && FromDate <= Today() && ToDate >= Today()
                                    )
                                ),
                                ///////////_____________________________________________________________________________Temporary Credit Exists
                                If(
                                    ((LookUp(
                                        'Temporary Credit Limits',
                                        'Customer code'.Account = OrderData.Account && FromDate <= Today() && ToDate >= Today()
                                    ).'Available Limit') - (LookUp(
                                        Customers_1,
                                        Account = OrderData.Account
                                    ).'Used Credit Limit') - (Sum(
                                        dataforsum,
                                        'Net Amount'
                                    ))) < (Sum(
                                        colCartItems,
                                        netAmount
                                    )),
                                    Notify(
                                        "You don't have sufficient credit limit left, Please check",
                                        NotificationType.Error,
                                        2000
                                    );
                               // Navigate('Visit Screen'),
                        ,
                                    ClearCollect(
                                        CreateOrderRecord,
                                        If(
                                            IsBlank(
                                                LookUp(
                                                    'Order Headers',
                                                    Vists.'Visit ID' = visitiddata
                                                )
                                            ),
                                            Patch(
                                                'Order Headers',
                                                Defaults('Order Headers'),
                                                {
                                                    'Order Date': Today(),
                                                    'Order Type': 'Order Type (Choice)'.'Sales Order',
                                                    'Payment Type': 'Payment Type (Order Headers)'.Credit,
                                                    'Total Quantity': Sum(
                                                        colCartItems,
                                                        qtyCases
                                                    ) + Sum(
                                                        colCartItems,
                                                        qtyPcs
                                                    ),
                                                    'Net Amount': (Sum(
                                                        colCartItems,
                                                        netAmount
                                                    )),
                                                    'Van No': LookUp(
                                                        Warehouses,
                                                        Warehouse = varUserVanNo.Van.Warehouse
                                                    ),
                                                    'Route No': Areavalueid,
                                                    Customer: LookUp(
                                                        Customers_1,
                                                        Account = OrderData.Account
                                                    ),
                                                    Salesperson: LookUp(
                                                        Users,
                                                        'Primary Email' = User().Email
                                                    ),
                                                    'Delivery Date': Today(),
                                                    'Total Amount': (Sum(
                                                        colCartItems,
                                                        discountedPrice
                                                    )),
                                                    'Total Tax Amount': (Sum(
                                                        colCartItems,
                                                        taxAmount
                                                    ) ),
                                                    'Total Discount Amount': Sum(
                                                        colCartItems,
                                                        discount
                                                    ),
                                                    Vists: LookUp(
                                                        Visits,
                                                        'Visit ID' = visitiddata
                                                    )
                                                }
                                            ),
                                            Patch(
                                                'Order Headers',
                                                LookUp(
                                                    'Order Headers',
                                                    Vists.'Visit ID' = visitiddata
                                                ),
                                                {
                                                    'Order Date': Today(),
                                                    'Order Type': 'Order Type (Choice)'.'Sales Order',
                                                    'Payment Type': 'Payment Type (Order Headers)'.Credit,
                                                    'Total Quantity': Sum(
                                                        colCartItems,
                                                        qtyCases
                                                    ) + Sum(
                                                        colCartItems,
                                                        qtyPcs
                                                    ),
                                                    'Net Amount': (Sum(
                                                        colCartItems,
                                                        netAmount
                                                    )),
                                                    'Van No': LookUp(
                                                        Warehouses,
                                                        Warehouse = varUserVanNo.Van.Warehouse
                                                    ),
                                                    'Route No': LookUp(
                                                        Areas,
                                                        Area = varUserArea.Area.Area
                                                    ),
                                                    Customer: LookUp(
                                                        Customers_1,
                                                        Account = OrderData.Account
                                                    ),
                                                    Salesperson: LookUp(
                                                        Users,
                                                        'Primary Email' = User().Email
                                                    ),
                                                    'Delivery Date': Today(),
                                                    'Total Amount': (Sum(
                                                        colCartItems,
                                                        discountedPrice
                                                    )),
                                                    'Total Tax Amount': Sum(
                                                        colCartItems,
                                                        taxAmount
                                                    ),
                                                    'Total Discount Amount': Sum(
                                                        colCartItems,
                                                        discount
                                                    ),
                                                    Vists: LookUp(
                                                        Visits,
                                                        'Visit ID' = visitiddata
                                                    )
                                                }
                                            )
                                        )
                                    );
                                    Set(
                                        CreateOrderRecorddata,
                                        First(CreateOrderRecord)
                                    );
                                    If(
                                        !IsBlank(CreateOrderRecord) && CountRows(CreateOrderRecord) > 0,
                                        ClearCollect(
                                            CreateItemsRecord,
                                            ForAll(
                                                Filter(
                                                    colCartItems,
                                                    schemeOrder = false
                                                ) As ThissItem,
                                                If(
                                                    IsBlank(
                                                        LookUp(
                                                            'Order Lines',
                                                            'Order Number'.'Order Id' = CreateOrderRecorddata.'Order Id' && 'Item SKU'.'SKU Master' = ThissItem.productId && 'Item Type' = 'Item Type (Choice)'.Paid
                                                        )
                                                    ),
                                                    Patch(
                                                        'Order Lines',
                                                        Defaults('Order Lines'),
                                                        {
                                                            'Total Quantity': ThissItem.qtyCases + ThissItem.qtyPcs,
                                                            Cases: ThissItem.qtyCases,
                                                            PCs: ThissItem.qtyPcs,
                                                            'Empty Jars': ThissItem.emptyJar,
                                                            'Order Number': LookUp(
                                                                'Order Headers',
                                                                'Order Number' = CreateOrderRecorddata.'Order Number'
                                                            ),
                                                            Salesperson: LookUp(
                                                                Users,
                                                                'Primary Email' = User().Email
                                                            ),
                                                            'Van No': LookUp(
                                                                Warehouses,
                                                                Warehouse = varUserVanNo.Van.Warehouse
                                                            ),
                                                            'Item Type': If(
                                                                ThissItem.schemeOrder = true,
                                                                'Item Type (Choice)'.Free,
                                                                'Item Type (Choice)'.Paid
                                                            ),
                                                            'Item SKU': LookUp(
                                                                'SKU Masters',
                                                                'SKU Master' = ThissItem.productId
                                                            ),
                                                            'Cases Unit Price': ThissItem.caseUnitPrice,
                                                            'Pcs Unit Price': ThissItem.pcsUnitPrice,
                                                            'Total Discount Amount': Value(ThissItem.discount),
                                                            'Tax Amount': ThissItem.taxAmount,
                                                            'Net Amount': ThissItem.netAmount,
                                                            'Customer no.': LookUp(
                                                                Customers_1,
                                                                Account = OrderData.Account
                                                            ),
                                                            'Route No': Areavalueid
                                                            /* 'Reference Scheme ': LookUp(
                                                        'Scheme Orders',
                                                        'Scheme Order' = ThissItem.schemeOrderValue.zx_schemeorderid
                                                    ),
                                                    'Reference Line': LookUp(
                                                        'Order Lines',
                                                        'Order Number'.'Order Number' = CreateOrderRecorddata.'Order Number' && 'Item SKU'.'SKU Master' = LookUp(
                                                            'Scheme Orders',
                                                            'Scheme Order' = ThissItem.schemeOrderValue.zx_schemeorderid
                                                        ).'Item Code'.'SKU Master'
                                                    ) */
                                                           // 'Manufacturing Date': DateValue(ThissItem.manDate)
                                                        }
                                                    ),
                                                    Patch(
                                                        'Order Lines',
                                                        LookUp(
                                                            'Order Lines',
                                                            'Order Number'.'Order Id' = CreateOrderRecorddata.'Order Id' && 'Item SKU'.'SKU Master' = ThissItem.productId && 'Item Type' = 'Item Type (Choice)'.Paid
                                                        ),
                                                        {
                                                            'Total Quantity': ThissItem.qtyCases + ThissItem.qtyPcs,
                                                            Cases: ThissItem.qtyCases,
                                                            PCs: ThissItem.qtyPcs,
                                                            'Empty Jars': ThissItem.emptyJar,
                                                            'Order Number': LookUp(
                                                                'Order Headers',
                                                                'Order Number' = CreateOrderRecorddata.'Order Number'
                                                            ),
                                                            Salesperson: LookUp(
                                                                Users,
                                                                'Primary Email' = User().Email
                                                            ),
                                                            'Van No': LookUp(
                                                                Warehouses,
                                                                Warehouse = varUserVanNo.Van.Warehouse
                                                            ),
                                                            'Item Type': If(
                                                                ThissItem.schemeOrder = true,
                                                                'Item Type (Choice)'.Free,
                                                                'Item Type (Choice)'.Paid
                                                            ),
                                                            'Item SKU': LookUp(
                                                                'SKU Masters',
                                                                'SKU Master' = ThissItem.productId
                                                            ),
                                                            'Cases Unit Price': ThissItem.caseUnitPrice,
                                                            'Pcs Unit Price': ThissItem.pcsUnitPrice,
                                                            'Total Discount Amount': Value(ThissItem.discount),
                                                            'Tax Amount': ThissItem.taxAmount,
                                                            'Net Amount': ThissItem.netAmount,
                                                            'Customer no.': LookUp(
                                                                Customers_1,
                                                                Account = OrderData.Account
                                                            ),
                                                            'Route No': Areavalueid
                                                            /* 'Reference Scheme ': LookUp(
                                                        'Scheme Orders',
                                                        'Scheme Order' = ThissItem.schemeOrderValue.zx_schemeorderid
                                                    ),
                                                    'Reference Line': LookUp(
                                                        'Order Lines',
                                                        'Order Number'.'Order Number' = CreateOrderRecorddata.'Order Number' && 'Item SKU'.'SKU Master' = LookUp(
                                                            'Scheme Orders',
                                                            'Scheme Order' = ThissItem.schemeOrderValue.zx_schemeorderid
                                                        ).'Item Code'.'SKU Master'
                                                    ) */
                                                           // 'Manufacturing Date': DateValue(ThissItem.manDate)
                                                        }
                                                    )
                                                )
                                            )
                                        );
                                        
                        ////////////////////////////////////////////////////////////////////////////////////////////////////////______________________________________________________________________Scheme Order Line
                        ClearCollect(
                                            CreateItemsRecord,
                                            ForAll(
                                                Filter(
                                                    colCartItems,
                                                    schemeOrder = true
                                                ) As ThissItem,
                                                If(
                                                    IsBlank(
                                                        LookUp(
                                                            'Order Lines',
                                                            'Order Number'.'Order Id' = CreateOrderRecorddata.'Order Id' && 'Item SKU'.'SKU Master' = ThissItem.productId && 'Item Type' = 'Item Type (Choice)'.Free && 'Scheme Parent Item Code'.'SKU Master' = ThissItem.SchemeOrderProductReference
                                                        )
                                                    ),
                                                    Patch(
                                                        'Order Lines',
                                                        Defaults('Order Lines'),
                                                        {
                                                            'Total Quantity': ThissItem.qtyCases + ThissItem.qtyPcs,
                                                            Cases: ThissItem.qtyCases,
                                                            PCs: ThissItem.qtyPcs,
                                                            'Empty Jars': ThissItem.emptyJar,
                                                            'Order Number': LookUp(
                                                                'Order Headers',
                                                                'Order Number' = CreateOrderRecorddata.'Order Number'
                                                            ),
                                                            Salesperson: LookUp(
                                                                Users,
                                                                'Primary Email' = User().Email
                                                            ),
                                                            'Van No': LookUp(
                                                                Warehouses,
                                                                Warehouse = varUserVanNo.Van.Warehouse
                                                            ),
                                                            'Item Type': If(
                                                                ThissItem.schemeOrder = true,
                                                                'Item Type (Choice)'.Free,
                                                                'Item Type (Choice)'.Paid
                                                            ),
                                                            'Item SKU': LookUp(
                                                                'SKU Masters',
                                                                'SKU Master' = ThissItem.productId
                                                            ),
                                                            'Cases Unit Price': ThissItem.caseUnitPrice,
                                                            'Pcs Unit Price': ThissItem.pcsUnitPrice,
                                                            'Total Discount Amount': Value(ThissItem.discount),
                                                            'Tax Amount': ThissItem.taxAmount,
                                                            'Net Amount': ThissItem.netAmount,
                                                            'Customer no.': LookUp(
                                                                Customers_1,
                                                                Account = OrderData.Account
                                                            ),
                                                            'Route No': Areavalueid,
                                                            'Scheme Parent Item Code': LookUp(
                                                                'SKU Masters',
                                                                'SKU Master' = ThissItem.SchemeOrderProductReference
                                                            ),
                                                            'Scheme Order Item': LookUp(
                                                                'Scheme Orders',
                                                                'Scheme Order' = ThissItem.SchemeOrderLine.'Scheme Order'
                                                            ),
                                                            'Scheme Offer Item': LookUp(
                                                                'Scheme Offers',
                                                                'Scheme Offers' = ThissItem.schemeOrderValue.'Scheme Offers'
                                                            )
                                                           // 'Manufacturing Date': DateValue(ThissItem.manDate)
                                                        }
                                                    ),
                                                    Patch(
                                                        'Order Lines',
                                                        LookUp(
                                                            'Order Lines',
                                                            'Order Number'.'Order Id' = CreateOrderRecorddata.'Order Id' && 'Item SKU'.'SKU Master' = ThissItem.productId && 'Item Type' = 'Item Type (Choice)'.Free && 'Scheme Parent Item Code'.'SKU Master' = ThissItem.SchemeOrderProductReference
                                                        ),
                                                        {
                                                            'Total Quantity': ThissItem.qtyCases + ThissItem.qtyPcs,
                                                            Cases: ThissItem.qtyCases,
                                                            PCs: ThissItem.qtyPcs,
                                                            'Empty Jars': ThissItem.emptyJar,
                                                            'Order Number': LookUp(
                                                                'Order Headers',
                                                                'Order Number' = CreateOrderRecorddata.'Order Number'
                                                            ),
                                                            Salesperson: LookUp(
                                                                Users,
                                                                'Primary Email' = User().Email
                                                            ),
                                                            'Van No': LookUp(
                                                                Warehouses,
                                                                Warehouse = varUserVanNo.Van.Warehouse
                                                            ),
                                                            'Item Type': If(
                                                                ThissItem.schemeOrder = true,
                                                                'Item Type (Choice)'.Free,
                                                                'Item Type (Choice)'.Paid
                                                            ),
                                                            'Item SKU': LookUp(
                                                                'SKU Masters',
                                                                'SKU Master' = ThissItem.productId
                                                            ),
                                                            'Cases Unit Price': ThissItem.caseUnitPrice,
                                                            'Pcs Unit Price': ThissItem.pcsUnitPrice,
                                                            'Total Discount Amount': Value(ThissItem.discount),
                                                            'Tax Amount': ThissItem.taxAmount,
                                                            'Net Amount': ThissItem.netAmount,
                                                            'Customer no.': LookUp(
                                                                Customers_1,
                                                                Account = OrderData.Account
                                                            ),
                                                            'Route No': Areavalueid,
                                                            'Scheme Parent Item Code': LookUp(
                                                                'SKU Masters',
                                                                'SKU Master' = ThissItem.SchemeOrderProductReference
                                                            ),
                                                            'Scheme Order Item': LookUp(
                                                                'Scheme Orders',
                                                                'Scheme Order' = ThissItem.SchemeOrderLine.'Scheme Order'
                                                            ),
                                                            'Scheme Offer Item': LookUp(
                                                                'Scheme Offers',
                                                                'Scheme Offers' = ThissItem.schemeOrderValue.'Scheme Offers'
                                                            )
                                                           // 'Manufacturing Date': DateValue(ThissItem.manDate)
                                                        }
                                                    )
                                                )
                                            )
                                        );
                                        
                        /////////// Patch Invoice Header////////////////////
                        ClearCollect(
                                            CreateInvHeader,
                                            If(
                                                IsBlank(
                                                    LookUp(
                                                        'Invoice Headers',
                                                        'Order Number'.'Order Id' = CreateOrderRecorddata.'Order Id'
                                                    )
                                                ),
                                                Patch(
                                                    'Invoice Headers',
                                                    Defaults('Invoice Headers'),
                                                    {
                                                        'Invoice Number': Text(
                                                    LookUp(
                                                        'Invoice Series',
                                                        'Route No'.Area = Areavalueid.Area
                                                    ).'Financial Year') & Left(
                                                            LookUp(
                                                                'Invoice Series',
                                                                'Route No'.Area = Areavalueid.Area
                                                            ).'Sequence No',
                                                            4
                                                        ) & Text(
                                                            LookUp(
                                                                'Invoice Series',
                                                                'Route No'.Area = Areavalueid.Area
                                                            ).'Route No'.'Name (zx_name)'
                                                        ) &
                                            /*LookUp(
                                                'Invoice Series',
                                                'Route No'.Area = LookUp(
                                                    Areas,
                                                    Area = varUserArea.Area.Area
                                                ).Area
                                            ).'Last Sequence No' + "000001",
                         Left(
                                                LookUp(
                                                    'Invoice Series',
                                                    'Route No'.Area = LookUp(
                                                        Areas,
                                                        Area = varUserArea.Area.Area
                                                    ).Area
                                                ).'Sequence No',
                                                4
                                            ) &*/ 
                         Right(
                                                            LookUp(
                                                                'Invoice Series',
                                                                'Route No'.Area = Areavalueid.Area
                                                            ).'Sequence No' + 1,
                                                            6
                                                        ),
                                                        Salesperson: LookUp(
                                                            Users,
                                                            'Primary Email' = User().Email
                                                        ),
                                                        Customer: LookUp(
                                                            Customers_1,
                                                            Account = OrderData.Account
                                                        ),
                                                        'Route No': Areavalueid,
                                                        'Van No': LookUp(
                                                            Warehouses,
                                                            Warehouse = varUserVanNo.Van.Warehouse
                                                        ),
                                                        'Invoice Date': Today(),
                                                        'Order Type': 'Order Type (Choice)'.'Sales Order',
                                                        'Order Number': LookUp(
                                                            'Order Headers',
                                                            'Order Number' = CreateOrderRecorddata.'Order Number'
                                                        ),
                                                        'Total Amount': (Sum(
                                                            colChildInvoiceLine,
                                                            discountedPrice
                                                        ) ),
                                                        'Total Tax Amount': (Sum(
                                                            colChildInvoiceLine,
                                                            taxAmount
                                                        )),
                                                        'Total Discount Amount': Sum(
                                                            colChildInvoiceLine,
                                                            discount
                                                        ),
                                                        'Cess Value':Sum(colChildInvoiceLine,cessValue),
                                                'CGST Value':Sum(colChildInvoiceLine, cgstValue),
                                                'SGST Value':Sum(colChildInvoiceLine, sgstValue),
                                                'Taxable Value':Sum(colChildInvoiceLine, discountedPrice),
                                                        'Net Amount': (Sum(
                                                            colChildInvoiceLine,
                                                            netAmount
                                                        )),
                                                        'Net Amount (Without E Jar)':Sum(
                                                    colChildInvoiceLine,
                                                    netAmountWithoutEJar
                                                ),
                                                        'Mode of Payment': 'Payment Type (choice)'.CREDIT
                                                //'IRN Number':,
                                                //'IRN Status':,
                                                //'IRN Message':,
                                                //'Signed QR Code':,
                                                //'Synced Date':,
                                                    }
                                                ),
                                                Patch(
                                                    'Invoice Headers',
                                                    LookUp(
                                                        'Invoice Headers',
                                                        'Order Number'.'Order Id' = CreateOrderRecorddata.'Order Id'
                                                    ),
                                                    {
                                                        Salesperson: LookUp(
                                                            Users,
                                                            'Primary Email' = User().Email
                                                        ),
                                                        Customer: LookUp(
                                                            Customers_1,
                                                            Account = OrderData.Account
                                                        ),
                                                        'Route No': Areavalueid,
                                                        'Van No': LookUp(
                                                            Warehouses,
                                                            Warehouse = varUserVanNo.Van.Warehouse
                                                        ),
                                                        'Invoice Date': Today(),
                                                        'Order Type': 'Order Type (Choice)'.'Sales Order',
                                                        'Order Number': LookUp(
                                                            'Order Headers',
                                                            'Order Number' = CreateOrderRecorddata.'Order Number'
                                                        ),
                                                        'Total Amount': (Sum(
                                                            colChildInvoiceLine,
                                                            discountedPrice
                                                        ) ),
                                                        'Total Tax Amount': (Sum(
                                                            colChildInvoiceLine,
                                                            taxAmount
                                                        )),
                                                        'Total Discount Amount': Sum(
                                                            colChildInvoiceLine,
                                                            discount
                                                        ),
                                                        'Cess Value':Sum(colChildInvoiceLine,cessValue),
                                                'CGST Value':Sum(colChildInvoiceLine, cgstValue),
                                                'SGST Value':Sum(colChildInvoiceLine, sgstValue),
                                                'Taxable Value':Sum(colChildInvoiceLine, discountedPrice),
                                                        'Net Amount': (Sum(
                                                            colChildInvoiceLine,
                                                            netAmount
                                                        ) ),
                                                        'Net Amount (Without E Jar)':Sum(
                                                    colChildInvoiceLine,
                                                    netAmountWithoutEJar
                                                ),
                                                        'Mode of Payment': 'Payment Type (choice)'.CREDIT
                                                //'IRN Number':,
                                                //'IRN Status':,
                                                //'IRN Message':,
                                                //'Signed QR Code':,
                                                //'Synced Date':,
                                                    }
                                                )
                                            )
                                        );
                                        Set(
                                            CreateInvHeaderdata,
                                            First(CreateInvHeader)
                                        );
                                        Patch(
                                            'Invoice Series',
                                            LookUp(
                                                'Invoice Series',
                                                'Route No'.Area = Areavalueid.Area
                                            ),
                                            {
                                                'Sequence No': LookUp(
                                                    'Invoice Series',
                                                    'Route No'.Area = Areavalueid.Area
                                                ).'Sequence No' + 1
                                            }
                                        );
                                        
                        //////////////Patch Invoice Line ///////////////////
                        ClearCollect(
                                            CreateInvLine,
                                            ForAll(
                                                Filter(
                                                    colCartItems,
                                                    schemeOrder = false
                                                ) As OrdrItems,
                                                If(
                                                    IsBlank(
                                                        LookUp(
                                                            'Invoice Lines',
                                                            'Invoice Number'.'Invoice Number' = CreateInvHeaderdata.'Invoice Number' && 'Item SKU'.'SKU Master' = OrdrItems.productId && 'Item Type' = 'Item Type (Choice)'.Paid && 'Invoice Type'= 'Invoice Type (Choice)'.'Parent'
                                                        )
                                                    ),
                                                    Patch(
                                                        'Invoice Lines',
                                                        Defaults('Invoice Lines'),
                                                        {  CGST:Value(OrdrItems.cgst), 
                                                     'SGST/UGST':Value(OrdrItems.sgst), 
                                                   
                                                    CESS:Value(OrdrItems.cess), 
                                                            'Invoice Number': LookUp(
                                                                'Invoice Headers',
                                                                'Invoice Header' = CreateInvHeaderdata.'Invoice Header'
                                                            ),
                                                            'Order Number': LookUp(
                                                                'Order Headers',
                                                                'Order Number' = CreateOrderRecorddata.'Order Number'
                                                            ),
                                                            'Item Type': If(
                                                                OrdrItems.schemeOrder = true,
                                                                'Item Type (Choice)'.Free,
                                                                'Item Type (Choice)'.Paid
                                                            ),
                                                            'Item SKU': LookUp(
                                                                'SKU Masters',
                                                                'SKU Master' = OrdrItems.productId
                                                            ),
                                                            'Cases Unit Price': OrdrItems.caseUnitPrice,
                                                            'Pcs Unit Price': OrdrItems.pcsUnitPrice,
                                                            'Total Quantity': OrdrItems.qtyCases + OrdrItems.qtyPcs,
                                                            Cases: OrdrItems.qtyCases,
                                                            PCs: OrdrItems.qtyPcs,
                                                            'Total Discount Amount': Value(OrdrItems.discount),
                                                            'Tax Amount': OrdrItems.taxAmount,
                                                            'Cess Value': OrdrItems.cessValue,
                                                    'CGST Value': OrdrItems.cgstValue,
                                                    'SGST Value': OrdrItems.sgstValue,
                                                    'Taxable Value':OrdrItems.discountedPrice,
                                                            Rate: OrdrItems.netAmount,
                                                            'Net Amount (Without E Jar)':OrdrItems.netAmountWithoutEJar,
                                                            Customer: LookUp(
                                                                Customers_1,
                                                                Account = OrderData.Account
                                                            ),
                                                            'Route No': LookUp(
                                                                Areas,
                                                                Area = varUserArea.Area.Area
                                                            ),
                                                            Salesperson: LookUp(
                                                                Users,
                                                                'Primary Email' = User().Email
                                                            ),
                                                            'Van No': LookUp(
                                                                Warehouses,
                                                                Warehouse = varUserVanNo.Van.Warehouse
                                                            ),
                                                            'Batch No': LookUp(
                                                                'Stock Transfer Lines',
                                                                SKU.'SKU Master' = OrdrItems.productId
                                                            ).'Batch no.',
                                                            'Lot No': LookUp(
                                                                'Stock Transfer Lines',
                                                                SKU.'SKU Master' = OrdrItems.productId
                                                            ).'Lot no.',
                                                            'Manufacturing Date': LookUp(
                                                                'Stock Transfer Lines',
                                                                SKU.'SKU Master' = OrdrItems.productId
                                                            ).'Manufacturing date',
                                                            'Empty Jar': OrdrItems.emptyJar
                                                          
                                                        }
                                                    ),
                                                    Patch(
                                                        'Invoice Lines',
                                                        LookUp(
                                                            'Invoice Lines',
                                                            'Invoice Number'.'Invoice Number' = CreateInvHeaderdata.'Invoice Number' && 'Item SKU'.'SKU Master' = OrdrItems.productId && 'Item Type' = 'Item Type (Choice)'.Paid && 'Invoice Type'= 'Invoice Type (Choice)'.'Parent'
                                                        ),
                                                        {   CGST:Value(OrdrItems.cgst), 
                                                     'SGST/UGST':Value(OrdrItems.sgst), 
                                                   
                                                    CESS:Value(OrdrItems.cess), 
                                                            'Invoice Number': LookUp(
                                                                'Invoice Headers',
                                                                'Invoice Header' = CreateInvHeaderdata.'Invoice Header'
                                                            ),
                                                            'Order Number': LookUp(
                                                                'Order Headers',
                                                                'Order Number' = CreateOrderRecorddata.'Order Number'
                                                            ),
                                                            'Item Type': If(
                                                                OrdrItems.schemeOrder = true,
                                                                'Item Type (Choice)'.Free,
                                                                'Item Type (Choice)'.Paid
                                                            ),
                                                            'Item SKU': LookUp(
                                                                'SKU Masters',
                                                                'SKU Master' = OrdrItems.productId
                                                            ),
                                                            'Cases Unit Price': OrdrItems.caseUnitPrice,
                                                            'Pcs Unit Price': OrdrItems.pcsUnitPrice,
                                                            'Total Quantity': OrdrItems.qtyCases + OrdrItems.qtyPcs,
                                                            Cases: OrdrItems.qtyCases,
                                                            PCs: OrdrItems.qtyPcs,
                                                            'Total Discount Amount': Value(OrdrItems.discount),
                                                            'Tax Amount': OrdrItems.taxAmount,
                                                            'Cess Value': OrdrItems.cessValue,
                                                    'CGST Value': OrdrItems.cgstValue,
                                                    'SGST Value': OrdrItems.sgstValue,
                                                    'Taxable Value':OrdrItems.discountedPrice,
                                                            Rate: OrdrItems.netAmount,
                                                            'Net Amount (Without E Jar)':OrdrItems.netAmountWithoutEJar,
                                                            Customer: LookUp(
                                                                Customers_1,
                                                                Account = OrderData.Account
                                                            ),
                                                            'Route No': LookUp(
                                                                Areas,
                                                                Area = varUserArea.Area.Area
                                                            ),
                                                            Salesperson: LookUp(
                                                                Users,
                                                                'Primary Email' = User().Email
                                                            ),
                                                            'Van No': LookUp(
                                                                Warehouses,
                                                                Warehouse = varUserVanNo.Van.Warehouse
                                                            ),
                                                            'Batch No': LookUp(
                                                                'Stock Transfer Lines',
                                                                SKU.'SKU Master' = OrdrItems.productId
                                                            ).'Batch no.',
                                                            'Lot No': LookUp(
                                                                'Stock Transfer Lines',
                                                                SKU.'SKU Master' = OrdrItems.productId
                                                            ).'Lot no.',
                                                            'Manufacturing Date': LookUp(
                                                                'Stock Transfer Lines',
                                                                SKU.'SKU Master' = OrdrItems.productId
                                                            ).'Manufacturing date',
                                                            'Empty Jar': OrdrItems.emptyJar
                                                           
                                                        }
                                                    )
                                                )
                                            )
                                        );
                                        ClearCollect(
                                            CreateChildInvLine,
                                            ForAll(
                                                Filter(
                                                    colChildInvoiceLine,
                                                    schemeOrder = false && childInvoice=true
                                                ) As ChildOrdrItems,
                                                /*If(
                                                    IsBlank(
                                                        LookUp(
                                                            'Invoice Lines',
                                                            'Invoice Number'.'Invoice Number' = CreateInvHeaderdata.'Invoice Number' && 'Item SKU'.'SKU Master' = ChildOrdrItems.productId && 'Item Type' = 'Item Type (Choice)'.Paid && 'Invoice Type'= 'Invoice Type (Choice)'.Child
                                                        )
                                                    ),*/
                                                    Patch(
                                                        'Invoice Lines',
                                                        Defaults('Invoice Lines'),
                                                        {
                                                            'Invoice Number': LookUp(
                                                                'Invoice Headers',
                                                                'Invoice Header' = CreateInvHeaderdata.'Invoice Header'
                                                            ),
                                                            'Order Number': LookUp(
                                                                'Order Headers',
                                                                'Order Number' = CreateOrderRecorddata.'Order Number'
                                                            ),
                                                            'Item Type': If(
                                                                ChildOrdrItems.schemeOrder = true,
                                                                'Item Type (Choice)'.Free,
                                                                'Item Type (Choice)'.Paid
                                                            ),
                                                            'Item SKU': LookUp(
                                                                'SKU Masters',
                                                                'SKU Master' = ChildOrdrItems.productId
                                                            ),
                                                            'Cases Unit Price': ChildOrdrItems.caseUnitPrice,
                                                            'Pcs Unit Price': ChildOrdrItems.pcsUnitPrice,
                                                            'Total Quantity': ChildOrdrItems.qtyCases + ChildOrdrItems.qtyPcs,
                                                            Cases: ChildOrdrItems.qtyCases,
                                                            PCs: ChildOrdrItems.qtyPcs,
                                                            'Total Discount Amount': Value(ChildOrdrItems.discount),
                                                            'Tax Amount': ChildOrdrItems.taxAmount,
                                                            'Cess Value': ChildOrdrItems.cessValue,
                                                            'CGST Value': ChildOrdrItems.cgstValue,
                                                            'SGST Value': ChildOrdrItems.sgstValue,
                                                            'Taxable Value': ChildOrdrItems.discountedPrice,
                                                            Rate: ChildOrdrItems.netAmount,
                                                            'Net Amount (Without E Jar)': ChildOrdrItems.netAmountWithoutEJar,
                                                            Customer: LookUp(
                                                                Customers_1,
                                                                Account = OrderData.Account
                                                            ),
                                                            'Route No': LookUp(
                                                                Areas,
                                                                Area = varUserArea.Area.Area
                                                            ),
                                                            Salesperson: LookUp(
                                                                Users,
                                                                'Primary Email' = User().Email
                                                            ),
                                                            'Van No': LookUp(
                                                                Warehouses,
                                                                Warehouse = varUserVanNo.Van.Warehouse
                                                            ),
                                                            'Batch No': LookUp(
                                                                'Stock Transfer Lines',
                                                                SKU.'SKU Master' = ChildOrdrItems.productId
                                                            ).'Batch no.',
                                                            'Lot No': LookUp(
                                                                'Stock Transfer Lines',
                                                                SKU.'SKU Master' = ChildOrdrItems.productId
                                                            ).'Lot no.',
                                                            'Manufacturing Date': LookUp(
                                                                'Stock Transfer Lines',
                                                                SKU.'SKU Master' = ChildOrdrItems.productId
                                                            ).'Manufacturing date',
                                                            'Empty Jar': ChildOrdrItems.emptyJar,
                                                            'Invoice Type': 'Invoice Type (Choice)'.Child
                                                        }
                                                    )/*,
                                                    Patch(
                                                        'Invoice Lines',
                                                        LookUp(
                                                            'Invoice Lines',
                                                            'Invoice Number'.'Invoice Number' = CreateInvHeaderdata.'Invoice Number' && 'Item SKU'.'SKU Master' = ChildOrdrItems.productId && 'Item Type' = 'Item Type (Choice)'.Paid && 'Invoice Type'= 'Invoice Type (Choice)'.Child
                                                        ),
                                                        {
                                                            'Invoice Number': LookUp(
                                                                'Invoice Headers',
                                                                'Invoice Header' = CreateInvHeaderdata.'Invoice Header'
                                                            ),
                                                            'Order Number': LookUp(
                                                                'Order Headers',
                                                                'Order Number' = CreateOrderRecorddata.'Order Number'
                                                            ),
                                                            'Item Type': If(
                                                                ChildOrdrItems.schemeOrder = true,
                                                                'Item Type (Choice)'.Free,
                                                                'Item Type (Choice)'.Paid
                                                            ),
                                                            'Item SKU': LookUp(
                                                                'SKU Masters',
                                                                'SKU Master' = ChildOrdrItems.productId
                                                            ),
                                                            'Cases Unit Price': ChildOrdrItems.caseUnitPrice,
                                                            'Pcs Unit Price': ChildOrdrItems.pcsUnitPrice,
                                                            'Total Quantity': ChildOrdrItems.qtyCases + ChildOrdrItems.qtyPcs,
                                                            Cases: ChildOrdrItems.qtyCases,
                                                            PCs: ChildOrdrItems.qtyPcs,
                                                            'Total Discount Amount': Value(ChildOrdrItems.discount),
                                                            'Tax Amount': ChildOrdrItems.taxAmount,
                                                            'Cess Value': ChildOrdrItems.cessValue,
                                                            'CGST Value': ChildOrdrItems.cgstValue,
                                                            'SGST Value': ChildOrdrItems.sgstValue,
                                                            'Taxable Value': ChildOrdrItems.discountedPrice,
                                                            Rate: ChildOrdrItems.netAmount,
                                                            'Net Amount (Without E Jar)': ChildOrdrItems.netAmountWithoutEJar,
                                                            Customer: LookUp(
                                                                Customers_1,
                                                                Account = OrderData.Account
                                                            ),
                                                            'Route No': LookUp(
                                                                Areas,
                                                                Area = varUserArea.Area.Area
                                                            ),
                                                            Salesperson: LookUp(
                                                                Users,
                                                                'Primary Email' = User().Email
                                                            ),
                                                            'Van No': LookUp(
                                                                Warehouses,
                                                                Warehouse = varUserVanNo.Van.Warehouse
                                                            ),
                                                            'Batch No': LookUp(
                                                                'Stock Transfer Lines',
                                                                SKU.'SKU Master' = ChildOrdrItems.productId
                                                            ).'Batch no.',
                                                            'Lot No': LookUp(
                                                                'Stock Transfer Lines',
                                                                SKU.'SKU Master' = ChildOrdrItems.productId
                                                            ).'Lot no.',
                                                            'Manufacturing Date': LookUp(
                                                                'Stock Transfer Lines',
                                                                SKU.'SKU Master' = ChildOrdrItems.productId
                                                            ).'Manufacturing date',
                                                            'Empty Jar': ChildOrdrItems.emptyJar,
                                                            'Invoice Type': 'Invoice Type (Choice)'.Child
                                                        }
                                                    )
                                                )*/
                                            )
                                        );
                                        
                        ////////////////______________________Scheme Invoice Line
                        ClearCollect(
                                            CreateInvLine,
                                            ForAll(
                                                Filter(
                                                    colCartItems,
                                                    schemeOrder = true
                                                ) As OrdrItems,
                                                If(
                                                    IsBlank(
                                                        LookUp(
                                                            'Invoice Lines',
                                                            'Invoice Number'.'Invoice Number' = CreateInvHeaderdata.'Invoice Number' && 'Item SKU'.'SKU Master' = OrdrItems.productId && 'Item Type' = 'Item Type (Choice)'.Free && 'Scheme Parent Item Code'.'SKU Master' = OrdrItems.SchemeOrderProductReference && 'Invoice Type'= 'Invoice Type (Choice)'.'Parent'
                                                        )
                                                    ),
                                                    Patch(
                                                        'Invoice Lines',
                                                        Defaults('Invoice Lines'),
                                                        {   CGST:Value(OrdrItems.cgst), 
                                                     'SGST/UGST':Value(OrdrItems.sgst), 
                                                   
                                                    CESS:Value(OrdrItems.cess), 
                                                            'Invoice Number': LookUp(
                                                                'Invoice Headers',
                                                                'Invoice Header' = CreateInvHeaderdata.'Invoice Header'
                                                            ),
                                                            'Order Number': LookUp(
                                                                'Order Headers',
                                                                'Order Number' = CreateOrderRecorddata.'Order Number'
                                                            ),
                                                            'Item Type': If(
                                                                OrdrItems.schemeOrder = true,
                                                                'Item Type (Choice)'.Free,
                                                                'Item Type (Choice)'.Paid
                                                            ),
                                                            'Item SKU': LookUp(
                                                                'SKU Masters',
                                                                'SKU Master' = OrdrItems.productId
                                                            ),
                                                            'Cases Unit Price': OrdrItems.caseUnitPrice,
                                                            'Pcs Unit Price': OrdrItems.pcsUnitPrice,
                                                            'Total Quantity': OrdrItems.qtyCases + OrdrItems.qtyPcs,
                                                            Cases: OrdrItems.qtyCases,
                                                            PCs: OrdrItems.qtyPcs,
                                                            'Total Discount Amount': Value(OrdrItems.discount),
                                                            'Tax Amount': OrdrItems.taxAmount,
                                                            'Cess Value': OrdrItems.cessValue,
                                                    'CGST Value': OrdrItems.cgstValue,
                                                    'SGST Value': OrdrItems.sgstValue,
                                                    'Taxable Value':OrdrItems.discountedPrice,
                                                            Rate: OrdrItems.netAmount,
                                                            'Net Amount (Without E Jar)':OrdrItems.netAmountWithoutEJar,
                                                            Customer: LookUp(
                                                                Customers_1,
                                                                Account = OrderData.Account
                                                            ),
                                                            'Route No': LookUp(
                                                                Areas,
                                                                Area = varUserArea.Area.Area
                                                            ),
                                                            Salesperson: LookUp(
                                                                Users,
                                                                'Primary Email' = User().Email
                                                            ),
                                                            'Van No': LookUp(
                                                                Warehouses,
                                                                Warehouse = varUserVanNo.Van.Warehouse
                                                            ),
                                                            'Batch No': LookUp(
                                                                'Stock Transfer Lines',
                                                                SKU.'SKU Master' = OrdrItems.productId
                                                            ).'Batch no.',
                                                            'Lot No': LookUp(
                                                                'Stock Transfer Lines',
                                                                SKU.'SKU Master' = OrdrItems.productId
                                                            ).'Lot no.',
                                                            'Manufacturing Date': LookUp(
                                                                'Stock Transfer Lines',
                                                                SKU.'SKU Master' = OrdrItems.productId
                                                            ).'Manufacturing date',
                                                            'Empty Jar': OrdrItems.emptyJar,
                                                            'Scheme Parent Item Code': LookUp(
                                                                'SKU Masters',
                                                                'SKU Master' = OrdrItems.SchemeOrderProductReference
                                                            ),
                                                            'Scheme Order Item': LookUp(
                                                                'Scheme Orders',
                                                                'Scheme Order' = OrdrItems.SchemeOrderLine.'Scheme Order'
                                                            ),
                                                            'Scheme Offer Item': LookUp(
                                                                'Scheme Offers',
                                                                'Scheme Offers' = OrdrItems.schemeOrderValue.'Scheme Offers'
                                                            )
                                                        }
                                                    ),
                                                    Patch(
                                                        'Invoice Lines',
                                                        LookUp(
                                                            'Invoice Lines',
                                                            'Invoice Number'.'Invoice Number' = CreateInvHeaderdata.'Invoice Number' && 'Item SKU'.'SKU Master' = OrdrItems.productId && 'Item Type' = 'Item Type (Choice)'.Free && 'Scheme Parent Item Code'.'SKU Master' = OrdrItems.SchemeOrderProductReference 
                                                        ),
                                                        {
                                                             CGST:Value(OrdrItems.cgst), 
                                                     'SGST/UGST':Value(OrdrItems.sgst), 
                                                   
                                                    CESS:Value(OrdrItems.cess), 
                                                            'Invoice Number': LookUp(
                                                                'Invoice Headers',
                                                                'Invoice Header' = CreateInvHeaderdata.'Invoice Header'
                                                            ),
                                                            'Order Number': LookUp(
                                                                'Order Headers',
                                                                'Order Number' = CreateOrderRecorddata.'Order Number'
                                                            ),
                                                            'Item Type': If(
                                                                OrdrItems.schemeOrder = true,
                                                                'Item Type (Choice)'.Free,
                                                                'Item Type (Choice)'.Paid
                                                            ),
                                                            'Item SKU': LookUp(
                                                                'SKU Masters',
                                                                'SKU Master' = OrdrItems.productId
                                                            ),
                                                            'Cases Unit Price': OrdrItems.caseUnitPrice,
                                                            'Pcs Unit Price': OrdrItems.pcsUnitPrice,
                                                            'Total Quantity': OrdrItems.qtyCases + OrdrItems.qtyPcs,
                                                            Cases: OrdrItems.qtyCases,
                                                            PCs: OrdrItems.qtyPcs,
                                                            'Total Discount Amount': Value(OrdrItems.discount),
                                                            'Tax Amount': OrdrItems.taxAmount,
                                                            'Cess Value': OrdrItems.cessValue,
                                                    'CGST Value': OrdrItems.cgstValue,
                                                    'SGST Value': OrdrItems.sgstValue,
                                                    'Taxable Value':OrdrItems.discountedPrice,
                                                            Rate: OrdrItems.netAmount,
                                                            'Net Amount (Without E Jar)':OrdrItems.netAmountWithoutEJar,
                                                            Customer: LookUp(
                                                                Customers_1,
                                                                Account = OrderData.Account
                                                            ),
                                                            'Route No': LookUp(
                                                                Areas,
                                                                Area = varUserArea.Area.Area
                                                            ),
                                                            Salesperson: LookUp(
                                                                Users,
                                                                'Primary Email' = User().Email
                                                            ),
                                                            'Van No': LookUp(
                                                                Warehouses,
                                                                Warehouse = varUserVanNo.Van.Warehouse
                                                            ),
                                                            'Batch No': LookUp(
                                                                'Stock Transfer Lines',
                                                                SKU.'SKU Master' = OrdrItems.productId
                                                            ).'Batch no.',
                                                            'Lot No': LookUp(
                                                                'Stock Transfer Lines',
                                                                SKU.'SKU Master' = OrdrItems.productId
                                                            ).'Lot no.',
                                                            'Manufacturing Date': LookUp(
                                                                'Stock Transfer Lines',
                                                                SKU.'SKU Master' = OrdrItems.productId
                                                            ).'Manufacturing date',
                                                            'Empty Jar': OrdrItems.emptyJar,
                                                            'Scheme Parent Item Code': LookUp(
                                                                'SKU Masters',
                                                                'SKU Master' = OrdrItems.SchemeOrderProductReference
                                                            ),
                                                            'Scheme Order Item': LookUp(
                                                                'Scheme Orders',
                                                                'Scheme Order' = OrdrItems.SchemeOrderLine.'Scheme Order'
                                                            ),
                                                            'Scheme Offer Item': LookUp(
                                                                'Scheme Offers',
                                                                'Scheme Offers' = OrdrItems.schemeOrderValue.'Scheme Offers'
                                                            )
                                                        }
                                                    )
                                                )
                                            )
                                        );
                                        ClearCollect(
                                            CreateChildInvLine,
                                            ForAll(
                                                Filter(
                                                    colChildInvoiceLine,
                                                    schemeOrder = true && childInvoice = true
                                                ) As ChildOrdrItems,
                                                /*If(
                                                    IsBlank(
                                                        LookUp(
                                                            'Invoice Lines',
                                                            'Invoice Number'.'Invoice Number' = CreateInvHeaderdata.'Invoice Number' && 'Item SKU'.'SKU Master' = ChildOrdrItems.productId && 'Item Type' = 'Item Type (Choice)'.Free && 'Scheme Parent Item Code'.'SKU Master' = ChildOrdrItems.SchemeOrderProductReference && 'Invoice Type'= 'Invoice Type (Choice)'.Child
                                                        )
                                                    ),*/
                                                    Patch(
                                                        'Invoice Lines',
                                                        Defaults('Invoice Lines'),
                                                        {
                                                            'Invoice Number': LookUp(
                                                                'Invoice Headers',
                                                                'Invoice Header' = CreateInvHeaderdata.'Invoice Header'
                                                            ),
                                                            'Order Number': LookUp(
                                                                'Order Headers',
                                                                'Order Number' = CreateOrderRecorddata.'Order Number'
                                                            ),
                                                            'Item Type': If(
                                                                ChildOrdrItems.schemeOrder = true,
                                                                'Item Type (Choice)'.Free,
                                                                'Item Type (Choice)'.Paid
                                                            ),
                                                            'Item SKU': LookUp(
                                                                'SKU Masters',
                                                                'SKU Master' = ChildOrdrItems.productId
                                                            ),
                                                            'Cases Unit Price': ChildOrdrItems.caseUnitPrice,
                                                            'Pcs Unit Price': ChildOrdrItems.pcsUnitPrice,
                                                            'Total Quantity': ChildOrdrItems.qtyCases + ChildOrdrItems.qtyPcs,
                                                            Cases: ChildOrdrItems.qtyCases,
                                                            PCs: ChildOrdrItems.qtyPcs,
                                                            'Total Discount Amount': Value(ChildOrdrItems.discount),
                                                            'Tax Amount': ChildOrdrItems.taxAmount,
                                                            'Cess Value': ChildOrdrItems.cessValue,
                                                            'CGST Value': ChildOrdrItems.cgstValue,
                                                            'SGST Value': ChildOrdrItems.sgstValue,
                                                            'Taxable Value': ChildOrdrItems.discountedPrice,
                                                            Rate: ChildOrdrItems.netAmount,
                                                            'Net Amount (Without E Jar)': ChildOrdrItems.netAmountWithoutEJar,
                                                            Customer: LookUp(
                                                                Customers_1,
                                                                Account = OrderData.Account
                                                            ),
                                                            'Route No': LookUp(
                                                                Areas,
                                                                Area = varUserArea.Area.Area
                                                            ),
                                                            Salesperson: LookUp(
                                                                Users,
                                                                'Primary Email' = User().Email
                                                            ),
                                                            'Van No': LookUp(
                                                                Warehouses,
                                                                Warehouse = varUserVanNo.Van.Warehouse
                                                            ),
                                                            'Batch No': LookUp(
                                                                'Stock Transfer Lines',
                                                                SKU.'SKU Master' = ChildOrdrItems.productId
                                                            ).'Batch no.',
                                                            'Lot No': LookUp(
                                                                'Stock Transfer Lines',
                                                                SKU.'SKU Master' = ChildOrdrItems.productId
                                                            ).'Lot no.',
                                                            'Manufacturing Date': LookUp(
                                                                'Stock Transfer Lines',
                                                                SKU.'SKU Master' = ChildOrdrItems.productId
                                                            ).'Manufacturing date',
                                                            'Empty Jar': ChildOrdrItems.emptyJar,
                                                            'Scheme Parent Item Code': LookUp(
                                                                'SKU Masters',
                                                                'SKU Master' = ChildOrdrItems.SchemeOrderProductReference
                                                            ),
                                                            'Scheme Order Item': LookUp(
                                                                'Scheme Orders',
                                                                'Scheme Order' = ChildOrdrItems.SchemeOrderLine.'Scheme Order'
                                                            ),
                                                            'Scheme Offer Item': LookUp(
                                                                'Scheme Offers',
                                                                'Scheme Offers' = ChildOrdrItems.schemeOrderValue.'Scheme Offers'
                                                            ),
                                                            'Invoice Type': 'Invoice Type (Choice)'.Child
                                                        }
                                                    )/*,
                                                    Patch(
                                                        'Invoice Lines',
                                                        LookUp(
                                                            'Invoice Lines',
                                                            'Invoice Number'.'Invoice Number' = CreateInvHeaderdata.'Invoice Number' && 'Item SKU'.'SKU Master' = ChildOrdrItems.productId && 'Item Type' = 'Item Type (Choice)'.Free && 'Scheme Parent Item Code'.'SKU Master' = ChildOrdrItems.SchemeOrderProductReference && 'Invoice Type'= 'Invoice Type (Choice)'.Child
                                                        ),
                                                        {
                                                            'Invoice Number': LookUp(
                                                                'Invoice Headers',
                                                                'Invoice Header' = CreateInvHeaderdata.'Invoice Header'
                                                            ),
                                                            'Order Number': LookUp(
                                                                'Order Headers',
                                                                'Order Number' = CreateOrderRecorddata.'Order Number'
                                                            ),
                                                            'Item Type': If(
                                                                ChildOrdrItems.schemeOrder = true,
                                                                'Item Type (Choice)'.Free,
                                                                'Item Type (Choice)'.Paid
                                                            ),
                                                            'Item SKU': LookUp(
                                                                'SKU Masters',
                                                                'SKU Master' = ChildOrdrItems.productId
                                                            ),
                                                            'Cases Unit Price': ChildOrdrItems.caseUnitPrice,
                                                            'Pcs Unit Price': ChildOrdrItems.pcsUnitPrice,
                                                            'Total Quantity': ChildOrdrItems.qtyCases + ChildOrdrItems.qtyPcs,
                                                            Cases: ChildOrdrItems.qtyCases,
                                                            PCs: ChildOrdrItems.qtyPcs,
                                                            'Total Discount Amount': Value(ChildOrdrItems.discount),
                                                            'Tax Amount': ChildOrdrItems.taxAmount,
                                                            'Cess Value': ChildOrdrItems.cessValue,
                                                            'CGST Value': ChildOrdrItems.cgstValue,
                                                            'SGST Value': ChildOrdrItems.sgstValue,
                                                            'Taxable Value': ChildOrdrItems.discountedPrice,
                                                            Rate: ChildOrdrItems.netAmount,
                                                            'Net Amount (Without E Jar)': ChildOrdrItems.netAmountWithoutEJar,
                                                            Customer: LookUp(
                                                                Customers_1,
                                                                Account = OrderData.Account
                                                            ),
                                                            'Route No': LookUp(
                                                                Areas,
                                                                Area = varUserArea.Area.Area
                                                            ),
                                                            Salesperson: LookUp(
                                                                Users,
                                                                'Primary Email' = User().Email
                                                            ),
                                                            'Van No': LookUp(
                                                                Warehouses,
                                                                Warehouse = varUserVanNo.Van.Warehouse
                                                            ),
                                                            'Batch No': LookUp(
                                                                'Stock Transfer Lines',
                                                                SKU.'SKU Master' = ChildOrdrItems.productId
                                                            ).'Batch no.',
                                                            'Lot No': LookUp(
                                                                'Stock Transfer Lines',
                                                                SKU.'SKU Master' = ChildOrdrItems.productId
                                                            ).'Lot no.',
                                                            'Manufacturing Date': LookUp(
                                                                'Stock Transfer Lines',
                                                                SKU.'SKU Master' = ChildOrdrItems.productId
                                                            ).'Manufacturing date',
                                                            'Empty Jar': ChildOrdrItems.emptyJar,
                                                            'Scheme Parent Item Code': LookUp(
                                                                'SKU Masters',
                                                                'SKU Master' = ChildOrdrItems.SchemeOrderProductReference
                                                            ),
                                                            'Scheme Order Item': LookUp(
                                                                'Scheme Orders',
                                                                'Scheme Order' = ChildOrdrItems.SchemeOrderLine.'Scheme Order'
                                                            ),
                                                            'Scheme Offer Item': LookUp(
                                                                'Scheme Offers',
                                                                'Scheme Offers' = ChildOrdrItems.schemeOrderValue.'Scheme Offers'
                                                            ),
                                                            'Invoice Type': 'Invoice Type (Choice)'.Child
                                                        }
                                                    )
                                                )*/
                                            )
                                        );
                                    /*    Launch(
                                            Invoice.Run(
                                                LookUp(
                                                    'Invoice Headers',
                                                    'Invoice Header' = CreateInvHeaderdata.'Invoice Header'
                                                ).'Invoice Header'
                                            ).bisleriinvoice
                                        ); 
                                    */
                                    );
                                    
                        //Stock substraction from location ____________________________________________________________________________________
                        /*ForAll(
                                        colCartItems As oneLine,
                                        Patch(
                                            'Current Stocks',
                                            LookUp(
                                                'Current Stocks',
                                                'Item SKU'.'SKU Master' = oneLine.productId && 'Van No'.Warehouse = varUserVanNo.Van.Warehouse && IsToday('Created On')
                                            ),
                                            {
                                                Cases: Sum(
                                                    Filter(
                                                        'Stock Transfer Lines',
                                                        'Transfer Order No'.'Stock Transfer Header' exactin varGatePassHeader.headerGUID && SKU.'SKU Master' = oneLine.productId && IsToday('Created On')
                                                    ),
                                                    'Remaining Qty Cases'
                                                ),
                                                PCs: Sum(
                                                    Filter(
                                                        'Stock Transfer Lines',
                                                        'Transfer Order No'.'Stock Transfer Header' exactin varGatePassHeader.headerGUID && SKU.'SKU Master' = oneLine.productId && IsToday('Created On')
                                                    ),
                                                    'Remaining Qty Pcs'
                                                )
                                            }
                                        )
                                    );
                                    Refresh('Current Stocks'); */
                        ///////////////////////////////////////////////////////////////////////////Credit Updation in Temporary Credit customer
                        /*Patch(
                                        'Temporary Credit Limits',
                                        LookUp(
                                            'Temporary Credit Limits',
                                            'Customer code'.Account = OrderData.Account && FromDate <= Today() && ToDate >= Today()
                                        ),
                                        {
                                            BlockedLimit: LookUp(
                                                'Temporary Credit Limits',
                                                'Customer code'.Account = OrderData.Account && FromDate <= Today() && ToDate >= Today()
                                            ).BlockedLimit + ((Sum(
                                                col,
                                                cartItem.discountedPrice
                                            ) * ((Sum(
                                                col,
                                                cartItem.tax
                                            )) * 0.01)) + Sum(
                                                col,
                                                cartItem.discountedPrice
                                            ) + Sum(
                                                col,
                                                cartItem.emptyJarValue
                                            ))
                                        }
                                    ); */
                                 /*   Set(
                                        VarPaymentConfirm,
                                        true
                                    ); */
                                ),
                            ////////////______________________________________________Temporary customer credit does not exists, Permanent exists    
                                If(
                                    ((LookUp(
                                        Customers_1,
                                        Account = OrderData.Account
                                    ).'Total Credit limit') - (LookUp(
                                        Customers_1,
                                        Account = OrderData.Account
                                    ).'Used Credit Limit') - (Sum(
                                        dataforsum,
                                        'Net Amount'
                                    ))) < (Sum(
                                        colCartItems,
                                        netAmount
                                    ) ),
                                    Notify(
                                        "You don't have sufficient credit limit left, Please check",
                                        NotificationType.Error,
                                        2000
                                    );
                               // Navigate('Visit Screen'),
                        ,
                                    ClearCollect(
                                        CreateOrderRecord,
                                        If(
                                            IsBlank(
                                                LookUp(
                                                    'Order Headers',
                                                    Vists.'Visit ID' = visitiddata
                                                )
                                            ),
                                            Patch(
                                                'Order Headers',
                                                Defaults('Order Headers'),
                                                {
                                                    'Order Date': Today(),
                                                    'Order Type': 'Order Type (Choice)'.'Sales Order',
                                                    'Payment Type': 'Payment Type (Order Headers)'.Credit,
                                                    'Total Quantity': Sum(
                                                        colCartItems,
                                                        qtyCases
                                                    ) + Sum(
                                                        colCartItems,
                                                        qtyPcs
                                                    ),
                                                    'Net Amount': (Sum(
                                                        colCartItems,
                                                        netAmount
                                                    )),
                                                    'Van No': LookUp(
                                                        Warehouses,
                                                        Warehouse = varUserVanNo.Van.Warehouse
                                                    ),
                                                    'Route No': LookUp(
                                                        Areas,
                                                        Area = varUserArea.Area.Area
                                                    ),
                                                    Customer: LookUp(
                                                        Customers_1,
                                                        Account = OrderData.Account
                                                    ),
                                                    Salesperson: LookUp(
                                                        Users,
                                                        'Primary Email' = User().Email
                                                    ),
                                                    'Delivery Date': Today(),
                                                    'Total Amount': (Sum(
                                                        colCartItems,
                                                        discountedPrice
                                                    ) ),
                                                    'Total Tax Amount': (Sum(
                                                        colCartItems,
                                                        taxAmount
                                                    )),
                                                    'Total Discount Amount': Sum(
                                                        colCartItems,
                                                        discount
                                                    ),
                                                    Vists: LookUp(
                                                        Visits,
                                                        'Visit ID' = visitiddata
                                                    )
                                                }
                                            ),
                                            Patch(
                                                'Order Headers',
                                                LookUp(
                                                    'Order Headers',
                                                    Vists.'Visit ID' = visitiddata
                                                ),
                                                {
                                                    'Order Date': Today(),
                                                    'Order Type': 'Order Type (Choice)'.'Sales Order',
                                                    'Payment Type': 'Payment Type (Order Headers)'.Credit,
                                                    'Total Quantity': Sum(
                                                        colCartItems,
                                                        qtyCases
                                                    ) + Sum(
                                                        colCartItems,
                                                        qtyPcs
                                                    ),
                                                    'Net Amount': (Sum(
                                                        colCartItems,
                                                        netAmount
                                                    ) ),
                                                    'Van No': LookUp(
                                                        Warehouses,
                                                        Warehouse = varUserVanNo.Van.Warehouse
                                                    ),
                                                    'Route No': LookUp(
                                                        Areas,
                                                        Area = varUserArea.Area.Area
                                                    ),
                                                    Customer: LookUp(
                                                        Customers_1,
                                                        Account = OrderData.Account
                                                    ),
                                                    Salesperson: LookUp(
                                                        Users,
                                                        'Primary Email' = User().Email
                                                    ),
                                                    'Delivery Date': Today(),
                                                    'Total Amount': (Sum(
                                                        colCartItems,
                                                        discountedPrice
                                                    ) ),
                                                    'Total Tax Amount': (Sum(
                                                        colCartItems,
                                                        taxAmount
                                                    ) ),
                                                    'Total Discount Amount': Sum(
                                                        colCartItems,
                                                        discount
                                                    ),
                                                    Vists: LookUp(
                                                        Visits,
                                                        'Visit ID' = visitiddata
                                                    )
                                                }
                                            )
                                        )
                                    );
                                    Set(
                                        CreateOrderRecorddata,
                                        First(CreateOrderRecord)
                                    );
                                    If(
                                        !IsBlank(CreateOrderRecord) && CountRows(CreateOrderRecord) > 0,
                                        ClearCollect(
                                            CreateItemsRecord,
                                            ForAll(
                                                Filter(
                                                    colCartItems,
                                                    schemeOrder = false
                                                ) As ThissItem,
                                                If(
                                                    IsBlank(
                                                        LookUp(
                                                            'Order Lines',
                                                            'Order Number'.'Order Id' = CreateOrderRecorddata.'Order Id' && 'Item SKU'.'SKU Master' = ThissItem.productId && 'Item Type' = 'Item Type (Choice)'.Paid
                                                        )
                                                    ),
                                                    Patch(
                                                        'Order Lines',
                                                        Defaults('Order Lines'),
                                                        {
                                                            'Total Quantity': ThissItem.qtyCases + ThissItem.qtyPcs,
                                                            Cases: ThissItem.qtyCases,
                                                            PCs: ThissItem.qtyPcs,
                                                            'Empty Jars': ThissItem.emptyJar,
                                                            'Order Number': LookUp(
                                                                'Order Headers',
                                                                'Order Number' = CreateOrderRecorddata.'Order Number'
                                                            ),
                                                            Salesperson: LookUp(
                                                                Users,
                                                                'Primary Email' = User().Email
                                                            ),
                                                            'Van No': LookUp(
                                                                Warehouses,
                                                                Warehouse = varUserVanNo.Van.Warehouse
                                                            ),
                                                            'Item Type': If(
                                                                ThissItem.schemeOrder = true,
                                                                'Item Type (Choice)'.Free,
                                                                'Item Type (Choice)'.Paid
                                                            ),
                                                            'Item SKU': LookUp(
                                                                'SKU Masters',
                                                                'SKU Master' = ThissItem.productId
                                                            ),
                                                            'Cases Unit Price': ThissItem.caseUnitPrice,
                                                            'Pcs Unit Price': ThissItem.pcsUnitPrice,
                                                            'Total Discount Amount': Value(ThissItem.discount),
                                                            'Tax Amount': ThissItem.taxAmount,
                                                            'Net Amount': ThissItem.netAmount,
                                                            'Customer no.': LookUp(
                                                                Customers_1,
                                                                Account = OrderData.Account
                                                            ),
                                                            'Route No': LookUp(
                                                                Areas,
                                                                Area = varUserArea.Area.Area
                                                            )
                                                           /* 'Reference Scheme ': LookUp(
                                                        'Scheme Orders',
                                                        'Scheme Order' = ThissItem.schemeOrderValue.zx_schemeorderid
                                                    ),
                                                    'Reference Line': LookUp(
                                                        'Order Lines',
                                                        'Order Number'.'Order Number' = CreateOrderRecorddata.'Order Number' && 'Item SKU'.'SKU Master' = LookUp(
                                                            'Scheme Orders',
                                                            'Scheme Order' = ThissItem.schemeOrderValue.zx_schemeorderid
                                                        ).'Item Code'.'SKU Master'
                                                    ) */
                                                           // 'Manufacturing Date': DateValue(ThissItem.manDate)
                                                        }
                                                    ),
                                                    Patch(
                                                        'Order Lines',
                                                        LookUp(
                                                            'Order Lines',
                                                            'Order Number'.'Order Id' = CreateOrderRecorddata.'Order Id' && 'Item SKU'.'SKU Master' = ThissItem.productId && 'Item Type' = 'Item Type (Choice)'.Paid
                                                        ),
                                                        {
                                                            'Total Quantity': ThissItem.qtyCases + ThissItem.qtyPcs,
                                                            Cases: ThissItem.qtyCases,
                                                            PCs: ThissItem.qtyPcs,
                                                            'Empty Jars': ThissItem.emptyJar,
                                                            'Order Number': LookUp(
                                                                'Order Headers',
                                                                'Order Number' = CreateOrderRecorddata.'Order Number'
                                                            ),
                                                            Salesperson: LookUp(
                                                                Users,
                                                                'Primary Email' = User().Email
                                                            ),
                                                            'Van No': LookUp(
                                                                Warehouses,
                                                                Warehouse = varUserVanNo.Van.Warehouse
                                                            ),
                                                            'Item Type': If(
                                                                ThissItem.schemeOrder = true,
                                                                'Item Type (Choice)'.Free,
                                                                'Item Type (Choice)'.Paid
                                                            ),
                                                            'Item SKU': LookUp(
                                                                'SKU Masters',
                                                                'SKU Master' = ThissItem.productId
                                                            ),
                                                            'Cases Unit Price': ThissItem.caseUnitPrice,
                                                            'Pcs Unit Price': ThissItem.pcsUnitPrice,
                                                            'Total Discount Amount': Value(ThissItem.discount),
                                                            'Tax Amount': ThissItem.taxAmount,
                                                            'Net Amount': ThissItem.netAmount,
                                                            'Customer no.': LookUp(
                                                                Customers_1,
                                                                Account = OrderData.Account
                                                            ),
                                                            'Route No': LookUp(
                                                                Areas,
                                                                Area = varUserArea.Area.Area
                                                            )
                                                            /* 'Reference Scheme ': LookUp(
                                                        'Scheme Orders',
                                                        'Scheme Order' = ThissItem.schemeOrderValue.zx_schemeorderid
                                                    ),
                                                    'Reference Line': LookUp(
                                                        'Order Lines',
                                                        'Order Number'.'Order Number' = CreateOrderRecorddata.'Order Number' && 'Item SKU'.'SKU Master' = LookUp(
                                                            'Scheme Orders',
                                                            'Scheme Order' = ThissItem.schemeOrderValue.zx_schemeorderid
                                                        ).'Item Code'.'SKU Master'
                                                    ) */
                                                           // 'Manufacturing Date': DateValue(ThissItem.manDate)
                                                        }
                                                    )
                                                )
                                            )
                                        );
                                        ///////////////_____________________________Scheme Order Line
                        ClearCollect(
                                            CreateItemsRecord,
                                            ForAll(
                                                Filter(
                                                    colCartItems,
                                                    schemeOrder = true
                                                ) As ThissItem,
                                                If(
                                                    IsBlank(
                                                        LookUp(
                                                            'Order Lines',
                                                            'Order Number'.'Order Id' = CreateOrderRecorddata.'Order Id' && 'Item SKU'.'SKU Master' = ThissItem.productId && 'Item Type' = 'Item Type (Choice)'.Free && 'Scheme Parent Item Code'.'SKU Master' = ThissItem.SchemeOrderProductReference
                                                        )
                                                    ),
                                                    Patch(
                                                        'Order Lines',
                                                        Defaults('Order Lines'),
                                                        {
                                                            'Total Quantity': ThissItem.qtyCases + ThissItem.qtyPcs,
                                                            Cases: ThissItem.qtyCases,
                                                            PCs: ThissItem.qtyPcs,
                                                            'Empty Jars': ThissItem.emptyJar,
                                                            'Order Number': LookUp(
                                                                'Order Headers',
                                                                'Order Number' = CreateOrderRecorddata.'Order Number'
                                                            ),
                                                            Salesperson: LookUp(
                                                                Users,
                                                                'Primary Email' = User().Email
                                                            ),
                                                            'Van No': LookUp(
                                                                Warehouses,
                                                                Warehouse = varUserVanNo.Van.Warehouse
                                                            ),
                                                            'Item Type': If(
                                                                ThissItem.schemeOrder = true,
                                                                'Item Type (Choice)'.Free,
                                                                'Item Type (Choice)'.Paid
                                                            ),
                                                            'Item SKU': LookUp(
                                                                'SKU Masters',
                                                                'SKU Master' = ThissItem.productId
                                                            ),
                                                            'Cases Unit Price': ThissItem.caseUnitPrice,
                                                            'Pcs Unit Price': ThissItem.pcsUnitPrice,
                                                            'Total Discount Amount': Value(ThissItem.discount),
                                                            'Tax Amount': ThissItem.taxAmount,
                                                            'Net Amount': ThissItem.netAmount,
                                                            'Customer no.': LookUp(
                                                                Customers_1,
                                                                Account = OrderData.Account
                                                            ),
                                                            'Route No': LookUp(
                                                                Areas,
                                                                Area = varUserArea.Area.Area
                                                            ),
                                                            'Scheme Parent Item Code': LookUp(
                                                                'SKU Masters',
                                                                'SKU Master' = ThissItem.SchemeOrderProductReference
                                                            ),
                                                            'Scheme Order Item': LookUp(
                                                                'Scheme Orders',
                                                                'Scheme Order' = ThissItem.SchemeOrderLine.'Scheme Order'
                                                            ),
                                                            'Scheme Offer Item': LookUp(
                                                                'Scheme Offers',
                                                                'Scheme Offers' = ThissItem.schemeOrderValue.'Scheme Offers'
                                                            )
                                                           // 'Manufacturing Date': DateValue(ThissItem.manDate)
                                                        }
                                                    ),
                                                    Patch(
                                                        'Order Lines',
                                                        LookUp(
                                                            'Order Lines',
                                                            'Order Number'.'Order Id' = CreateOrderRecorddata.'Order Id' && 'Item SKU'.'SKU Master' = ThissItem.productId && 'Item Type' = 'Item Type (Choice)'.Free && 'Scheme Parent Item Code'.'SKU Master' = ThissItem.SchemeOrderProductReference
                                                        ),
                                                        {
                                                            'Total Quantity': ThissItem.qtyCases + ThissItem.qtyPcs,
                                                            Cases: ThissItem.qtyCases,
                                                            PCs: ThissItem.qtyPcs,
                                                            'Empty Jars': ThissItem.emptyJar,
                                                            'Order Number': LookUp(
                                                                'Order Headers',
                                                                'Order Number' = CreateOrderRecorddata.'Order Number'
                                                            ),
                                                            Salesperson: LookUp(
                                                                Users,
                                                                'Primary Email' = User().Email
                                                            ),
                                                            'Van No': LookUp(
                                                                Warehouses,
                                                                Warehouse = varUserVanNo.Van.Warehouse
                                                            ),
                                                            'Item Type': If(
                                                                ThissItem.schemeOrder = true,
                                                                'Item Type (Choice)'.Free,
                                                                'Item Type (Choice)'.Paid
                                                            ),
                                                            'Item SKU': LookUp(
                                                                'SKU Masters',
                                                                'SKU Master' = ThissItem.productId
                                                            ),
                                                            'Cases Unit Price': ThissItem.caseUnitPrice,
                                                            'Pcs Unit Price': ThissItem.pcsUnitPrice,
                                                            'Total Discount Amount': Value(ThissItem.discount),
                                                            'Tax Amount': ThissItem.taxAmount,
                                                            'Net Amount': ThissItem.netAmount,
                                                            'Customer no.': LookUp(
                                                                Customers_1,
                                                                Account = OrderData.Account
                                                            ),
                                                            'Route No': LookUp(
                                                                Areas,
                                                                Area = varUserArea.Area.Area
                                                            ),
                                                            'Scheme Parent Item Code': LookUp(
                                                                'SKU Masters',
                                                                'SKU Master' = ThissItem.SchemeOrderProductReference
                                                            ),
                                                            'Scheme Order Item': LookUp(
                                                                'Scheme Orders',
                                                                'Scheme Order' = ThissItem.SchemeOrderLine.'Scheme Order'
                                                            ),
                                                            'Scheme Offer Item': LookUp(
                                                                'Scheme Offers',
                                                                'Scheme Offers' = ThissItem.schemeOrderValue.'Scheme Offers'
                                                            )
                                                           // 'Manufacturing Date': DateValue(ThissItem.manDate)
                                                        }
                                                    )
                                                )
                                            )
                                        );
                                        
                        /////////// Patch Invoice Header////////////////////
                        ClearCollect(
                                            CreateInvHeader,
                                            If(
                                                IsBlank(
                                                    LookUp(
                                                        'Invoice Headers',
                                                        'Order Number'.'Order Id' = CreateOrderRecorddata.'Order Id'
                                                    )
                                                ),
                                                Patch(
                                                    'Invoice Headers',
                                                    Defaults('Invoice Headers'),
                                                    {
                                                        'Invoice Number': Text(
                                                    LookUp(
                                                        'Invoice Series',
                                                        'Route No'.Area = Areavalueid.Area
                                                    ).'Financial Year') & Left(
                                                            LookUp(
                                                                'Invoice Series',
                                                                'Route No'.Area = Areavalueid.Area
                                                            ).'Sequence No',
                                                            4
                                                        ) & Text(
                                                            LookUp(
                                                                'Invoice Series',
                                                                'Route No'.Area = Areavalueid.Area
                                                            ).'Route No'.'Name (zx_name)'
                                                        ) &
                                            /*LookUp(
                                                'Invoice Series',
                                                'Route No'.Area = LookUp(
                                                    Areas,
                                                    Area = varUserArea.Area.Area
                                                ).Area
                                            ).'Last Sequence No' + "000001",
                         Left(
                                                LookUp(
                                                    'Invoice Series',
                                                    'Route No'.Area = LookUp(
                                                        Areas,
                                                        Area = varUserArea.Area.Area
                                                    ).Area
                                                ).'Sequence No',
                                                4
                                            ) &*/ 
                         Right(
                                                            LookUp(
                                                                'Invoice Series',
                                                                'Route No'.Area = Areavalueid.Area
                                                            ).'Sequence No' + 1,
                                                            6
                                                        ),
                                                        Salesperson: LookUp(
                                                            Users,
                                                            'Primary Email' = User().Email
                                                        ),
                                                        Customer: LookUp(
                                                            Customers_1,
                                                            Account = OrderData.Account
                                                        ),
                                                        'Route No': LookUp(
                                                            Areas,
                                                            Area = varUserArea.Area.Area
                                                        ),
                                                        'Van No': LookUp(
                                                            Warehouses,
                                                            Warehouse = varUserVanNo.Van.Warehouse
                                                        ),
                                                        'Invoice Date': Today(),
                                                        'Order Type': 'Order Type (Choice)'.'Sales Order',
                                                        'Order Number': LookUp(
                                                            'Order Headers',
                                                            'Order Number' = CreateOrderRecorddata.'Order Number'
                                                        ),
                                                        'Total Amount': (Sum(
                                                            colChildInvoiceLine,
                                                            discountedPrice
                                                        ) ),
                                                        'Total Tax Amount': (Sum(
                                                            colChildInvoiceLine,
                                                            taxAmount
                                                        ) ),
                                                        'Total Discount Amount': Sum(
                                                            colChildInvoiceLine,
                                                            discount
                                                        ),
                                                        'Cess Value':Sum(colChildInvoiceLine,cessValue),
                                                'CGST Value':Sum(colChildInvoiceLine, cgstValue),
                                                'SGST Value':Sum(colChildInvoiceLine, sgstValue),
                                                'Taxable Value':Sum(colChildInvoiceLine, discountedPrice),
                                                        'Net Amount': (Sum(
                                                            colChildInvoiceLine,
                                                            netAmount
                                                        ) ),
                                                        'Net Amount (Without E Jar)':Sum(
                                                    colChildInvoiceLine,
                                                    netAmountWithoutEJar
                                                ),
                                                        'Mode of Payment': 'Payment Type (choice)'.CREDIT
                                                //'IRN Number':,
                                                //'IRN Status':,
                                                //'IRN Message':,
                                                //'Signed QR Code':,
                                                //'Synced Date':,
                                                    }
                                                ),
                                                Patch(
                                                    'Invoice Headers',
                                                    LookUp(
                                                        'Invoice Headers',
                                                        'Order Number'.'Order Id' = CreateOrderRecorddata.'Order Id'
                                                    ),
                                                    {
                                                        Salesperson: LookUp(
                                                            Users,
                                                            'Primary Email' = User().Email
                                                        ),
                                                        Customer: LookUp(
                                                            Customers_1,
                                                            Account = OrderData.Account
                                                        ),
                                                        'Route No': Areavalueid,
                                                        'Van No': LookUp(
                                                            Warehouses,
                                                            Warehouse = varUserVanNo.Van.Warehouse
                                                        ),
                                                        'Invoice Date': Today(),
                                                        'Order Type': 'Order Type (Choice)'.'Sales Order',
                                                        'Order Number': LookUp(
                                                            'Order Headers',
                                                            'Order Number' = CreateOrderRecorddata.'Order Number'
                                                        ),
                                                        'Total Amount': (Sum(
                                                            colChildInvoiceLine,
                                                            discountedPrice
                                                        ) ),
                                                        'Total Tax Amount': (Sum(
                                                            colChildInvoiceLine,
                                                            taxAmount
                                                        ) ),
                                                        'Total Discount Amount': Sum(
                                                            colChildInvoiceLine,
                                                            discount
                                                        ),
                                                        'Cess Value':Sum(colChildInvoiceLine,cessValue),
                                                'CGST Value':Sum(colChildInvoiceLine, cgstValue),
                                                'SGST Value':Sum(colChildInvoiceLine, sgstValue),
                                                'Taxable Value':Sum(colChildInvoiceLine, discountedPrice),
                                                        'Net Amount': (Sum(
                                                            colChildInvoiceLine,
                                                            netAmount
                                                        ) ),
                                                        'Net Amount (Without E Jar)':Sum(
                                                    colChildInvoiceLine,
                                                    netAmountWithoutEJar
                                                ),
                                                        'Mode of Payment': 'Payment Type (choice)'.CREDIT
                                                //'IRN Number':,
                                                //'IRN Status':,
                                                //'IRN Message':,
                                                //'Signed QR Code':,
                                                //'Synced Date':,
                                                    }
                                                )
                                            )
                                        );
                                        Patch(
                                            'Invoice Series',
                                            LookUp(
                                                'Invoice Series',
                                                'Route No'.Area = Areavalueid.Area
                                            ),
                                            {
                                                'Sequence No': LookUp(
                                                    'Invoice Series',
                                                    'Route No'.Area = Areavalueid.Area
                                                ).'Sequence No' + 1
                                            }
                                        );
                                        Set(
                                            CreateInvHeaderdata,
                                            First(CreateInvHeader)
                                        );
                                        
                        //////////////Patch Invoice Line ///////////////////
                        ClearCollect(
                                            CreateInvLine,
                                            ForAll(
                                                Filter(
                                                    colCartItems,
                                                    schemeOrder = false
                                                ) As OrdrItems,
                                                If(
                                                    IsBlank(
                                                        LookUp(
                                                            'Invoice Lines',
                                                            'Invoice Number'.'Invoice Number' = CreateInvHeaderdata.'Invoice Number' && 'Item SKU'.'SKU Master' = OrdrItems.productId && 'Item Type' = 'Item Type (Choice)'.Paid && 'Invoice Type'= 'Invoice Type (Choice)'.'Parent'
                                                        )
                                                    ),
                                                    Patch(
                                                        'Invoice Lines',
                                                        Defaults('Invoice Lines'),
                                                        {
                                                            CGST:Value(OrdrItems.cgst), 
                                                     'SGST/UGST':Value(OrdrItems.sgst), 
                                                   
                                                    CESS:Value(OrdrItems.cess), 
                                                            'Invoice Number': LookUp(
                                                                'Invoice Headers',
                                                                'Invoice Header' = CreateInvHeaderdata.'Invoice Header'
                                                            ),
                                                            'Order Number': LookUp(
                                                                'Order Headers',
                                                                'Order Number' = CreateOrderRecorddata.'Order Number'
                                                            ),
                                                            'Item Type': If(
                                                                OrdrItems.schemeOrder = true,
                                                                'Item Type (Choice)'.Free,
                                                                'Item Type (Choice)'.Paid
                                                            ),
                                                            'Item SKU': LookUp(
                                                                'SKU Masters',
                                                                'SKU Master' = OrdrItems.productId
                                                            ),
                                                            'Cases Unit Price': OrdrItems.caseUnitPrice,
                                                            'Pcs Unit Price': OrdrItems.pcsUnitPrice,
                                                            'Total Quantity': OrdrItems.qtyCases + OrdrItems.qtyPcs,
                                                            Cases: OrdrItems.qtyCases,
                                                            PCs: OrdrItems.qtyPcs,
                                                            'Total Discount Amount': Value(OrdrItems.discount),
                                                            'Tax Amount': OrdrItems.taxAmount,
                                                            'Cess Value': OrdrItems.cessValue,
                                                    'CGST Value': OrdrItems.cgstValue,
                                                    'SGST Value': OrdrItems.sgstValue,
                                                    'Taxable Value':OrdrItems.discountedPrice,
                                                            Rate: OrdrItems.netAmount,
                                                            'Net Amount (Without E Jar)':OrdrItems.netAmountWithoutEJar,
                                                            Customer: LookUp(
                                                                Customers_1,
                                                                Account = OrderData.Account
                                                            ),
                                                            'Route No': LookUp(
                                                                Areas,
                                                                Area = varUserArea.Area.Area
                                                            ),
                                                            Salesperson: LookUp(
                                                                Users,
                                                                'Primary Email' = User().Email
                                                            ),
                                                            'Van No': LookUp(
                                                                Warehouses,
                                                                Warehouse = varUserVanNo.Van.Warehouse
                                                            ),
                                                            'Batch No': LookUp(
                                                                'Stock Transfer Lines',
                                                                SKU.'SKU Master' = OrdrItems.productId
                                                            ).'Batch no.',
                                                            'Lot No': LookUp(
                                                                'Stock Transfer Lines',
                                                                SKU.'SKU Master' = OrdrItems.productId
                                                            ).'Lot no.',
                                                            'Manufacturing Date': LookUp(
                                                                'Stock Transfer Lines',
                                                                SKU.'SKU Master' = OrdrItems.productId
                                                            ).'Manufacturing date',
                                                            'Empty Jar': OrdrItems.emptyJar
                                                        }
                                                    ),
                                                    Patch(
                                                        'Invoice Lines',
                                                        LookUp(
                                                            'Invoice Lines',
                                                            'Invoice Number'.'Invoice Number' = CreateInvHeaderdata.'Invoice Number' && 'Item SKU'.'SKU Master' = OrdrItems.productId && 'Item Type' = 'Item Type (Choice)'.Paid && 'Invoice Type'= 'Invoice Type (Choice)'.'Parent'
                                                        ),
                                                        {
                                                             CGST:Value(OrdrItems.cgst), 
                                                     'SGST/UGST':Value(OrdrItems.sgst), 
                                                   
                                                    CESS:Value(OrdrItems.cess), 
                                                            'Invoice Number': LookUp(
                                                                'Invoice Headers',
                                                                'Invoice Header' = CreateInvHeaderdata.'Invoice Header'
                                                            ),
                                                            'Order Number': LookUp(
                                                                'Order Headers',
                                                                'Order Number' = CreateOrderRecorddata.'Order Number'
                                                            ),
                                                            'Item Type': If(
                                                                OrdrItems.schemeOrder = true,
                                                                'Item Type (Choice)'.Free,
                                                                'Item Type (Choice)'.Paid
                                                            ),
                                                            'Item SKU': LookUp(
                                                                'SKU Masters',
                                                                'SKU Master' = OrdrItems.productId
                                                            ),
                                                            'Cases Unit Price': OrdrItems.caseUnitPrice,
                                                            'Pcs Unit Price': OrdrItems.pcsUnitPrice,
                                                            'Total Quantity': OrdrItems.qtyCases + OrdrItems.qtyPcs,
                                                            Cases: OrdrItems.qtyCases,
                                                            PCs: OrdrItems.qtyPcs,
                                                            'Total Discount Amount': Value(OrdrItems.discount),
                                                            'Tax Amount': OrdrItems.taxAmount,
                                                            'Cess Value': OrdrItems.cessValue,
                                                    'CGST Value': OrdrItems.cgstValue,
                                                    'SGST Value': OrdrItems.sgstValue,
                                                    'Taxable Value':OrdrItems.discountedPrice,
                                                            Rate: OrdrItems.netAmount,
                                                            'Net Amount (Without E Jar)':OrdrItems.netAmountWithoutEJar,
                                                            Customer: LookUp(
                                                                Customers_1,
                                                                Account = OrderData.Account
                                                            ),
                                                            'Route No': LookUp(
                                                                Areas,
                                                                Area = varUserArea.Area.Area
                                                            ),
                                                            Salesperson: LookUp(
                                                                Users,
                                                                'Primary Email' = User().Email
                                                            ),
                                                            'Van No': LookUp(
                                                                Warehouses,
                                                                Warehouse = varUserVanNo.Van.Warehouse
                                                            ),
                                                            'Batch No': LookUp(
                                                                'Stock Transfer Lines',
                                                                SKU.'SKU Master' = OrdrItems.productId
                                                            ).'Batch no.',
                                                            'Lot No': LookUp(
                                                                'Stock Transfer Lines',
                                                                SKU.'SKU Master' = OrdrItems.productId
                                                            ).'Lot no.',
                                                            'Manufacturing Date': LookUp(
                                                                'Stock Transfer Lines',
                                                                SKU.'SKU Master' = OrdrItems.productId
                                                            ).'Manufacturing date',
                                                            'Empty Jar': OrdrItems.emptyJar
                                                          
                                                        }
                                                    )
                                                )
                                            )
                                        );
                                        ClearCollect(
                                            CreateChildInvLine,
                                            ForAll(
                                                Filter(
                                                    colChildInvoiceLine,
                                                    schemeOrder = false && childInvoice=true
                                                ) As ChildOrdrItems,
                                                /*If(
                                                    IsBlank(
                                                        LookUp(
                                                            'Invoice Lines',
                                                            'Invoice Number'.'Invoice Number' = CreateInvHeaderdata.'Invoice Number' && 'Item SKU'.'SKU Master' = ChildOrdrItems.productId && 'Item Type' = 'Item Type (Choice)'.Paid && 'Invoice Type'= 'Invoice Type (Choice)'.Child
                                                        )
                                                    ),*/
                                                    Patch(
                                                        'Invoice Lines',
                                                        Defaults('Invoice Lines'),
                                                        {
                                                            'Invoice Number': LookUp(
                                                                'Invoice Headers',
                                                                'Invoice Header' = CreateInvHeaderdata.'Invoice Header'
                                                            ),
                                                            'Order Number': LookUp(
                                                                'Order Headers',
                                                                'Order Number' = CreateOrderRecorddata.'Order Number'
                                                            ),
                                                            'Item Type': If(
                                                                ChildOrdrItems.schemeOrder = true,
                                                                'Item Type (Choice)'.Free,
                                                                'Item Type (Choice)'.Paid
                                                            ),
                                                            'Item SKU': LookUp(
                                                                'SKU Masters',
                                                                'SKU Master' = ChildOrdrItems.productId
                                                            ),
                                                            'Cases Unit Price': ChildOrdrItems.caseUnitPrice,
                                                            'Pcs Unit Price': ChildOrdrItems.pcsUnitPrice,
                                                            'Total Quantity': ChildOrdrItems.qtyCases + ChildOrdrItems.qtyPcs,
                                                            Cases: ChildOrdrItems.qtyCases,
                                                            PCs: ChildOrdrItems.qtyPcs,
                                                            'Total Discount Amount': Value(ChildOrdrItems.discount),
                                                            'Tax Amount': ChildOrdrItems.taxAmount,
                                                            'Cess Value': ChildOrdrItems.cessValue,
                                                            'CGST Value': ChildOrdrItems.cgstValue,
                                                            'SGST Value': ChildOrdrItems.sgstValue,
                                                            'Taxable Value': ChildOrdrItems.discountedPrice,
                                                            Rate: ChildOrdrItems.netAmount,
                                                            'Net Amount (Without E Jar)': ChildOrdrItems.netAmountWithoutEJar,
                                                            Customer: LookUp(
                                                                Customers_1,
                                                                Account = OrderData.Account
                                                            ),
                                                            'Route No': LookUp(
                                                                Areas,
                                                                Area = varUserArea.Area.Area
                                                            ),
                                                            Salesperson: LookUp(
                                                                Users,
                                                                'Primary Email' = User().Email
                                                            ),
                                                            'Van No': LookUp(
                                                                Warehouses,
                                                                Warehouse = varUserVanNo.Van.Warehouse
                                                            ),
                                                            'Batch No': LookUp(
                                                                'Stock Transfer Lines',
                                                                SKU.'SKU Master' = ChildOrdrItems.productId
                                                            ).'Batch no.',
                                                            'Lot No': LookUp(
                                                                'Stock Transfer Lines',
                                                                SKU.'SKU Master' = ChildOrdrItems.productId
                                                            ).'Lot no.',
                                                            'Manufacturing Date': LookUp(
                                                                'Stock Transfer Lines',
                                                                SKU.'SKU Master' = ChildOrdrItems.productId
                                                            ).'Manufacturing date',
                                                            'Empty Jar': ChildOrdrItems.emptyJar,
                                                            'Invoice Type': 'Invoice Type (Choice)'.Child
                                                        }
                                                    )/*,
                                                    Patch(
                                                        'Invoice Lines',
                                                        LookUp(
                                                            'Invoice Lines',
                                                            'Invoice Number'.'Invoice Number' = CreateInvHeaderdata.'Invoice Number' && 'Item SKU'.'SKU Master' = ChildOrdrItems.productId && 'Item Type' = 'Item Type (Choice)'.Paid && 'Invoice Type'= 'Invoice Type (Choice)'.Child
                                                        ),
                                                        {
                                                            'Invoice Number': LookUp(
                                                                'Invoice Headers',
                                                                'Invoice Header' = CreateInvHeaderdata.'Invoice Header'
                                                            ),
                                                            'Order Number': LookUp(
                                                                'Order Headers',
                                                                'Order Number' = CreateOrderRecorddata.'Order Number'
                                                            ),
                                                            'Item Type': If(
                                                                ChildOrdrItems.schemeOrder = true,
                                                                'Item Type (Choice)'.Free,
                                                                'Item Type (Choice)'.Paid
                                                            ),
                                                            'Item SKU': LookUp(
                                                                'SKU Masters',
                                                                'SKU Master' = ChildOrdrItems.productId
                                                            ),
                                                            'Cases Unit Price': ChildOrdrItems.caseUnitPrice,
                                                            'Pcs Unit Price': ChildOrdrItems.pcsUnitPrice,
                                                            'Total Quantity': ChildOrdrItems.qtyCases + ChildOrdrItems.qtyPcs,
                                                            Cases: ChildOrdrItems.qtyCases,
                                                            PCs: ChildOrdrItems.qtyPcs,
                                                            'Total Discount Amount': Value(ChildOrdrItems.discount),
                                                            'Tax Amount': ChildOrdrItems.taxAmount,
                                                            'Cess Value': ChildOrdrItems.cessValue,
                                                            'CGST Value': ChildOrdrItems.cgstValue,
                                                            'SGST Value': ChildOrdrItems.sgstValue,
                                                            'Taxable Value': ChildOrdrItems.discountedPrice,
                                                            Rate: ChildOrdrItems.netAmount,
                                                            'Net Amount (Without E Jar)': ChildOrdrItems.netAmountWithoutEJar,
                                                            Customer: LookUp(
                                                                Customers_1,
                                                                Account = OrderData.Account
                                                            ),
                                                            'Route No': LookUp(
                                                                Areas,
                                                                Area = varUserArea.Area.Area
                                                            ),
                                                            Salesperson: LookUp(
                                                                Users,
                                                                'Primary Email' = User().Email
                                                            ),
                                                            'Van No': LookUp(
                                                                Warehouses,
                                                                Warehouse = varUserVanNo.Van.Warehouse
                                                            ),
                                                            'Batch No': LookUp(
                                                                'Stock Transfer Lines',
                                                                SKU.'SKU Master' = ChildOrdrItems.productId
                                                            ).'Batch no.',
                                                            'Lot No': LookUp(
                                                                'Stock Transfer Lines',
                                                                SKU.'SKU Master' = ChildOrdrItems.productId
                                                            ).'Lot no.',
                                                            'Manufacturing Date': LookUp(
                                                                'Stock Transfer Lines',
                                                                SKU.'SKU Master' = ChildOrdrItems.productId
                                                            ).'Manufacturing date',
                                                            'Empty Jar': ChildOrdrItems.emptyJar,
                                                            'Invoice Type': 'Invoice Type (Choice)'.Child
                                                        }
                                                    )
                                                )*/
                                            )
                                        );
                                        
                        ////////////////////////_______________Scheme Invoice Line
                        ClearCollect(
                                            CreateInvLine,
                                            ForAll(
                                                Filter(
                                                    colCartItems,
                                                    schemeOrder = true
                                                ) As OrdrItems,
                                                If(
                                                    IsBlank(
                                                        LookUp(
                                                            'Invoice Lines',
                                                            'Invoice Number'.'Invoice Number' = CreateInvHeaderdata.'Invoice Number' && 'Item SKU'.'SKU Master' = OrdrItems.productId && 'Item Type' = 'Item Type (Choice)'.Free && 'Scheme Parent Item Code'.'SKU Master' = OrdrItems.SchemeOrderProductReference && 'Invoice Type'= 'Invoice Type (Choice)'.'Parent'
                                                        )
                                                    ),
                                                    Patch(
                                                        'Invoice Lines',
                                                        Defaults('Invoice Lines'),
                                                        {
                                                            CGST:Value(OrdrItems.cgst), 
                                                     'SGST/UGST':Value(OrdrItems.sgst), 
                                                   
                                                    CESS:Value(OrdrItems.cess), 
                                                            'Invoice Number': LookUp(
                                                                'Invoice Headers',
                                                                'Invoice Header' = CreateInvHeaderdata.'Invoice Header'
                                                            ),
                                                            'Order Number': LookUp(
                                                                'Order Headers',
                                                                'Order Number' = CreateOrderRecorddata.'Order Number'
                                                            ),
                                                            'Item Type': If(
                                                                OrdrItems.schemeOrder = true,
                                                                'Item Type (Choice)'.Free,
                                                                'Item Type (Choice)'.Paid
                                                            ),
                                                            'Item SKU': LookUp(
                                                                'SKU Masters',
                                                                'SKU Master' = OrdrItems.productId
                                                            ),
                                                            'Cases Unit Price': OrdrItems.caseUnitPrice,
                                                            'Pcs Unit Price': OrdrItems.pcsUnitPrice,
                                                            'Total Quantity': OrdrItems.qtyCases + OrdrItems.qtyPcs,
                                                            Cases: OrdrItems.qtyCases,
                                                            PCs: OrdrItems.qtyPcs,
                                                            'Total Discount Amount': Value(OrdrItems.discount),
                                                            'Tax Amount': OrdrItems.taxAmount,
                                                            'Cess Value': OrdrItems.cessValue,
                                                    'CGST Value': OrdrItems.cgstValue,
                                                    'SGST Value': OrdrItems.sgstValue,
                                                    'Taxable Value':OrdrItems.discountedPrice,
                                                            Rate: OrdrItems.netAmount,
                                                            'Net Amount (Without E Jar)':OrdrItems.netAmountWithoutEJar,
                                                            Customer: LookUp(
                                                                Customers_1,
                                                                Account = OrderData.Account
                                                            ),
                                                            'Route No': LookUp(
                                                                Areas,
                                                                Area = varUserArea.Area.Area
                                                            ),
                                                            Salesperson: LookUp(
                                                                Users,
                                                                'Primary Email' = User().Email
                                                            ),
                                                            'Van No': LookUp(
                                                                Warehouses,
                                                                Warehouse = varUserVanNo.Van.Warehouse
                                                            ),
                                                            'Batch No': LookUp(
                                                                'Stock Transfer Lines',
                                                                SKU.'SKU Master' = OrdrItems.productId
                                                            ).'Batch no.',
                                                            'Lot No': LookUp(
                                                                'Stock Transfer Lines',
                                                                SKU.'SKU Master' = OrdrItems.productId
                                                            ).'Lot no.',
                                                            'Manufacturing Date': LookUp(
                                                                'Stock Transfer Lines',
                                                                SKU.'SKU Master' = OrdrItems.productId
                                                            ).'Manufacturing date',
                                                            'Empty Jar': OrdrItems.emptyJar,
                                                            'Scheme Parent Item Code': LookUp(
                                                                'SKU Masters',
                                                                'SKU Master' = OrdrItems.SchemeOrderProductReference
                                                            ),
                                                            'Scheme Order Item': LookUp(
                                                                'Scheme Orders',
                                                                'Scheme Order' = OrdrItems.SchemeOrderLine.'Scheme Order'
                                                            ),
                                                            'Scheme Offer Item': LookUp(
                                                                'Scheme Offers',
                                                                'Scheme Offers' = OrdrItems.schemeOrderValue.'Scheme Offers'
                                                            )
                                                        }
                                                    ),
                                                    Patch(
                                                        'Invoice Lines',
                                                        LookUp(
                                                            'Invoice Lines',
                                                            'Invoice Number'.'Invoice Number' = CreateInvHeaderdata.'Invoice Number' && 'Item SKU'.'SKU Master' = OrdrItems.productId && 'Item Type' = 'Item Type (Choice)'.Free && 'Scheme Parent Item Code'.'SKU Master' = OrdrItems.SchemeOrderProductReference && 'Invoice Type'= 'Invoice Type (Choice)'.'Parent'
                                                        ),
                                                        {
                                                            CGST:Value(OrdrItems.cgst), 
                                                     'SGST/UGST':Value(OrdrItems.sgst), 
                                                   
                                                    CESS:Value(OrdrItems.cess), 
                                                            'Invoice Number': LookUp(
                                                                'Invoice Headers',
                                                                'Invoice Header' = CreateInvHeaderdata.'Invoice Header'
                                                            ),
                                                            'Order Number': LookUp(
                                                                'Order Headers',
                                                                'Order Number' = CreateOrderRecorddata.'Order Number'
                                                            ),
                                                            'Item Type': If(
                                                                OrdrItems.schemeOrder = true,
                                                                'Item Type (Choice)'.Free,
                                                                'Item Type (Choice)'.Paid
                                                            ),
                                                            'Item SKU': LookUp(
                                                                'SKU Masters',
                                                                'SKU Master' = OrdrItems.productId
                                                            ),
                                                            'Cases Unit Price': OrdrItems.caseUnitPrice,
                                                            'Pcs Unit Price': OrdrItems.pcsUnitPrice,
                                                            'Total Quantity': OrdrItems.qtyCases + OrdrItems.qtyPcs,
                                                            Cases: OrdrItems.qtyCases,
                                                            PCs: OrdrItems.qtyPcs,
                                                            'Total Discount Amount': Value(OrdrItems.discount),
                                                            'Tax Amount': OrdrItems.taxAmount,
                                                            'Cess Value': OrdrItems.cessValue,
                                                    'CGST Value': OrdrItems.cgstValue,
                                                    'SGST Value': OrdrItems.sgstValue,
                                                    'Taxable Value':OrdrItems.discountedPrice,
                                                            Rate: OrdrItems.netAmount,
                                                            'Net Amount (Without E Jar)':OrdrItems.netAmountWithoutEJar,
                                                            Customer: LookUp(
                                                                Customers_1,
                                                                Account = OrderData.Account
                                                            ),
                                                            'Route No': Areavalueid,
                                                            Salesperson: LookUp(
                                                                Users,
                                                                'Primary Email' = User().Email
                                                            ),
                                                            'Van No': LookUp(
                                                                Warehouses,
                                                                Warehouse = varUserVanNo.Van.Warehouse
                                                            ),
                                                            'Batch No': LookUp(
                                                                'Stock Transfer Lines',
                                                                SKU.'SKU Master' = OrdrItems.productId
                                                            ).'Batch no.',
                                                            'Lot No': LookUp(
                                                                'Stock Transfer Lines',
                                                                SKU.'SKU Master' = OrdrItems.productId
                                                            ).'Lot no.',
                                                            'Manufacturing Date': LookUp(
                                                                'Stock Transfer Lines',
                                                                SKU.'SKU Master' = OrdrItems.productId
                                                            ).'Manufacturing date',
                                                            'Empty Jar': OrdrItems.emptyJar,
                                                            'Scheme Parent Item Code': LookUp(
                                                                'SKU Masters',
                                                                'SKU Master' = OrdrItems.SchemeOrderProductReference
                                                            ),
                                                            'Scheme Order Item': LookUp(
                                                                'Scheme Orders',
                                                                'Scheme Order' = OrdrItems.SchemeOrderLine.'Scheme Order'
                                                            ),
                                                            'Scheme Offer Item': LookUp(
                                                                'Scheme Offers',
                                                                'Scheme Offers' = OrdrItems.schemeOrderValue.'Scheme Offers'
                                                            )
                                                        }
                                                    )
                                                )
                                            )
                                        );
                                        ClearCollect(
                                            CreateChildInvLine,
                                            ForAll(
                                                Filter(
                                                    colChildInvoiceLine,
                                                    schemeOrder = true && childInvoice = true
                                                ) As ChildOrdrItems,
                                                /*If(
                                                    IsBlank(
                                                        LookUp(
                                                            'Invoice Lines',
                                                            'Invoice Number'.'Invoice Number' = CreateInvHeaderdata.'Invoice Number' && 'Item SKU'.'SKU Master' = ChildOrdrItems.productId && 'Item Type' = 'Item Type (Choice)'.Free && 'Scheme Parent Item Code'.'SKU Master' = ChildOrdrItems.SchemeOrderProductReference && 'Invoice Type'= 'Invoice Type (Choice)'.Child
                                                        )
                                                    ),*/
                                                    Patch(
                                                        'Invoice Lines',
                                                        Defaults('Invoice Lines'),
                                                        {
                                                            'Invoice Number': LookUp(
                                                                'Invoice Headers',
                                                                'Invoice Header' = CreateInvHeaderdata.'Invoice Header'
                                                            ),
                                                            'Order Number': LookUp(
                                                                'Order Headers',
                                                                'Order Number' = CreateOrderRecorddata.'Order Number'
                                                            ),
                                                            'Item Type': If(
                                                                ChildOrdrItems.schemeOrder = true,
                                                                'Item Type (Choice)'.Free,
                                                                'Item Type (Choice)'.Paid
                                                            ),
                                                            'Item SKU': LookUp(
                                                                'SKU Masters',
                                                                'SKU Master' = ChildOrdrItems.productId
                                                            ),
                                                            'Cases Unit Price': ChildOrdrItems.caseUnitPrice,
                                                            'Pcs Unit Price': ChildOrdrItems.pcsUnitPrice,
                                                            'Total Quantity': ChildOrdrItems.qtyCases + ChildOrdrItems.qtyPcs,
                                                            Cases: ChildOrdrItems.qtyCases,
                                                            PCs: ChildOrdrItems.qtyPcs,
                                                            'Total Discount Amount': Value(ChildOrdrItems.discount),
                                                            'Tax Amount': ChildOrdrItems.taxAmount,
                                                            'Cess Value': ChildOrdrItems.cessValue,
                                                            'CGST Value': ChildOrdrItems.cgstValue,
                                                            'SGST Value': ChildOrdrItems.sgstValue,
                                                            'Taxable Value': ChildOrdrItems.discountedPrice,
                                                            Rate: ChildOrdrItems.netAmount,
                                                            'Net Amount (Without E Jar)': ChildOrdrItems.netAmountWithoutEJar,
                                                            Customer: LookUp(
                                                                Customers_1,
                                                                Account = OrderData.Account
                                                            ),
                                                            'Route No': LookUp(
                                                                Areas,
                                                                Area = varUserArea.Area.Area
                                                            ),
                                                            Salesperson: LookUp(
                                                                Users,
                                                                'Primary Email' = User().Email
                                                            ),
                                                            'Van No': LookUp(
                                                                Warehouses,
                                                                Warehouse = varUserVanNo.Van.Warehouse
                                                            ),
                                                            'Batch No': LookUp(
                                                                'Stock Transfer Lines',
                                                                SKU.'SKU Master' = ChildOrdrItems.productId
                                                            ).'Batch no.',
                                                            'Lot No': LookUp(
                                                                'Stock Transfer Lines',
                                                                SKU.'SKU Master' = ChildOrdrItems.productId
                                                            ).'Lot no.',
                                                            'Manufacturing Date': LookUp(
                                                                'Stock Transfer Lines',
                                                                SKU.'SKU Master' = ChildOrdrItems.productId
                                                            ).'Manufacturing date',
                                                            'Empty Jar': ChildOrdrItems.emptyJar,
                                                            'Scheme Parent Item Code': LookUp(
                                                                'SKU Masters',
                                                                'SKU Master' = ChildOrdrItems.SchemeOrderProductReference
                                                            ),
                                                            'Scheme Order Item': LookUp(
                                                                'Scheme Orders',
                                                                'Scheme Order' = ChildOrdrItems.SchemeOrderLine.'Scheme Order'
                                                            ),
                                                            'Scheme Offer Item': LookUp(
                                                                'Scheme Offers',
                                                                'Scheme Offers' = ChildOrdrItems.schemeOrderValue.'Scheme Offers'
                                                            ),
                                                            'Invoice Type': 'Invoice Type (Choice)'.Child
                                                        }
                                                    )/*,
                                                    Patch(
                                                        'Invoice Lines',
                                                        LookUp(
                                                            'Invoice Lines',
                                                            'Invoice Number'.'Invoice Number' = CreateInvHeaderdata.'Invoice Number' && 'Item SKU'.'SKU Master' = ChildOrdrItems.productId && 'Item Type' = 'Item Type (Choice)'.Free && 'Scheme Parent Item Code'.'SKU Master' = ChildOrdrItems.SchemeOrderProductReference && 'Invoice Type'= 'Invoice Type (Choice)'.Child
                                                        ),
                                                        {
                                                            'Invoice Number': LookUp(
                                                                'Invoice Headers',
                                                                'Invoice Header' = CreateInvHeaderdata.'Invoice Header'
                                                            ),
                                                            'Order Number': LookUp(
                                                                'Order Headers',
                                                                'Order Number' = CreateOrderRecorddata.'Order Number'
                                                            ),
                                                            'Item Type': If(
                                                                ChildOrdrItems.schemeOrder = true,
                                                                'Item Type (Choice)'.Free,
                                                                'Item Type (Choice)'.Paid
                                                            ),
                                                            'Item SKU': LookUp(
                                                                'SKU Masters',
                                                                'SKU Master' = ChildOrdrItems.productId
                                                            ),
                                                            'Cases Unit Price': ChildOrdrItems.caseUnitPrice,
                                                            'Pcs Unit Price': ChildOrdrItems.pcsUnitPrice,
                                                            'Total Quantity': ChildOrdrItems.qtyCases + ChildOrdrItems.qtyPcs,
                                                            Cases: ChildOrdrItems.qtyCases,
                                                            PCs: ChildOrdrItems.qtyPcs,
                                                            'Total Discount Amount': Value(ChildOrdrItems.discount),
                                                            'Tax Amount': ChildOrdrItems.taxAmount,
                                                            'Cess Value': ChildOrdrItems.cessValue,
                                                            'CGST Value': ChildOrdrItems.cgstValue,
                                                            'SGST Value': ChildOrdrItems.sgstValue,
                                                            'Taxable Value': ChildOrdrItems.discountedPrice,
                                                            Rate: ChildOrdrItems.netAmount,
                                                            'Net Amount (Without E Jar)': ChildOrdrItems.netAmountWithoutEJar,
                                                            Customer: LookUp(
                                                                Customers_1,
                                                                Account = OrderData.Account
                                                            ),
                                                            'Route No': Areavalueid,
                                                            Salesperson: LookUp(
                                                                Users,
                                                                'Primary Email' = User().Email
                                                            ),
                                                            'Van No': LookUp(
                                                                Warehouses,
                                                                Warehouse = varUserVanNo.Van.Warehouse
                                                            ),
                                                            'Batch No': LookUp(
                                                                'Stock Transfer Lines',
                                                                SKU.'SKU Master' = ChildOrdrItems.productId
                                                            ).'Batch no.',
                                                            'Lot No': LookUp(
                                                                'Stock Transfer Lines',
                                                                SKU.'SKU Master' = ChildOrdrItems.productId
                                                            ).'Lot no.',
                                                            'Manufacturing Date': LookUp(
                                                                'Stock Transfer Lines',
                                                                SKU.'SKU Master' = ChildOrdrItems.productId
                                                            ).'Manufacturing date',
                                                            'Empty Jar': ChildOrdrItems.emptyJar,
                                                            'Scheme Parent Item Code': LookUp(
                                                                'SKU Masters',
                                                                'SKU Master' = ChildOrdrItems.SchemeOrderProductReference
                                                            ),
                                                            'Scheme Order Item': LookUp(
                                                                'Scheme Orders',
                                                                'Scheme Order' = ChildOrdrItems.SchemeOrderLine.'Scheme Order'
                                                            ),
                                                            'Scheme Offer Item': LookUp(
                                                                'Scheme Offers',
                                                                'Scheme Offers' = ChildOrdrItems.schemeOrderValue.'Scheme Offers'
                                                            ),
                                                            'Invoice Type': 'Invoice Type (Choice)'.Child
                                                        }
                                                    )
                                                )*/
                                            )
                                        );
                                        /*Launch(
                                            Invoice.Run(
                                                LookUp(
                                                    'Invoice Headers',
                                                    'Invoice Header' = CreateInvHeaderdata.'Invoice Header'
                                                ).'Invoice Header'
                                            ).bisleriinvoice
                                        );*/
                                    );
                                    
                        //Stock substraction from location ____________________________________________________________________________________
                        /*ForAll(
                                        colCartItems As oneLine,
                                        Patch(
                                            'Current Stocks',
                                            LookUp(
                                                'Current Stocks',
                                                'Item SKU'.'SKU Master' = oneLine.productId && 'Van No'.Warehouse = varUserVanNo.Van.Warehouse && IsToday('Created On')
                                            ),
                                            {
                                                Cases: Sum(
                                                    Filter(
                                                        'Stock Transfer Lines',
                                                        'Transfer Order No'.'Stock Transfer Header' exactin varGatePassHeader.headerGUID && SKU.'SKU Master' = oneLine.productId && IsToday('Created On')
                                                    ),
                                                    'Remaining Qty Cases'
                                                ),
                                                PCs: Sum(
                                                    Filter(
                                                        'Stock Transfer Lines',
                                                        'Transfer Order No'.'Stock Transfer Header' exactin varGatePassHeader.headerGUID && SKU.'SKU Master' = oneLine.productId && IsToday('Created On')
                                                    ),
                                                    'Remaining Qty Pcs'
                                                )
                                            }
                                        )
                                    );
                                    Refresh('Current Stocks');  */
                        ///////////////////////////////////////////////////////////////////////////Credit Updation in customer
                        /*Patch(
                                        Customers_1,
                                        LookUp(
                                            Customers_1,
                                            Account = OrderData.Account
                                        ),
                                        {
                                            'Remaining Credit Limit': LookUp(
                                                Customers_1,
                                                Account = OrderData.Account
                                            ).'Remaining Credit Limit' - ((Sum(
                                                col,
                                                cartItem.discountedPrice
                                            ) * ((Sum(
                                                col,
                                                cartItem.tax
                                            )) * 0.01)) + Sum(
                                                col,
                                                cartItem.discountedPrice
                                            ) + Sum(
                                                col,
                                                cartItem.emptyJarValue
                                            ))
                                        }
                                    );*/
                                  /*  Set(
                                        VarPaymentConfirm,
                                        true
                                    );*/
                                )
                            )
                        );
                        Set(
                            invheads,
                            CreateInvHeaderdata.'Invoice Header'
                        );
                        /*Set(
                            varOrdered,
                            true
                        )*/
                    PaddingBottom: =
                    Size: =_VarGblAppFonts.Size.UpperMedium
                    Text: ="Confirm"
                    Width: =150
                    X: =143
                    Y: =238
                    ZIndex: =12

                Group4 As group:
                    Height: =5
                    Width: =5
                    X: =60
                    Y: =60
                    ZIndex: =13

                    Button4_2 As button:
                        DisplayMode: =DisplayMode.Disabled
                        Height: =188
                        Size: =24
                        Text: =""
                        Width: =540
                        X: =40
                        Y: =14
                        ZIndex: =1

                    Label5_12 As label:
                        Color: =_VarGblAppColors.BisleriBlue
                        FontWeight: =FontWeight.Semibold
                        Height: =45
                        Size: =_VarGblAppFonts.Size.Medium
                        Text: ="Total Qty"
                        Width: =192
                        X: =137
                        Y: =18
                        ZIndex: =2

                    Label5_14 As label:
                        Color: =_VarGblAppColors.BisleriBlue
                        FontWeight: =FontWeight.Semibold
                        Height: =45
                        Size: =_VarGblAppFonts.Size.Medium
                        Text: ="Total Inv Amt"
                        Width: =192
                        X: =137
                        Y: =Label5_12.Y +  Label5_12.Height
                        ZIndex: =3

                    Label5_22 As label:
                        Color: =_VarGblAppColors.BisleriBlue
                        FontWeight: =FontWeight.Semibold
                        Height: =45
                        Size: =_VarGblAppFonts.Size.Medium
                        Text: ="Total Tax"
                        Width: =192
                        X: =137
                        Y: =Label5_14.Y +  Label5_14.Height
                        ZIndex: =4

                    Label5_13 As label:
                        FontWeight: =FontWeight.Semibold
                        Height: =45
                        Size: =_VarGblAppFonts.Size.Medium
                        Text: |-
                            =((Sum(
                                colCartItems,
                                qtyCases
                            )) + (Sum(
                                colCartItems,
                                qtyPcs
                            )))
                        Width: =192
                        X: =344
                        Y: =21
                        ZIndex: =5

                    Label5_15 As label:
                        FontWeight: =FontWeight.Semibold
                        Height: =45
                        Size: =_VarGblAppFonts.Size.Medium
                        Text: |-
                            =/*Concatenate(
                                "â¹",
                                If(
                                    Text(
                                        ((Sum(
                                            colCartItems,
                                            discountedPrice
                                        ) * ((Sum(
                                            colCartItems,
                                            tax
                                        )) * 0.01)) + Sum(
                                            colCartItems,
                                            discountedPrice
                                        ) + Sum(
                                            colCartItems,
                                            emptyJarValue
                                        ))
                                    ) = "0",
                                    "0",
                                    Text(
                                        ((Sum(
                                            colCartItems,
                                            discountedPrice
                                        ) * ((Sum(
                                            colCartItems,
                                            tax
                                        )) * 0.01)) + Sum(
                                            colCartItems,
                                            discountedPrice
                                        ) + Sum(
                                            colCartItems,
                                            emptyJarValue
                                        )),
                                        "[$-hi-IN]##,##,##,###",
                                        "hi-IN"
                                    )
                                )
                            )*/
                            Concatenate(
                                "â¹",
                                If(
                                    Text(
                                        Sum(
                                            colCartItems,
                                            netAmount
                                        )
                                    ) = "0",
                                    "0",
                                    Text(
                                        Sum(
                                            colCartItems,
                                            netAmount
                                        ),
                                        "[$-hi-IN]##,##,##,###",
                                        "hi-IN"
                                    )
                                )
                            )
                        Width: =192
                        X: =344
                        Y: =Label5_14.Y
                        ZIndex: =6

                    Label5_23 As label:
                        FontWeight: =FontWeight.Semibold
                        Height: =45
                        Size: =_VarGblAppFonts.Size.Medium
                        Text: |-
                            =/*Concatenate(
                                "â¹",
                                 If(
                                    Text(
                                        (Sum(
                                        colCartItems,
                                        discountedPrice
                                    ) * ((Sum(
                                        colCartItems,
                                        tax
                                    )) * 0.01))
                                    ) = "0",
                                    "0",
                                Text(
                                    (Sum(
                                        colCartItems,
                                        discountedPrice
                                    ) * ((Sum(
                                        colCartItems,
                                        tax
                                    )) * 0.01)) ,
                                    "[$-hi-IN]##,##,##,###",
                                    "hi-IN"
                                ))
                            )*/
                            Concatenate(
                                "â¹",
                                If(
                                    Text(
                                        Sum(
                                            colCartItems,
                                            taxAmount
                                        )
                                    ) = "0",
                                    "0",
                                    Text(
                                        Sum(
                                            colCartItems,
                                            taxAmount
                                        ),
                                        "[$-hi-IN]##,##,##,###",
                                        "hi-IN"
                                    )
                                )
                            )
                        Width: =192
                        X: =344
                        Y: =Label5_22.Y
                        ZIndex: =7

                    Label5_24 As label:
                        Color: =_VarGblAppColors.BisleriBlue
                        FontWeight: =FontWeight.Semibold
                        Height: =45
                        Size: =_VarGblAppFonts.Size.Medium
                        Text: ="Discount"
                        Width: =192
                        X: =137
                        Y: =Label5_22.Y +  Label5_22.Height
                        ZIndex: =9

                    Label5_25 As label:
                        FontWeight: =FontWeight.Semibold
                        Height: =45
                        Size: =_VarGblAppFonts.Size.Medium
                        Text: |-
                            =Concatenate(
                                "â¹",
                                If(
                                    Text(
                                        Sum(
                                            colCartItems,
                                            discount
                                        )
                                    ) = "0",
                                    "0",
                                    Text(
                                        Sum(
                                            colCartItems,
                                            discount
                                        ),
                                        "[$-hi-IN]##,##,##,###",
                                        "hi-IN"
                                    )
                                )
                            )
                        Width: =192
                        X: =344
                        Y: =153
                        ZIndex: =10

            Container10 As groupContainer.manualLayoutContainer:
                Height: =0
                Width: =640
                Y: =1110
                ZIndex: =41

                HtmlText2 As htmlViewer:
                    AutoHeight: =true
                    Height: =1070
                    HtmlText: |-
                        ="
                        
                         <p ><center style=""font-size:27px""><b>Bisleri International Pvt.Ltd.</b></center> </p>
                        <p style=""font-size:27px"">Western Express Highway,Andheri<E>, Mumbai- 400099 Tel No. +(91)-22-61447000, Fax: +(91)-22-61447145</p>
                        
                        
                        <p style=""line-height:2px;""></p>
                        <p style=""line-height:5px;font-size:27px"">CIN:015540MH1984PC12572</p>
                        <p style=""line-height:2px;font-size:27px"">GSTIN:27AACCA4355K12L </p>
                        <p style=""line-height:2px;font-size:27px"">FSSAI Lic No:10013022001539 </p>
                        <p style=""line-height:2px;font-size:27px"">State Code:27, MAHARASHTRA </p>
                        <p></p>
                        <p><center style=""font-size:27px""><b>TAX INVOICE </b></center></p>
                        <p></p>
                        <p style=""line-height:2px;font-size:27px"">Invoice No.:" & First(Invoicedata).'Invoice Number' & " </p>
                        <p style=""line-height:2px;font-size:27px"">Invoice Date:" & Text(
                            First(Invoicedata).'Invoice Date',
                            DateTimeFormat.ShortDate
                        ) & " Route No.: " & First(Invoicedata).'Route No'.'Name (zx_name)' & "</p>
                        <p style=""line-height:2px;font-size:27px"">Customer Code:" & First(Invoicedata).Customer.'Customer Code' & " </p>
                        <p style=""line-height:2px;font-size:27px"">Name & Add of Customer:" & First(Invoicedata).Customer.'Customer Name' & "                                        </p>
                        <p style=""line-height:2px;font-size:27px"">State Code:" & First(Invoicedata).Customer.'Address 1: Street 1' & "                                </p>
                        <p style=""line-height:2px;font-size:27px"">GSTIN No.:" & First(Invoicedata).Customer.GSTIN & "                                                          </p>
                        <p style=""line-height:2px;font-size:27px"">Reverse Charge: No" & " </p>
                        <p style=""line-height:2px;font-size:27px"">IRN No.:" & First(Invoicedata).'IRN Number' & "  </p>
                        <p></p>
                        <font size=""4"" face=""Courier New"" >
                        <table  width='60%'>" & "<thead><tr><th>HSN No</th><th>Cases</th><th>Pcs</th><th>Rate</th><th>Amt</th></thead>" & "<tbody>" & Concat(
                            Invoicelinedata As item,
                            "<tr><td>" & item.'Item HSN Code' & "</td><td>" & item.Cases & "</td><td>" & item.PCs & "</td> <td>" & item.'Base Amount' & "</td><td>" & item.Rate & "</td> </tr>" & "<tr><td>" & item.'Item SKU'.'Item DescriptionÂ ' & "</td></tr><tr><td>Batch:" & item.'Batch No' & "</td><td>Mfg Dt." & Text(
                                item.'Manufacturing Date',
                                DateTimeFormat.ShortDate
                            ) & "</td></tr>"
                        ) & "</tbody></table>""
                        </font>
                        <p></p>
                        <p style=""line-height:2px;font-size:27px"">Total Price of Goods (INR) :" & First(Invoicedata).'Total Amount (Base)' & " </p>
                        <p style=""line-height:2px;font-size:27px"">CGST @9% </p>
                        <p style=""line-height:2px;font-size:27px"">SGST @9% </p>
                        <p style=""line-height:2px;font-size:27px"">Deposit (INR) </p>
                        <p style=""line-height:2px;font-size:27px"">Rounding Off </p>
                        <p></p>
                        <p style=""font-size:27px"">Total (INR)" & First(Invoicedata).'Net Amount' & " </p>
                        <p></p>
                        <p style=""line-height:2px;font-size:27px"">Invoice Amount (In Words):</p>
                        <p></p>
                        <p></p>
                        <p style=""font-size:27px"">Please make all Payment in following Bank Account: </p>
                        <p></p>
                        <p style=""line-height:2px;font-size:27px"">Bank Name: KOTAK MAHINDRA BANK </p>
                        <p style=""line-height:2px;font-size:27px"">Bank Account No.: 7311278470 </p>
                        <p style=""line-height:2px;font-size:27px"">IFS/NEFT: KKBK0000674 </p>
                        <p></p>
                        <p> </p>
                        <p></p>
                        <p>We reserve to ourselves the right to demand payments of this bill at any time before due date. A 11 disputes are subject to Mumbai Jurisdiction. The Company reserves its right to charge interest on overdue unpaid bill. Claim of any nature whatsoever will lapse unless raised in 3 days from the date of Invoice. Goods once sold cannot be returned and/or exchanged. No claim for shortage, damage, breakage etc will be entertained. </p>
                        <p></p>
                        <p>We hereby declare that statutory details in respect of customer mentioned in this invoice are as per information provided by the customer. The receiver of the invoice should confirm the statutory details mentioned on the Invoice. The customer may revert to the company if any variations are observed in the Invoice details within 7 days from the date of Invoice. No claims and alternation would be entertained thereafter. </p>
                        <p></p>
                        <p>Certified that the particular's given above are true and correct. </p>
                        <p></p>
                        <p>For BISLERI INTERNATIONAL PVT. LTD. </p>
                        
                        
                        
                        
                        
                        "
                    Width: =560
                    X: =40
                    Y: =40
                    ZIndex: =1

    ReturnPreview As fluidGrid.fluidGridWithBlankCard:
        BorderThickness: =0
        Height: =908
        Visible: |-
            =//varSelectedVisitActiveTab = 4
            false
        Width: =Parent.Width
        Y: =228
        ZIndex: =7

        DataCard1_13 As dataCard:
            BorderColor: =RGBA(0, 0, 0, 1)
            BorderStyle: =BorderStyle.Solid
            BorderThickness: =0
            DisplayMode: =DisplayMode.Edit
            Fill: =RGBA(0, 0, 0, 0)
            Height: =908
            Width: =Parent.Width
            X: =0
            Y: =0
            ZIndex: =1

            contNewReplacementUpperVertical_2 As groupContainer.verticalAutoLayoutContainer:
                Fill: =Color.Transparent
                Height: =500
                LayoutDirection: =LayoutDirection.Vertical
                LayoutMode: =LayoutMode.Auto
                Width: |-
                    =//Parent.Width
                    640
                Y: =68
                ZIndex: =1

                contNewReplacementUpper_2 As groupContainer.manualLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    Fill: =Color.Transparent
                    Height: =978
                    LayoutMinHeight: =600
                    LayoutMinWidth: =250
                    Width: =Parent.Width
                    ZIndex: =1

                    contNewReplacementLowerVertical_2 As groupContainer.verticalAutoLayoutContainer:
                        Height: =600
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutMode: =LayoutMode.Auto
                        LayoutOverflowX: =LayoutOverflow.Scroll
                        Width: =640
                        Y: =6
                        ZIndex: =1

                        contNewReplacementHeading_2 As groupContainer.manualLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            FillPortions: =0
                            Height: =60
                            LayoutMinHeight: =70
                            LayoutMinWidth: =750
                            Width: =App.Width
                            ZIndex: =1

                            btnNewReplacementHeadingProduct_2 As button:
                                DisabledBorderColor: |-
                                    =//RGBA(166, 166, 166, 1)
                                    _VarGblAppColors.BisleriBlue
                                DisabledColor: |-
                                    =//RGBA(166, 166, 166, 1)
                                    _VarGblAppColors.LightText
                                DisabledFill: |-
                                    =//RGBA(244, 244, 244, 1)
                                    _VarGblAppColors.BisleriBlue
                                DisplayMode: =DisplayMode.Disabled
                                Height: =50
                                OnSelect: =
                                Size: =_VarGblAppFonts.Size.Subtitle
                                Text: ="Product"
                                Width: =260
                                X: =4
                                ZIndex: =1

                            btnNewReplacementHeadingCases_2 As button:
                                DisabledBorderColor: |-
                                    =//RGBA(166, 166, 166, 1)
                                    _VarGblAppColors.BisleriBlue
                                DisabledColor: |-
                                    =//RGBA(166, 166, 166, 1)
                                    _VarGblAppColors.LightText
                                DisabledFill: |-
                                    =//RGBA(244, 244, 244, 1)
                                    _VarGblAppColors.BisleriBlue
                                DisplayMode: =DisplayMode.Disabled
                                Height: =50
                                OnSelect: =
                                Size: =_VarGblAppFonts.Size.Subtitle
                                Text: ="Cases"
                                Width: =118
                                X: =btnNewReplacementHeadingProduct_2.X+btnNewReplacementHeadingProduct_2.Width+5
                                ZIndex: =2

                            btnNewReplacementHeadingPcs_2 As button:
                                DisabledBorderColor: |-
                                    =//RGBA(166, 166, 166, 1)
                                    _VarGblAppColors.BisleriBlue
                                DisabledColor: |-
                                    =//RGBA(166, 166, 166, 1)
                                    _VarGblAppColors.LightText
                                DisabledFill: |-
                                    =//RGBA(244, 244, 244, 1)
                                    _VarGblAppColors.BisleriBlue
                                DisplayMode: =DisplayMode.Disabled
                                Height: =50
                                OnSelect: =
                                Size: =_VarGblAppFonts.Size.Subtitle
                                Text: ="Pcs"
                                Width: =118
                                X: =btnNewReplacementHeadingCases_2.X+btnNewReplacementHeadingCases_2.Width+5
                                ZIndex: =3

                            btnNewReplacementHeadingReason_2 As button:
                                DisabledBorderColor: |-
                                    =//RGBA(166, 166, 166, 1)
                                    _VarGblAppColors.BisleriBlue
                                DisabledColor: |-
                                    =//RGBA(166, 166, 166, 1)
                                    _VarGblAppColors.LightText
                                DisabledFill: |-
                                    =//RGBA(244, 244, 244, 1)
                                    _VarGblAppColors.BisleriBlue
                                DisplayMode: =DisplayMode.Disabled
                                Height: =50
                                OnSelect: =
                                Size: =_VarGblAppFonts.Size.Subtitle
                                Text: ="Reason"
                                Width: =118
                                X: =btnNewReplacementHeadingPcs_2.X+btnNewReplacementHeadingPcs_2.Width+5
                                ZIndex: =4

                        contNewReplacementData_2 As groupContainer.horizontalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            Height: =287
                            LayoutMinHeight: =600
                            LayoutMinWidth: =App.Width
                            LayoutMode: =LayoutMode.Auto
                            Width: =contNewReplacementHeading_2.Width
                            ZIndex: =2

                            galNewReplacementData_2 As gallery.galleryVertical:
                                AccessibleLabel: ="galNewReplacementData"
                                AlignInContainer: =AlignInContainer.SetByContainer
                                Fill: =Color.Transparent
                                FillPortions: =0
                                Items: =colReasonsVisits
                                Layout: =Layout.Vertical
                                LayoutMinHeight: =80
                                LayoutMinWidth: =1300
                                ShowScrollbar: =false
                                TabIndex: =
                                TemplateSize: =80
                                ZIndex: =1

                                btnNewReplacementDataBackground_2 As button:
                                    DisabledFill: |-
                                        =//RGBA(244, 244, 244, 1)
                                        ColorFade( _VarGblAppColors.BisleriBlue, 80%)
                                    DisplayMode: =DisplayMode.Disabled
                                    Height: =galNewReplacementData_2.TemplateHeight
                                    OnSelect: =Select(Parent)
                                    Size: =24
                                    Text: =""
                                    Width: =630
                                    ZIndex: =1

                                lblNewReplacementDataProductName_2 As label:
                                    Align: =Align.Center
                                    Color: =_VarGblAppColors.BisleriBlue
                                    FontWeight: =FontWeight.Semibold
                                    OnSelect: =Select(Parent)
                                    Size: =_VarGblAppFonts.Size.Regular
                                    Text: =LookUp('SKU Masters', 'SKU Master' = ThisItem.id).'Pack Title'
                                    Width: =261
                                    ZIndex: =2

                                txtNewReplacementDataCases_2 As text:
                                    AccessibleLabel: ="txtNewReplacementDataCases"
                                    Align: =Align.Center
                                    BorderColor: |-
                                        =//RGBA(0, 18, 107, 1)
                                        ColorFade( _VarGblAppColors.BisleriBlue, -30%)
                                    Default: |-
                                        =LookUp(
                                                colReasonsVisits,
                                                id = ThisItem.id
                                            ).qtyCases
                                    DisplayMode: |-
                                        =/*If(
                                            LookUp(
                                                'Item Masters',
                                                'Item Master' = LookUp(
                                                    'SKU Masters',
                                                    'SKU Master' = ThisItem.id
                                                ).'Item Code'.'Item Master'
                                            ).UOM = 'UOM (Item Masters)'.CASE,
                                            DisplayMode.Edit,
                                            DisplayMode.Disabled
                                        )*/
                                        DisplayMode.Edit
                                    FocusedBorderThickness: =2
                                    Format: =TextFormat.Number
                                    HoverBorderColor: =ColorFade( _VarGblAppColors.BisleriBlue, 30%)
                                    HoverFill: |-
                                        =//RGBA(186, 202, 226, 1)
                                        ColorFade(_VarGblAppColors.BisleriBlue, 100%)
                                    OnSelect: =Select(Parent)
                                    Size: =_VarGblAppFonts.Size.Subtitle
                                    Width: =80
                                    X: =287
                                    Y: =23
                                    ZIndex: =6

                                txtNewReplacementDataPcs_2 As text:
                                    AccessibleLabel: ="txtNewReplacementDataPcs"
                                    Align: =Align.Center
                                    BorderColor: |-
                                        =//RGBA(0, 18, 107, 1)
                                        ColorFade( _VarGblAppColors.BisleriBlue, -30%)
                                    Default: |-
                                        =LookUp(
                                                colReasonsVisits,
                                                id = ThisItem.id
                                            ).qtyPcs
                                    DisplayMode: |-
                                        =/*If(
                                            LookUp(
                                                'Item Masters',
                                                'Item Master' = LookUp(
                                                    'SKU Masters',
                                                    'SKU Master' = ThisItem.id
                                                ).'Item Code'.'Item Master'
                                            ).UOM = 'UOM (Item Masters)'.PCS,
                                            DisplayMode.Edit,
                                            DisplayMode.Disabled
                                        )*/
                                        DisplayMode.Edit
                                    FocusedBorderThickness: =2
                                    Format: =TextFormat.Number
                                    HoverBorderColor: =ColorFade( _VarGblAppColors.BisleriBlue, 30%)
                                    HoverFill: |-
                                        =//RGBA(186, 202, 226, 1)
                                        ColorFade(_VarGblAppColors.BisleriBlue, 100%)
                                    OnSelect: =Select(Parent)
                                    Size: =_VarGblAppFonts.Size.Subtitle
                                    Width: =80
                                    X: =410
                                    Y: =23
                                    ZIndex: =7

                                shpNewReplacementDataRect3_2 As rectangle:
                                    Fill: |-
                                        =//RGBA(56, 96, 178, 1)
                                        _VarGblAppColors.LightText
                                    Height: =galNewReplacementData_2.TemplateHeight
                                    OnSelect: =Select(Parent)
                                    Width: =2
                                    X: =btnNewReplacementHeadingProduct_2.Width+5
                                    ZIndex: =9

                                shpNewReplacementDataRect2_2 As rectangle:
                                    Fill: |-
                                        =//RGBA(56, 96, 178, 1)
                                        _VarGblAppColors.LightText
                                    Height: =galNewReplacementData_2.TemplateHeight
                                    OnSelect: =Select(Parent)
                                    Width: =2
                                    X: =btnNewReplacementHeadingCases_2.Width+btnNewReplacementHeadingCases_2.X
                                    ZIndex: =10

                                shpNewReplacementDataRect1_2 As rectangle:
                                    Fill: |-
                                        =//RGBA(56, 96, 178, 1)
                                        _VarGblAppColors.LightText
                                    Height: =galNewReplacementData_2.TemplateHeight
                                    OnSelect: =Select(Parent)
                                    Width: =2
                                    X: =btnNewReplacementHeadingPcs_2.Width+btnNewReplacementHeadingPcs_2.X
                                    ZIndex: =11

                                lblNewReplacementDataProductDescription_2 As label:
                                    Align: =Align.Center
                                    FontWeight: =FontWeight.Semibold
                                    Height: =50
                                    OnSelect: =Select(Parent)
                                    Size: =_VarGblAppFonts.Size.Tiny
                                    Text: =LookUp('SKU Masters', 'SKU Master' = ThisItem.id).'Name (zx_namess)'
                                    Width: =261
                                    X: =btnNewReplacementHeadingProduct_2.X
                                    Y: =30
                                    ZIndex: =15

                                Label8_2 As label:
                                    Align: =Align.Center
                                    FontWeight: =FontWeight.Semibold
                                    Height: =47
                                    OnSelect: =Select(Parent)
                                    Size: =_VarGblAppFonts.Size.Regular
                                    Text: =ThisItem.reason
                                    Width: =118
                                    X: =512
                                    Y: =16
                                    ZIndex: =16

            htmOrderListQty_15 As htmlViewer:
                Color: =RGBA(242, 242, 242, 1)
                Height: =71
                HtmlText: |-
                    ="<div style='border-radius:10px 10px 10px 10px; background-color:#B3E8E3; opacity:1; border:0px solid #00B3A1; width:400px; height:50px'></div>"
                Width: =411
                X: =115
                Y: =605
                ZIndex: =2

            htmOrderListQty_16 As htmlViewer:
                Color: =RGBA(242, 242, 242, 1)
                Height: =66
                HtmlText: |-
                    ="<div style='border-radius:10px 10px 10px 10px; background-color:#B3E8E3; opacity:1; border:0px solid #00B3A1; width:400px; height:50px'></div>"
                Width: =411
                X: =114
                Y: =672
                ZIndex: =3

            Label11_2 As label:
                Align: =Align.Center
                FontWeight: =FontWeight.Bold
                Height: =70
                Size: =_VarGblAppFonts.Size.Title
                Text: =OrderData.'Customer Name'
                Width: =560
                X: =39
                ZIndex: =10

            Group7_3 As group:
                Height: =5
                Width: =5
                X: =40
                Y: =-77
                ZIndex: =11

                Button9_6 As button:
                    Fill: =_VarGblAppColors.BisleriBlue
                    FocusedBorderThickness: =2
                    HoverFill: =ColorFade(_VarGblAppColors.BisleriBlue, -20%)
                    OnSelect: =Set(varSelectedVisitActiveTab, 3)
                    Size: =_VarGblAppFonts.Size.Title
                    Text: ="Edit"
                    Width: =150
                    X: =149
                    Y: =814
                    ZIndex: =8

                Button9_7 As button:
                    Fill: =_VarGblAppColors.BisleriBlue
                    FocusedBorderThickness: =2
                    HoverFill: =ColorFade(_VarGblAppColors.BisleriBlue, -20%)
                    OnSelect: |
                        =ClearCollect(
                            CreateReplacementRecord,
                            Patch(
                                'Order Headers',
                                Defaults('Order Headers'),
                                {
                                    'Order Date': Today(),
                                    'Order Type': 'Order Type (Choice)'.'Replacement Order',
                                    //'Payment Type': 'Payment Type (Order Headers)'.Cash,
                                    'Total Quantity': (Sum(
                                        colReasonsVisits,
                                        qtyCases
                                    ) + Sum(
                                        colReasonsVisits,
                                        qtyPcs
                                    )),
                                    'Payment Status': 'Payment Status Choice'.Completed,
                                    /*    'Total Amount': ((Sum(
                                            colCartItems,
                                            discountedPrice
                                        ) * 0.18) + Sum(
                                            colCartItems,
                                            discountedPrice
                                        ) + Sum(
                                            colCartItems,
                                            emptyJarValue
                                        )), */
                                    'Van No': LookUp(
                                        Warehouses,
                                        Warehouse = varUserVanNo.Van.Warehouse
                                    ),
                                    'Route No': LookUp(
                                        Areas,
                                        Area = varUserArea.Area.Area
                                    ),
                                    Customer: LookUp(
                                        Customers_1,
                                        Account = OrderData.Account
                                    ),
                                    Salesperson: LookUp(
                                        Users,
                                        'Primary Email' = User().Email
                                    ),
                                    'Delivery Date': Today()
                                    //Reason:
                                      /*  'Net Amount': (Sum(
                                            colCartItems,
                                            discountedPrice
                                        ) + Sum(
                                            colCartItems,
                                            emptyJarValue
                                        )),
                                        'Total Tax Amount': (Sum(
                                            colCartItems,
                                            discountedPrice
                                        ) * 0.18),
                                        'Total Discount Amount': Sum(
                                            colCartItems,
                                            discount
                                        ) */
                                }
                            )
                        );
                        
                        Set(replacementdataorder,First(CreateReplacementRecord));
                        If(
                            !IsBlank(CreateReplacementRecord),
                            ClearCollect(
                                CreateReplacementItemsRecord,
                                ForAll(
                                    colReasonsVisits As ThissItem,
                                    Patch(
                                        'Order Lines',
                                        Defaults('Order Lines'),
                                        {
                                            'Total Quantity': ThissItem.qtyCases + ThissItem.qtyPcs,
                                            Cases: ThissItem.qtyCases,
                                            PCs: ThissItem.qtyPcs,
                                            'Order Number': LookUp(
                                                'Order Headers',
                                                'Order Number' = replacementdataorder.'Order Number'
                                            ),
                                            Salesperson: LookUp(
                                                Users,
                                                'Primary Email' = User().Email
                                            ),
                                            'Van No': LookUp(
                                                Warehouses,
                                                Warehouse = varUserVanNo.Van.Warehouse
                                            ),
                                            'Item Type': 'Item Type (Choice)'.Paid,
                                            'Item SKU': LookUp(
                                                'SKU Masters',
                                                'SKU Master' = ThissItem.id
                                            ),
                                            /*  'Base Price': ThissItem.price,
                                                'Total Discount Amount': Value(ThissItem.discount),
                                                'Tax Amount': ThissItem.discountedPrice * 0.18,
                                                Rate: ThissItem.discountedPrice + (ThissItem.discountedPrice * 0.18) + ThissItem.emptyJarValue, */
                                            'Customer no.': LookUp(
                                                Customers_1,
                                                Account = OrderData.Account
                                            ),
                                            'Route No': LookUp(
                                                Areas,
                                                Area = varUserArea.Area.Area
                                            ),
                                            Reason: ThissItem.reason
                                        }
                                    )
                                )
                            )
                        );
                        Patch(
                            Visits,
                            LookUp(
                                Visits,
                                Customer.Account = OrderData.Account && IsBlank('Check-out Time') && 'Created On' >= Today()/*&& Customer.Salesperson.'Primary Email' = User().Email*/
                            ),
                            {
                                'Check-out Latitude': Location.Latitude,
                                'Check-out Longitude': Location.Longitude,
                                'Check-out Time': Now()
                            }
                        );
                        Navigate('Visit Screen');
                        Clear(colReasonsVisits);
                    Size: =_VarGblAppFonts.Size.Title
                    Text: ="Confirm"
                    Width: =150
                    X: =342
                    Y: =814
                    ZIndex: =9

            Group9_3 As group:
                Height: =5
                Width: =5
                X: =40
                Y: =-77
                ZIndex: =12

                Label10_16 As label:
                    Height: =37
                    Size: =_VarGblAppFonts.Size.Title
                    Text: |-
                        ="Total Cases :"
                    Width: =170
                    X: =147
                    Y: =616
                    ZIndex: =4

                Label10_17 As label:
                    Height: =37
                    Size: =_VarGblAppFonts.Size.Title
                    Text: =Sum(colReasonsVisits, qtyCases)
                    Width: =170
                    X: =324
                    Y: =616
                    ZIndex: =6

            Group11_5 As group:
                Height: =5
                Width: =5
                X: =40
                Y: =-77
                ZIndex: =13

                Label10_18 As label:
                    Height: =37
                    Size: =_VarGblAppFonts.Size.Title
                    Text: |-
                        ="Total Pcs :"
                    Width: =170
                    X: =147
                    Y: =683
                    ZIndex: =5

                Label10_19 As label:
                    Height: =37
                    Size: =_VarGblAppFonts.Size.Title
                    Text: =Sum(colReasonsVisits, qtyPcs)
                    Width: =170
                    X: =324
                    Y: =683
                    ZIndex: =7

    BottomBar_15 As BottomBar:
        NavItem: |-
            =Table(
                {
                    Title: If(
                        CountRows(colOfflineTodayAttendance)=0,
                        "Start",
                        (CountRows(colOfflineTodayAttendance) = 1 && !IsBlank(First(colOfflineTodayAttendance).'Check-in Time') && IsBlank(First(colOfflineTodayAttendance).'Check-out Time') ),
                        "End",
                        (CountRows(colOfflineTodayAttendance) = 1 && !IsBlank(First(colOfflineTodayAttendance).'Check-in Time') && !IsBlank(First(colOfflineTodayAttendance).'Check-out Time')),
                        "Ended"
                    ),
                    Icon: Icon.CalendarBlank,
                    Screen: 'Attendance Screen',
                    Active: false
                },
                {
                    Title: "Visit",
                    Icon: Icon.Waypoint,
                    Screen: 'Visit Screen',
                    Active: true
                },
                {
                    Title: "Dashboard",
                    Icon: Icon.Waffle,
                    Screen: 'Home Screen',
                    Active: false
                },
                {
                    Title: "Customers",
                    Icon: Icon.People,
                    Screen: 'Customer Screen',
                    Active: false
                },
                {
                    Title: "Menu",
                    Icon: Icon.Hamburger,
                    Screen: 'Menu Screen',
                    Active: false
                }
            )
        Y: =1026
        ZIndex: =8

    Icon7_2 As icon.Reload:
        AccessibleLabel: ="Icon7_2"
        Color: =RGBA(255, 255, 255, 1)
        Height: =36
        Icon: =Icon.Reload
        OnSelect: =Refresh('Current Stocks');
        TabIndex: =0
        Width: =38
        X: =496
        Y: =22
        ZIndex: =9

    Icon5_1 As icon.Print:
        AccessibleLabel: ="Icon5_1"
        Color: =RGBA(255, 255, 255, 1)
        Height: =55
        Icon: =Icon.Print
        OnSelect: |
            =Set(
                INVID,
                GUID(First(CreateInvHeader).'Invoice Header')
            );
            ClearCollect(
                Invoicedata,
                Filter(
                    'Invoice Headers',
                    'Invoice Header' = INVID
                )
            );
            ClearCollect(
                Invoicelinedata,
                Filter(
                    'Invoice Lines',
                    'Invoice Number'.'Invoice Header' = INVID
                )
            );
            Set(
                varpdf2,
                PDF(
                    Container10,
                    {ExpandContainers: true}
                )
            );
            Set(
                varrr2,
                Patch(
                    'Invoice Headers',
                    LookUp(
                        'Invoice Headers',
                        'Invoice Header' = INVID
                    ),
                    {
                        File: {
                            FileName: "File.pdf",
                            Value: varpdf2
                        }
                    }
                ).'Invoice Header'
            );
            Set(
                varShowGatePassFile2,
                true
            );
        PaddingBottom: =7
        PaddingLeft: =7
        PaddingRight: =7
        PaddingTop: =7
        TabIndex: =0
        Visible: |-
            =
            If(!IsBlank(LookUp(
                                'Invoice Headers',
                                'Invoice Header' = invheads)),true,false)
        Width: =55
        X: =407
        Y: =11
        ZIndex: =10

    Rectangle2 As rectangle:
        DisplayMode: =DisplayMode.Disabled
        Fill: =RGBA(0, 0, 0, 0.49)
        Height: =App.Height
        Visible: |-
            =//If(varIRN || VarPaymentConfirm, true, false)
            If(varIRN, true, false)
        Width: =App.Width
        ZIndex: =11

    Container2 As groupContainer.manualLayoutContainer:
        Fill: =Color.White
        Height: =271
        Visible: =//If(VarPaymentConfirm, true, false)
        X: =70
        Y: =421
        ZIndex: =12

        Label5 As label:
            FontWeight: =FontWeight.Semibold
            Height: =102
            Size: =_VarGblAppFonts.Size.Title
            Text: ="Do you want to create a replacement return order?"
            Width: =379
            X: =61
            Y: =37
            ZIndex: =1

        Button4 As button:
            Fill: =_VarGblAppColors.BisleriBlue
            FocusedBorderThickness: =2
            Height: =50
            HoverFill: =ColorFade(_VarGblAppColors.BisleriBlue, -20%)
            OnSelect: |
                =/*Set(VarPaymentConfirm, false);*/
                Set(varSelectedVisitActiveTab, 3);
                Clear(colReasonsVisits)
            Size: =_VarGblAppFonts.Size.UpperMedium
            Text: ="YES"
            Width: =150
            X: =85
            Y: =156
            ZIndex: =2

        Button4_3 As button:
            Fill: =_VarGblAppColors.BisleriBlue
            FocusedBorderThickness: =2
            Height: =50
            HoverFill: =ColorFade(_VarGblAppColors.BisleriBlue, -20%)
            OnSelect: |
                =Patch(
                    Visits,
                    LookUp(
                        Visits,
                        Customer.Account = OrderData.Account && IsBlank('Check-out Time') && 'Created On' >= Today() /*&& Customer.Salesperson.'Primary Email' = User().Email*/
                    ),
                    {
                        'Check-out Latitude': Location.Latitude,
                        'Check-out Longitude': Location.Longitude,
                        'Check-out Time': Now()
                    }
                );
                /*Set(
                    VarPaymentConfirm,
                    false
                );*/
                Navigate('Visit Screen');
            Size: =_VarGblAppFonts.Size.UpperMedium
            Text: ="NO"
            Width: =150
            X: =272
            Y: =156
            ZIndex: =3

    "'IRN Container' As groupContainer.manualLayoutContainer":
        Fill: =Color.White
        Height: =If(CountRows(colFinalErrorMessage)>0, 450, 271)//271
        Visible: =If(varIRN , true, false)
        X: |-
            =//70
            
            'Visit Screen'.Width/2-Self.Width/2
        Y: |-
            =//441
            
            'Visit Screen'.Height/2-Self.Height/2
        ZIndex: =13

        Label5_1 As label:
            Align: =Align.Center
            FontWeight: =FontWeight.Semibold
            Height: =102
            Size: =_VarGblAppFonts.Size.Title
            Text: |-
                =/*If(
                    IsBlank(Text(testButton.qr)) && Not(CreateInvHeaderdata.'IRN Message' = "N"),
                    "QR Code Generated Successfully!",
                    "IRN Generated Successfully!"
                )*/
                If( Gallery3.Visible,  "IRN not generated", 
                    !IsBlank(
                        LookUp(
                            AllCustomerss,
                            Account = OrderData.Account
                        ).GSTIN
                    ) && ((LookUp(
                        AllCustomerss,
                        Account = OrderData.Account
                    ).'Customer Group'.Name = "KEY-RT" && LookUp(
                        AllCustomerss,
                        Account = OrderData.Account
                    ).Branch.Name = "PUNE") || (LookUp(
                        AllCustomerss,
                        Account = OrderData.Account
                    ).'Customer Group'.Name = "COR-RT" && LookUp(
                        AllCustomerss,
                        Account = OrderData.Account
                    ).Branch.Name = "Mumbai")),
                    "Your order has been placed",
                    IsBlank(
                        LookUp(
                            AllCustomerss,
                            Account = OrderData.Account
                        ).GSTIN
                    ),
                    "QR Code Generated Successfully!",
                    !IsBlank(
                        LookUp(
                            AllCustomerss,
                            Account = OrderData.Account
                        ).GSTIN
                    ) && (((LookUp(
                        AllCustomerss,
                        Account = OrderData.Account
                    ).'Customer Group'.Name <> "KEY-RT") && LookUp(
                        AllCustomerss,
                        Account = OrderData.Account
                    ).Branch.Name = "PUNE") || ((LookUp(
                        AllCustomerss,
                        Account = OrderData.Account
                    ).'Customer Group'.Name <> "COR-RT") && LookUp(
                        AllCustomerss,
                        Account = OrderData.Account
                    ).Branch.Name = "Mumbai")),
                    "IRN Generated Successfully!"
                )
                /*If(
                    
                    !IsBlank(Text(CreateInvHeader.'Local QR ')) && IsBlank(Text(CreateInvHeader.'IRN Number')),
                    "QR Code Generated Successfully!",
                    !IsBlank(Text(CreateInvHeader.'IRN Number')) && IsBlank(Text(CreateInvHeader.'Local QR ')),
                    "IRN Generated Successfully!",
                    "Your order has been placed"
                )*/
            Width: =379
            X: =61
            Y: =37
            ZIndex: =1

        Button4_5 As button:
            Fill: =_VarGblAppColors.BisleriBlue
            FocusedBorderThickness: =2
            Height: =50
            HoverFill: =ColorFade(_VarGblAppColors.BisleriBlue, -20%)
            OnSelect: |-
                =Patch(
                    Visits,
                    LookUp(
                        Visits,
                        Customer.Account = OrderData.Account && IsBlank('Check-out Time') &&'Created On'>= Today()/*&& Customer.Salesperson.'Primary Email' = User().Email*/
                    ),
                    {
                        'Check-out Latitude': Location.Latitude,
                        'Check-out Longitude': Location.Longitude,
                        'Check-out Time': Now()
                    }
                );
                /*Set(
                    VarPaymentConfirm,
                    false
                );*/
                //Navigate('Visit Screen');
                Set(
                    varIRN,
                    false
                );
                //Set(varSelectedVisitActiveTab, 3);
                //Clear(colReasonsVisits)
                Navigate(
                    'Visit Screen',
                    ScreenTransition.CoverRight
                )
            Size: =_VarGblAppFonts.Size.UpperMedium
            Text: ="OK"
            Width: =150
            X: =175
            Y: |-
                ='IRN Container'.Height-Self.Height-15
                
                //156
            ZIndex: =2

        Gallery3 As gallery.variableTemplateHeightGallery:
            DelayItemLoading: =true
            Height: =240
            Items: =colFinalErrorMessage
            Layout: =Layout.Vertical
            LoadingSpinner: =LoadingSpinner.Data
            TemplateSize: =45
            Visible: =CountRows(colFinalErrorMessage)>0
            Width: =500
            Y: =Label5_1.Y+Label5_1.Height
            ZIndex: =3

            Label19 As label:
                AutoHeight: =true
                OnSelect: =Select(Parent)
                Size: =_VarGblAppFonts.Size.Medium
                Text: =ThisItem.Value
                Width: =490
                ZIndex: =1

    Rectangle6 As rectangle:
        Fill: =RGBA(0, 0, 0, 0.5)
        Height: =App.Height
        Visible: =If(_varCreditLimitPopup, true, false)
        Width: =App.Width
        ZIndex: =14

    Container9 As groupContainer.manualLayoutContainer:
        Fill: =RGBA(255, 255, 255, 1)
        Height: =259
        Visible: =If(_varCreditLimitPopup, true, false)
        X: =70
        Y: =375
        ZIndex: =15

        Label15 As label:
            Align: =Align.Center
            Color: =_VarGblAppColors.BisleriBlue
            FontWeight: =FontWeight.Bold
            Height: =92
            Size: =_VarGblAppFonts.Size.Title
            Text: ="You don't have sufficient credit limit left, Please check"
            Width: =474
            X: =13
            Y: =31
            ZIndex: =1

        Button3 As button:
            Color: =_VarGblAppColors.LightText
            Fill: =_VarGblAppColors.BisleriBlue
            Height: =50
            HoverFill: =ColorFade(_VarGblAppColors.BisleriBlue, -20%)
            OnSelect: =Set(_varCreditLimitPopup, false)
            Size: =_VarGblAppFonts.Size.UpperMedium
            Text: ="Okay"
            Width: =162
            X: =169
            Y: =175
            ZIndex: =2

    FormViewer2 As formViewer:
        DataSource: ='Invoice Headers'
        Height: =81
        Item: =LookUp('Invoice Headers','Invoice Header'=varrr2)
        Visible: =varShowGatePassFile2
        Width: =162
        X: =195
        ZIndex: =16

        File_DataCard2 As typedDataCard.fileViewCard:
            BorderStyle: =BorderStyle.Solid
            DataField: ="new_file"
            Default: |-
                =If(!IsBlank(ThisItem.File.FileName), Table({DisplayName: ThisItem.File.FileName, Value: ThisItem.File.Value}), Blank())
            DisplayMode: =DisplayMode.View
            DisplayName: =DataSourceInfo([@'Invoice Headers'],DataSourceInfo.DisplayName,"new_file")
            Fill: =RGBA(0, 0, 0, 0)
            Height: =129
            Required: =false
            Visible: =varShowGatePassFile2
            Width: =162
            X: =0
            Y: =0
            ZIndex: =1

            DataCardKey1 As label:
                Height: =76
                Size: =21
                Text: =Parent.DisplayName
                Width: =Parent.Width - 60
                Wrap: =false
                X: =30
                ZIndex: =1

            DataCardValue1 As attachments:
                AccessibleLabel: ="DataCardValue1"
                AddAttachmentText: ="Upload file"
                BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                DisplayMode: =Parent.DisplayMode
                Height: =100
                IsInDataCard: =true
                Items: =Parent.Default
                MaxAttachments: =1
                MaxAttachmentsText: =""
                NoAttachmentsText: ="There is no file."
                PaddingBottom: =5
                PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                PaddingRight: =5
                PaddingTop: =5
                Size: =21
                Width: =Parent.Width - 60
                X: =30
                Y: =DataCardKey1.Y + DataCardKey1.Height + 5
                ZIndex: =2

            ErrorMessage1 As label:
                AutoHeight: =true
                Height: =10
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Size: =24
                Text: =Parent.Error
                Visible: =Parent.DisplayMode=DisplayMode.Edit
                Width: =Parent.Width - 60
                X: =30
                Y: =DataCardValue1.Y + DataCardValue1.Height
                ZIndex: =3

            StarVisible1 As label:
                Align: =Align.Center
                Height: =DataCardKey1.Height
                Size: =21
                Text: ="*"
                Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                Width: =30
                Wrap: =false
                Y: =DataCardKey1.Y
                ZIndex: =4

