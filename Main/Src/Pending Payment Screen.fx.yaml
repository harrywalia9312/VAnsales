"'Pending Payment Screen' As screen.'phoneLayout_FluidGridWithHeaderPageLayout_ver3.0'":
    Fill: =_VarGblAppColors.LightText
    OnVisible: |-
        =ClearCollect(
            paymentLines,
            Filter(
                'Order Lines',
                'Order Number'.'Order Number' = paymentData.'Order Number'
            )
        )

    canPayment_1 As fluidGrid.fluidGridWithBlankCard:
        BorderThickness: =0
        Height: =App.Height-175
        Width: =Parent.Width
        Y: =80
        ZIndex: =1

        dataCardPayment_1 As dataCard:
            BorderColor: =RGBA(0, 0, 0, 1)
            BorderStyle: =BorderStyle.Solid
            BorderThickness: =0
            DisplayMode: =DisplayMode.Edit
            Fill: =RGBA(0, 0, 0, 0)
            Height: =1320
            Width: =Parent.Width
            X: =0
            Y: =0
            ZIndex: =1

            Container5_2 As groupContainer.manualLayoutContainer:
                Height: =669
                Width: =640
                Y: =Container7_1.Y + Container7_1.Height + 20
                ZIndex: =1

                lblModeOfPayment_3 As label:
                    FontWeight: =FontWeight.Semibold
                    Size: =_VarGblAppFonts.Size.Title
                    Text: ="Mode of Payment"
                    Width: =560
                    X: =40
                    Y: =185
                    ZIndex: =5

                rdbModeOfPayment_3 As radio:
                    AccessibleLabel: ="rdbModeOfPayment_1"
                    Default: =paymentData.Customer.'Mode Of Payment'
                    DisplayMode: =DisplayMode.View
                    FocusedBorderColor: =Color.Transparent
                    FocusedBorderThickness: =0.1
                    Height: =72
                    HoverColor: =RGBA(0, 0, 0, 0)
                    HoverFill: =Color.Transparent
                    Items: |-
                        =//Choices('Payment Type')
                        Table({Value: paymentData.Customer.'Mode Of Payment'})
                    Layout: =Layout.Horizontal
                    PressedColor: =Color.Transparent
                    PressedFill: =Color.Transparent
                    RadioSelectionFill: =_VarGblAppColors.BisleriBlue
                    RadioSize: =42
                    Size: =_VarGblAppFonts.Size.UpperMedium
                    Width: =457
                    X: =27
                    Y: =228
                    ZIndex: =6

                shpUpperRect_3 As rectangle:
                    DisplayMode: =DisplayMode.Disabled
                    Fill: =_VarGblAppColors.BottomListBg
                    Height: =60
                    Width: =App.Width
                    ZIndex: =9

                shpLowerRect_3 As rectangle:
                    DisplayMode: =DisplayMode.Disabled
                    Fill: =_VarGblAppColors.BottomListBg
                    Height: =60
                    Width: =App.Width
                    Y: =120
                    ZIndex: =10

                lblPaymentIncoiceNo_3 As label:
                    Color: =_VarGblAppColors.PrimaryText
                    FontWeight: =FontWeight.Bold
                    Height: =60
                    Size: =_VarGblAppFonts.Size.UpperMedium
                    Text: ="Invoice No."
                    Width: =307
                    X: =10
                    ZIndex: =11

                lblPaymentAmount_3 As label:
                    Color: =_VarGblAppColors.PrimaryText
                    FontWeight: =FontWeight.Bold
                    Height: =60
                    Size: =_VarGblAppFonts.Size.UpperMedium
                    Text: ="Amount (INR)"
                    Width: =307
                    X: =333
                    ZIndex: =12

                lblPaymentInvoiceNoValue_3 As label:
                    Color: =_VarGblAppColors.BisleriBlue
                    FontWeight: =FontWeight.Bold
                    Height: =60
                    Size: =21
                    Text: ="RI2223R260005477"
                    Width: =307
                    X: =10
                    Y: =60
                    ZIndex: =13

                lblPaymentAmountValue_3 As label:
                    Color: =_VarGblAppColors.BisleriBlue
                    FontWeight: =FontWeight.Bold
                    Height: =60
                    Size: =21
                    Text: |-
                        =Concatenate(
                            "â‚¹",
                            Text(
                               paymentData.'Net Amount',
                                "[$-hi-IN]##,##,##,###",
                                "hi-IN"
                            )
                        )
                    Width: =286
                    X: =334
                    Y: =60
                    ZIndex: =14

                lblPaymentDetails_3 As label:
                    Color: =_VarGblAppColors.PrimaryText
                    FontWeight: =FontWeight.Bold
                    Height: =60
                    Size: =_VarGblAppFonts.Size.UpperMedium
                    Text: ="Payment Details"
                    Width: =307
                    X: =10
                    Y: =120
                    ZIndex: =15

                ImgPaymentPaytm_3 As image:
                    AccessibleLabel: ="ImgPaymentPaytm_3"
                    BorderColor: =_VarGblAppColors.HeaderBg
                    BorderThickness: =2
                    Height: =67
                    Image: ='Paytm Image'
                    OnSelect: |
                        =Set(orderId,RandBetween(0,9999));
                        ClearCollect(payments,Payment.Payment1({Orderid:orderId,Amount:"90"}));
                        /*Set(amt,txtPaymentAmountValue);*/
                        Navigate(PaymentQR);
                    TabIndex: =0
                    Visible: =If(paymentData.Customer.'Mode Of Payment' ='Payment Type (choice)'.CASH, true, false)
                    Width: =135
                    X: =471
                    Y: =228
                    ZIndex: =16

                grpPaymentButtons_4 As group:
                    Height: =5
                    Width: =5
                    X: =80
                    Y: =-772
                    ZIndex: =19

                    btnPaymentCancel_4 As button:
                        Fill: =_VarGblAppColors.BisleriBlue
                        FocusedBorderThickness: =2
                        Height: =50
                        HoverFill: =ColorFade(_VarGblAppColors.BisleriBlue, -20%)
                        OnSelect: =Navigate(OrderScreen);
                        Size: =_VarGblAppFonts.Size.UpperMedium
                        Text: ="Cancel"
                        Width: =150
                        X: =334
                        Y: =573
                        ZIndex: =8

                    btnPaymentConfirm_6 As button:
                        DisplayMode: |-
                            =If(
                                paymentData.Customer.'Mode Of Payment' = 'Payment Type (choice)'.COUPON,
                                If(
                                    Value(txtPaymentAmountValue_6.Text) < Value(
                                        Text(
                                            paymentData.'Net Amount',
                                            "[$-hi-IN]##,##,##,###",
                                            "hi-IN"
                                        )
                                    ) || Value(txtPaymentAmountValue_6.Text) > Value(
                                        Text(
                                            paymentData.'Net Amount',
                                            "[$-hi-IN]##,##,##,###",
                                            "hi-IN"
                                        )
                                    ),
                                    DisplayMode.Disabled,
                                    DisplayMode.Edit
                                ),
                                paymentData.Customer.'Mode Of Payment' = 'Payment Type (choice)'.CASH || paymentData.Customer.'Mode Of Payment' = 'Payment Type (choice)'.CREDIT,
                                If(
                                    Value(txtPaymentAmountValue_7.Text) < Value(
                                        Text(
                                            paymentData.'Net Amount',
                                            "[$-hi-IN]##,##,##,###",
                                            "hi-IN"
                                        )
                                    ) || Value(txtPaymentAmountValue_7.Text) > Value(
                                        Text(
                                            paymentData.'Net Amount',
                                            "[$-hi-IN]##,##,##,###",
                                            "hi-IN"
                                        )
                                    ),
                                    DisplayMode.Disabled,
                                    DisplayMode.Edit
                                )
                            )
                        Fill: =_VarGblAppColors.BisleriBlue
                        FocusedBorderThickness: =2
                        Height: =50
                        HoverFill: =ColorFade(_VarGblAppColors.BisleriBlue, -20%)
                        OnSelect: |
                            =////////////////////////////////////////////////////////////////PAYMENTS RECORD
                            Set(varInvoiceHeader,LookUp(
                                                'Invoice Headers',
                                                'Order Number'.'Order Number' = paymentData.'Order Number'
                                            ).'Invoice Number');
                            ClearCollect(
                                colPaymentsRec,
                                Patch(
                                    Payments,
                                    Defaults(Payments),
                                    {
                                        'Receipt Date': Today(),
                                        Customer: LookUp(
                                            Customers_1,
                                            Account = paymentData.Customer.Account
                                        ),
                                        Salesperson: LookUp(
                                            Users,
                                            'Primary Email' = User().Email
                                        ),
                                        Amount: paymentData.'Net Amount',
                                        'Mode of Payment': paymentData.Customer.'Mode Of Payment',
                                        Route: LookUp(
                                            Areas,
                                            Area = varUserArea.Area.Area
                                        ),
                                        'Van No': LookUp(
                                            Warehouses,
                                            Warehouse = varUserVanNo.Van.Warehouse
                                        ),
                                        'Payment Type': 'Payment Type (Payments)'.'Normal Flow',
                                        Order: LookUp(
                                            'Order Headers',
                                            'Order Number' = paymentData.'Order Number'
                                        ),
                                        Invoice: LookUp(
                                            'Invoice Headers',
                                            'Invoice Number' = varInvoiceHeader
                                             /*LookUp(
                                                'Invoice Headers',
                                                'Order Number'.'Order Number' = paymentData.'Order Number'
                                            ).'Invoice Number'*/
                                        )
                                    }
                                );
                                
                            );
                            Patch(
                                'Order Headers',
                                LookUp(
                                    'Order Headers',
                                    'Order Number' = paymentData.'Order Number'
                                ),
                                {'Payment Status': 'Payment Status Choice'.Completed}
                            );
                            Refresh('Current Stocks');
                            /*Set(
                                VarPaymentConfirm,
                                true
                            );*/
                            Navigate(OrderScreen);
                        Size: =_VarGblAppFonts.Size.UpperMedium
                        Text: ="Confirm"
                        Width: =150
                        X: =169
                        Y: =573
                        ZIndex: =18

                contCCouponPayment_1 As groupContainer.manualLayoutContainer:
                    Height: =234
                    Visible: |-
                        =If(
                            paymentData.Customer.'Mode Of Payment' = 'Payment Type (choice)'.COUPON,
                            true,
                            false
                        )
                    Width: =App.Width
                    Y: =300
                    ZIndex: =22

                    lblPaymentAmountLabel_5 As label:
                        FontWeight: =FontWeight.Semibold
                        Size: =_VarGblAppFonts.Size.UpperMedium
                        Text: ="No. of coupons"
                        Width: =230
                        X: =45
                        Y: =26
                        ZIndex: =1

                    txtPaymentAmountValue_5 As text:
                        AccessibleLabel: ="txtPaymentAmountValue_1"
                        BorderColor: =_VarGblAppColors.BisleriBlue
                        Default: =
                        DisplayMode: =
                        FocusedBorderThickness: =2
                        Format: =TextFormat.Number
                        Height: =45
                        HintText: ="Enter Count"
                        HoverBorderColor: =_VarGblAppColors.BisleriBlue
                        HoverFill: =ColorFade(_VarGblAppColors.BisleriBlue, 80%)
                        OnChange: |-
                            =If(
                                Value(Self.Text) < Value(
                                    Text(
                                        ((Sum(
                                            colCartItems,
                                            discountedPrice
                                        ) * 0.18) + Sum(
                                            colCartItems,
                                            discountedPrice
                                        ) + Sum(
                                            colCartItems,
                                            emptyJarValue
                                        )),
                                        "[$-hi-IN]##,##,##,###",
                                        "hi-IN"
                                    )
                                ) || Value(Self.Text) > Value(
                                    Text(
                                        ((Sum(
                                            colCartItems,
                                            discountedPrice
                                        ) * 0.18) + Sum(
                                            colCartItems,
                                            discountedPrice
                                        ) + Sum(
                                            colCartItems,
                                            emptyJarValue
                                        )),
                                        "[$-hi-IN]##,##,##,###",
                                        "hi-IN"
                                    )
                                ),
                                Notify(
                                    "Please enter correct amount",
                                    NotificationType.Error,
                                    2000
                                )
                            )
                        Size: =_VarGblAppFonts.Size.UpperMedium
                        Width: =230
                        X: =352
                        Y: =26
                        ZIndex: =2

                    txtPaymentAmountValue_6 As text:
                        AccessibleLabel: ="txtPaymentAmountValue_1"
                        BorderColor: =_VarGblAppColors.BisleriBlue
                        Default: |-
                            =If(
                                varOrderData.'Mode Of Payment' = 'Payment Type (choice)'.COUPON,
                                    Text(
                                        ((Sum(
                                            colCartItems,
                                            discountedPrice
                                        ) * ((Sum(
                                                colCartItems,
                                                tax
                                            )) * 0.01)) + Sum(
                                            colCartItems,
                                            discountedPrice
                                        ) + Sum(
                                            colCartItems,
                                            emptyJarValue
                                        )),
                                        "[$-hi-IN]##,##,##,###",
                                        "hi-IN"
                                    ),
                                    ""
                            )
                        FocusedBorderThickness: =2
                        Format: =TextFormat.Number
                        Height: =45
                        HintText: ="Enter Amount"
                        HoverBorderColor: =_VarGblAppColors.BisleriBlue
                        HoverFill: =ColorFade(_VarGblAppColors.BisleriBlue, 80%)
                        OnChange: |-
                            =If(
                                Value(Self.Text) < Value(
                                    Text(
                                        ((Sum(
                                            colCartItems,
                                            discountedPrice
                                        ) * 0.18) + Sum(
                                            colCartItems,
                                            discountedPrice
                                        ) + Sum(
                                            colCartItems,
                                            emptyJarValue
                                        )),
                                        "[$-hi-IN]##,##,##,###",
                                        "hi-IN"
                                    )
                                ) || Value(Self.Text) > Value(
                                    Text(
                                        ((Sum(
                                            colCartItems,
                                            discountedPrice
                                        ) * 0.18) + Sum(
                                            colCartItems,
                                            discountedPrice
                                        ) + Sum(
                                            colCartItems,
                                            emptyJarValue
                                        )),
                                        "[$-hi-IN]##,##,##,###",
                                        "hi-IN"
                                    )
                                ),
                                Notify(
                                    "Please enter correct amount",
                                    NotificationType.Error,
                                    2000
                                )
                            )
                        Size: =_VarGblAppFonts.Size.UpperMedium
                        Width: =230
                        X: =352
                        Y: =105
                        ZIndex: =3

                    lblPaymentAmountLabel_6 As label:
                        FontWeight: =FontWeight.Semibold
                        Size: =_VarGblAppFonts.Size.UpperMedium
                        Text: ="Amount"
                        Width: =230
                        X: =45
                        Y: =110
                        ZIndex: =4

                Group13_1 As group:
                    Height: =5
                    Width: =5
                    X: =60
                    Y: =-772
                    ZIndex: =23

                    lblPaymentAmountLabel_7 As label:
                        FontWeight: =FontWeight.Semibold
                        Size: =_VarGblAppFonts.Size.UpperMedium
                        Text: ="Amount"
                        Visible: |-
                            =If(
                                paymentData.Customer.'Mode Of Payment' = 'Payment Type (choice)'.CASH || paymentData.Customer.'Mode Of Payment' = 'Payment Type (choice)'.CREDIT,
                                true,
                                false
                            )
                        Width: =230
                        X: =40
                        Y: =428
                        ZIndex: =1

                    txtPaymentAmountValue_7 As text:
                        AccessibleLabel: ="txtPaymentAmountValue_1"
                        BorderColor: =_VarGblAppColors.BisleriBlue
                        Default: |-
                            =If(
                                paymentData.Customer.'Mode Of Payment' = 'Payment Type (choice)'.CREDIT,
                                Text(
                                    paymentData.'Net Amount',
                                    "[$-hi-IN]##,##,##,###",
                                    "hi-IN"
                                ),
                                ""
                            )
                        DisplayMode: =If(paymentData.Customer.'Mode Of Payment' = 'Payment Type (choice)'.CREDIT, DisplayMode.View, DisplayMode.Edit)
                        FocusedBorderThickness: =2
                        Format: =TextFormat.Number
                        Height: =45
                        HintText: ="Enter Amount"
                        HoverBorderColor: =_VarGblAppColors.BisleriBlue
                        HoverFill: =ColorFade(_VarGblAppColors.BisleriBlue, 80%)
                        OnChange: |-
                            =If(
                                Value(Self.Text) < Value(
                                    Text(
                                        ((Sum(
                                            colCartItems,
                                            discountedPrice
                                        ) * ((Sum(
                                            colCartItems,
                                            tax
                                        )) * 0.01)) + Sum(
                                            colCartItems,
                                            discountedPrice
                                        ) + Sum(
                                            colCartItems,
                                            emptyJarValue
                                        )),
                                        "[$-hi-IN]##,##,##,###",
                                        "hi-IN"
                                    )
                                ) || Value(Self.Text) > Value(
                                    Text(
                                        ((Sum(
                                            colCartItems,
                                            discountedPrice
                                        ) * ((Sum(
                                            colCartItems,
                                            tax
                                        )) * 0.01)) + Sum(
                                            colCartItems,
                                            discountedPrice
                                        ) + Sum(
                                            colCartItems,
                                            emptyJarValue
                                        )),
                                        "[$-hi-IN]##,##,##,###",
                                        "hi-IN"
                                    )
                                ),
                                Notify(
                                    "Please enter correct amount",
                                    NotificationType.Error,
                                    2000
                                )
                            )
                        Size: =_VarGblAppFonts.Size.UpperMedium
                        Visible: |-
                            =If(
                                paymentData.Customer.'Mode Of Payment' = 'Payment Type (choice)'.CASH || paymentData.Customer.'Mode Of Payment' = 'Payment Type (choice)'.CREDIT,
                                true,
                                false
                            )
                        Width: =230
                        X: =352
                        Y: =425
                        ZIndex: =2

                    lblPaymentRemainingAmountValue_3 As label:
                        Size: =_VarGblAppFonts.Size.Title
                        Text: |-
                            =/*Concatenate(
                                "â‚¹",
                                Text(
                                    (((Sum(
                                        colCartItems,
                                        discountedPrice
                                    ) * 0.18) + Sum(
                                        colCartItems,
                                        discountedPrice
                                    ) + Sum(
                                        colCartItems,
                                        emptyJarValue
                                    )) - txtPaymentAmountValue_2.Text),
                                    "[$-hi-IN]##,##,##,###",
                                    "hi-IN"
                                )
                            )*/
                            Concatenate(
                                "â‚¹",
                                Text(
                                    (((Sum(
                                        colCartItems,
                                        discountedPrice
                                    ) * ((Sum(
                                        colCartItems,
                                        tax
                                    )) * 0.01)) + Sum(
                                        colCartItems,
                                        discountedPrice
                                    ) + Sum(
                                        colCartItems,
                                        emptyJarValue
                                    )) - txtPaymentAmountValue_7.Text),
                                    "[$-hi-IN]##,##,##,###",
                                    "hi-IN"
                                )
                            )
                        Visible: |-
                            =If(
                                paymentData.Customer.'Mode Of Payment' = 'Payment Type (choice)'.CASH || paymentData.Customer.'Mode Of Payment' = 'Payment Type (choice)'.CREDIT,
                                true,
                                false
                            )
                        Width: =217
                        X: =352
                        Y: =478
                        ZIndex: =3

                    lblPaymentRemainingAmount_3 As label:
                        FontWeight: =FontWeight.Semibold
                        Size: =_VarGblAppFonts.Size.UpperMedium
                        Text: ="Remaining Amount"
                        Visible: |-
                            =If(
                                paymentData.Customer.'Mode Of Payment' = 'Payment Type (choice)'.CASH || paymentData.Customer.'Mode Of Payment' = 'Payment Type (choice)'.CREDIT,
                                true,
                                false
                            )
                        Width: =267
                        X: =40
                        Y: =478
                        ZIndex: =4

                    lblPaymentDate_4 As label:
                        FontWeight: =FontWeight.Semibold
                        Size: =_VarGblAppFonts.Size.UpperMedium
                        Text: ="Date"
                        Visible: |-
                            =If(
                                paymentData.Customer.'Mode Of Payment' = 'Payment Type (choice)'.CASH || paymentData.Customer.'Mode Of Payment' = 'Payment Type (choice)'.CREDIT,
                                true,
                                false
                            )
                        Width: =230
                        X: =40
                        Y: =328
                        ZIndex: =7

                    lblPaymentDateValue_4 As label:
                        Color: =_VarGblAppColors.PrimaryText
                        FontWeight: =FontWeight.Bold
                        Size: =_VarGblAppFonts.Size.UpperMedium
                        Text: =Text(DateValue(Today()), "mmm dd, yyyy")
                        Visible: |-
                            =If(
                                paymentData.Customer.'Mode Of Payment' = 'Payment Type (choice)'.CASH || paymentData.Customer.'Mode Of Payment' = 'Payment Type (choice)'.CREDIT,
                                true,
                                false
                            )
                        Width: =217
                        X: =352
                        Y: =328
                        ZIndex: =17

                    lblPaymentDate_5 As label:
                        FontWeight: =FontWeight.Semibold
                        Size: =_VarGblAppFonts.Size.UpperMedium
                        Text: ="Total Invoice Value"
                        Visible: |-
                            =If(
                                paymentData.Customer.'Mode Of Payment' = 'Payment Type (choice)'.CASH || paymentData.Customer.'Mode Of Payment' = 'Payment Type (choice)'.CREDIT,
                                true,
                                false
                            )
                        Width: =230
                        X: =40
                        Y: =375
                        ZIndex: =20

                    lblPaymentDateValue_5 As label:
                        Color: =_VarGblAppColors.PrimaryText
                        FontWeight: =FontWeight.Bold
                        Size: =_VarGblAppFonts.Size.UpperMedium
                        Text: |-
                            =/*Concatenate(
                                "â‚¹",
                                Text(
                                    ((Sum(
                                        colCartItems,
                                        discountedPrice
                                    ) * ((Sum(
                                                colCartItems,
                                                tax
                                            )) * 0.01)) + Sum(
                                        colCartItems,
                                        discountedPrice
                                    ) + Sum(
                                        colCartItems,
                                        emptyJarValue
                                    )),
                                    "[$-hi-IN]##,##,##,###",
                                    "hi-IN"
                                )
                            )*/
                            Concatenate(
                                "â‚¹",
                                Text(
                                    paymentData.'Net Amount',
                                    "[$-hi-IN]##,##,##,###",
                                    "hi-IN"
                                )
                            )
                        Visible: |-
                            =If(
                                paymentData.Customer.'Mode Of Payment' = 'Payment Type (choice)'.CASH || paymentData.Customer.'Mode Of Payment' = 'Payment Type (choice)'.CREDIT,
                                true,
                                false
                            )
                        Width: =217
                        X: =352
                        Y: =375
                        ZIndex: =21

            Gallery1_4 As gallery.galleryVertical:
                AccessibleLabel: ="Gallery1_1"
                Height: =447
                Items: ='Item Masters'
                Layout: =Layout.Vertical
                TabIndex: =0
                TemplateSize: =133
                Visible: =false
                Y: =110
                ZIndex: =2

                HtmlText1_3 As htmlViewer:
                    Height: =140
                    HtmlText: |-
                        ="<div style='border-radius:15px 15px 15px 15px; background-color:#E6F7F6; width:620px; height:300px'></div>"
                    OnSelect: =Select(Parent)
                    Width: =630
                    ZIndex: =1

                Label4_57 As label:
                    Align: =Align.Justify
                    Color: =_VarGblAppColors.PrimaryText
                    FontWeight: =FontWeight.Semibold
                    Height: =76
                    OnSelect: =Select(Parent)
                    Size: =_VarGblAppFonts.Size.Tiny
                    Text: =ThisItem.Description
                    Tooltip: =ThisItem.Description
                    VerticalAlign: =VerticalAlign.Top
                    Width: =125
                    X: =10
                    Y: =57
                    ZIndex: =2

                Rectangle2_3 As rectangle:
                    BorderColor: =_VarGblAppColors.SecondaryText
                    BorderStyle: =BorderStyle.Dotted
                    BorderThickness: =0.5
                    Fill: =_VarGblAppColors.SecondaryText
                    Height: =0.5
                    OnSelect: =Select(Parent)
                    Width: =600
                    X: =10
                    Y: =55
                    ZIndex: =3

                Label4_49 As label:
                    Color: =_VarGblAppColors.BisleriBlue
                    FontWeight: =FontWeight.Semibold
                    Height: =30
                    OnSelect: =Select(Parent)
                    Size: =_VarGblAppFonts.Size.Tiny
                    Text: ="Cases"
                    Width: =70
                    X: =135
                    Y: =12
                    ZIndex: =4

                Label4_50 As label:
                    Color: =_VarGblAppColors.BisleriBlue
                    FontWeight: =FontWeight.Semibold
                    Height: =30
                    OnSelect: =Select(Parent)
                    Size: =_VarGblAppFonts.Size.Tiny
                    Text: ="PCs"
                    Width: =57
                    X: =186
                    Y: =12
                    ZIndex: =7

                Label4_51 As label:
                    Color: =_VarGblAppColors.BisleriBlue
                    FontWeight: =FontWeight.Semibold
                    Height: =30
                    OnSelect: =Select(Parent)
                    Size: =_VarGblAppFonts.Size.Tiny
                    Text: ="E. Jars"
                    Width: =70
                    X: =225
                    Y: =12
                    ZIndex: =8

                Label4_55 As label:
                    Color: =_VarGblAppColors.BisleriBlue
                    FontWeight: =FontWeight.Semibold
                    Height: =34
                    OnSelect: =Select(Parent)
                    Size: =_VarGblAppFonts.Size.Tiny
                    Text: |-
                        ="Total Price:"
                    Width: =53
                    X: =479
                    Y: =12
                    ZIndex: =9

                Label4_64 As label:
                    Color: =_VarGblAppColors.HeaderBg
                    FontWeight: =FontWeight.Semibold
                    Height: =30
                    OnSelect: =Select(Parent)
                    Size: =_VarGblAppFonts.Size.Tiny
                    Text: ="â‚¹402.50"
                    Width: =76
                    X: =479
                    Y: =90
                    ZIndex: =10

                Label4_58 As label:
                    Color: =_VarGblAppColors.PrimaryText
                    FontWeight: =FontWeight.Semibold
                    Height: =30
                    OnSelect: =Select(Parent)
                    Size: =_VarGblAppFonts.Size.Tiny
                    Text: ="2"
                    Width: =51
                    X: =135
                    Y: =90
                    ZIndex: =11

                Label4_59 As label:
                    Color: =_VarGblAppColors.PrimaryText
                    FontWeight: =FontWeight.Semibold
                    Height: =30
                    OnSelect: =Select(Parent)
                    Size: =_VarGblAppFonts.Size.Tiny
                    Text: ="6"
                    Width: =46
                    X: =189
                    Y: =90
                    ZIndex: =14

                Label4_60 As label:
                    Color: =_VarGblAppColors.PrimaryText
                    FontWeight: =FontWeight.Semibold
                    Height: =30
                    OnSelect: =Select(Parent)
                    Size: =_VarGblAppFonts.Size.Tiny
                    Text: ="0"
                    Width: =57
                    X: =235
                    Y: =90
                    ZIndex: =15

                Label4_52 As label:
                    Color: =_VarGblAppColors.BisleriBlue
                    FontWeight: =FontWeight.Semibold
                    Height: =30
                    OnSelect: =Select(Parent)
                    Size: =_VarGblAppFonts.Size.Tiny
                    Text: ="Disc."
                    Width: =70
                    X: =296
                    Y: =12
                    ZIndex: =16

                Label4_53 As label:
                    Color: =_VarGblAppColors.BisleriBlue
                    FontWeight: =FontWeight.Semibold
                    Height: =30
                    OnSelect: =Select(Parent)
                    Size: =_VarGblAppFonts.Size.Tiny
                    Text: ="GST"
                    Width: =57
                    X: =362
                    Y: =12
                    ZIndex: =17

                Label4_54 As label:
                    Color: =_VarGblAppColors.BisleriBlue
                    FontWeight: =FontWeight.Semibold
                    Height: =30
                    OnSelect: =Select(Parent)
                    Size: =_VarGblAppFonts.Size.Tiny
                    Text: ="Price"
                    Width: =70
                    X: =419
                    Y: =12
                    ZIndex: =18

                Label4_61 As label:
                    Color: =_VarGblAppColors.PrimaryText
                    FontWeight: =FontWeight.Semibold
                    Height: =30
                    OnSelect: =Select(Parent)
                    Size: =_VarGblAppFonts.Size.Tiny
                    Text: ="0.0"
                    Width: =54
                    X: =298
                    Y: =90
                    ZIndex: =19

                Label4_62 As label:
                    Color: =_VarGblAppColors.PrimaryText
                    FontWeight: =FontWeight.Semibold
                    Height: =30
                    OnSelect: =Select(Parent)
                    Size: =_VarGblAppFonts.Size.Tiny
                    Text: ="18.0"
                    Width: =52
                    X: =362
                    Y: =90
                    ZIndex: =20

                Label4_63 As label:
                    Color: =_VarGblAppColors.PrimaryText
                    FontWeight: =FontWeight.Semibold
                    Height: =30
                    OnSelect: =Select(Parent)
                    Size: =_VarGblAppFonts.Size.Tiny
                    Text: ="â‚¹161.00"
                    Width: =69
                    X: =417
                    Y: =90
                    ZIndex: =21

                Label4_56 As label:
                    Color: =_VarGblAppColors.BisleriBlue
                    FontWeight: =FontWeight.Semibold
                    Height: =31
                    OnSelect: =Select(Parent)
                    Size: =_VarGblAppFonts.Size.Tiny
                    Text: |-
                        ="Invoice Price:"
                    Width: =69
                    X: =544
                    Y: =12
                    ZIndex: =22

                Label4_65 As label:
                    Color: =_VarGblAppColors.HeaderBg
                    FontWeight: =FontWeight.Semibold
                    Height: =30
                    OnSelect: =Select(Parent)
                    Size: =_VarGblAppFonts.Size.Tiny
                    Text: ="â‚¹402.50"
                    Width: =76
                    X: =544
                    Y: =90
                    ZIndex: =23

                Label4_48 As label:
                    Color: =_VarGblAppColors.BisleriBlue
                    FontWeight: =FontWeight.Semibold
                    Height: =30
                    OnSelect: =Select(Parent)
                    Size: =_VarGblAppFonts.Size.Tiny
                    Text: ="Product"
                    Width: =92
                    X: =15
                    Y: =12
                    ZIndex: =24

            contHomeOrdersUpperVertical_3 As groupContainer.verticalAutoLayoutContainer:
                Height: =contHomeOrdersUpper_3.Height
                LayoutDirection: =LayoutDirection.Vertical
                LayoutMode: =LayoutMode.Auto
                Width: =Parent.Width
                Y: =11
                ZIndex: =3

                contHomeOrdersUpper_3 As groupContainer.manualLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    FillPortions: =0
                    Height: =contHomeOrdersLowerVertical_3.Height
                    LayoutMinHeight: =112
                    LayoutMinWidth: =250
                    Width: =Parent.Width
                    ZIndex: =1

                    contHomeOrdersLowerVertical_3 As groupContainer.verticalAutoLayoutContainer:
                        Height: =contHomeOrdersHeading_3.Height + contHomeOrdersData_3.Height
                        LayoutDirection: =LayoutDirection.Vertical
                        LayoutMode: =LayoutMode.Auto
                        LayoutOverflowX: =LayoutOverflow.Scroll
                        Width: =Parent.Width
                        Y: =6
                        ZIndex: =1

                        contHomeOrdersHeading_3 As groupContainer.manualLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            FillPortions: =0
                            Height: =60
                            LayoutMinHeight: =70
                            LayoutMinWidth: =750
                            Width: =Parent.Width
                            ZIndex: =1

                            btnNewOrderHeaderProduct_22 As button:
                                DisabledBorderColor: |-
                                    =//RGBA(166, 166, 166, 1)
                                    _VarGblAppColors.BisleriBlue
                                DisabledColor: |-
                                    =//RGBA(166, 166, 166, 1)
                                    _VarGblAppColors.LightText
                                DisabledFill: |-
                                    =//RGBA(244, 244, 244, 1)
                                    _VarGblAppColors.BisleriBlue
                                DisplayMode: =DisplayMode.Disabled
                                Height: =50
                                OnSelect: =
                                RadiusBottomLeft: =5
                                RadiusBottomRight: =5
                                RadiusTopLeft: =5
                                RadiusTopRight: =5
                                Size: =_VarGblAppFonts.Size.Tiny
                                Text: ="Product"
                                Width: =95
                                X: =5
                                Y: =5
                                ZIndex: =1

                            btnNewOrderHeaderCases_28 As button:
                                DisabledBorderColor: |-
                                    =//RGBA(166, 166, 166, 1)
                                    _VarGblAppColors.BisleriBlue
                                DisabledColor: |-
                                    =//RGBA(166, 166, 166, 1)
                                    _VarGblAppColors.LightText
                                DisabledFill: |-
                                    =//RGBA(244, 244, 244, 1)
                                    _VarGblAppColors.BisleriBlue
                                DisplayMode: =DisplayMode.Disabled
                                Height: =50
                                OnSelect: =
                                RadiusBottomLeft: =5
                                RadiusBottomRight: =5
                                RadiusTopLeft: =5
                                RadiusTopRight: =5
                                Size: =_VarGblAppFonts.Size.Tiny
                                Text: ="Cases"
                                Width: =62
                                X: =btnNewOrderHeaderProduct_22.X + btnNewOrderHeaderProduct_22.Width +5
                                Y: =5
                                ZIndex: =2

                            btnNewOrderHeaderPcs_41 As button:
                                DisabledBorderColor: |-
                                    =//RGBA(166, 166, 166, 1)
                                    _VarGblAppColors.BisleriBlue
                                DisabledColor: |-
                                    =//RGBA(166, 166, 166, 1)
                                    _VarGblAppColors.LightText
                                DisabledFill: |-
                                    =//RGBA(244, 244, 244, 1)
                                    _VarGblAppColors.BisleriBlue
                                DisplayMode: =DisplayMode.Disabled
                                Height: =50
                                OnSelect: =
                                RadiusBottomLeft: =5
                                RadiusBottomRight: =5
                                RadiusTopLeft: =5
                                RadiusTopRight: =5
                                Size: =_VarGblAppFonts.Size.Tiny
                                Text: ="Pcs"
                                Width: =62
                                X: =btnNewOrderHeaderCases_28.X+btnNewOrderHeaderCases_28.Width+5
                                Y: =5
                                ZIndex: =3

                            btnNewOrderHeaderCases_29 As button:
                                DisabledBorderColor: |-
                                    =//RGBA(166, 166, 166, 1)
                                    _VarGblAppColors.BisleriBlue
                                DisabledColor: |-
                                    =//RGBA(166, 166, 166, 1)
                                    _VarGblAppColors.LightText
                                DisabledFill: |-
                                    =//RGBA(244, 244, 244, 1)
                                    _VarGblAppColors.BisleriBlue
                                DisplayMode: =DisplayMode.Disabled
                                Height: =50
                                OnSelect: =
                                RadiusBottomLeft: =5
                                RadiusBottomRight: =5
                                RadiusTopLeft: =5
                                RadiusTopRight: =5
                                Size: =_VarGblAppFonts.Size.Tiny
                                Text: ="E. Jars"
                                Width: =62
                                X: =btnNewOrderHeaderPcs_41.X+btnNewOrderHeaderPcs_41.Width+5
                                Y: =5
                                ZIndex: =4

                            btnNewOrderHeaderCases_30 As button:
                                DisabledBorderColor: |-
                                    =//RGBA(166, 166, 166, 1)
                                    _VarGblAppColors.BisleriBlue
                                DisabledColor: |-
                                    =//RGBA(166, 166, 166, 1)
                                    _VarGblAppColors.LightText
                                DisabledFill: |-
                                    =//RGBA(244, 244, 244, 1)
                                    _VarGblAppColors.BisleriBlue
                                DisplayMode: =DisplayMode.Disabled
                                Height: =50
                                OnSelect: =
                                RadiusBottomLeft: =5
                                RadiusBottomRight: =5
                                RadiusTopLeft: =5
                                RadiusTopRight: =5
                                Size: =_VarGblAppFonts.Size.Tiny
                                Text: ="Disc."
                                Width: =62
                                X: =btnNewOrderHeaderCases_29.X+btnNewOrderHeaderCases_29.Width+5
                                Y: =5
                                ZIndex: =5

                            btnNewOrderHeaderCases_31 As button:
                                DisabledBorderColor: |-
                                    =//RGBA(166, 166, 166, 1)
                                    _VarGblAppColors.BisleriBlue
                                DisabledColor: |-
                                    =//RGBA(166, 166, 166, 1)
                                    _VarGblAppColors.LightText
                                DisabledFill: |-
                                    =//RGBA(244, 244, 244, 1)
                                    _VarGblAppColors.BisleriBlue
                                DisplayMode: =DisplayMode.Disabled
                                Height: =50
                                OnSelect: =
                                RadiusBottomLeft: =5
                                RadiusBottomRight: =5
                                RadiusTopLeft: =5
                                RadiusTopRight: =5
                                Size: =_VarGblAppFonts.Size.Tiny
                                Text: ="Tax"
                                Width: =62
                                X: =btnNewOrderHeaderCases_30.X+btnNewOrderHeaderCases_30.Width+5
                                Y: =5
                                ZIndex: =6

                            btnNewOrderHeaderCases_32 As button:
                                DisabledBorderColor: |-
                                    =//RGBA(166, 166, 166, 1)
                                    _VarGblAppColors.BisleriBlue
                                DisabledColor: |-
                                    =//RGBA(166, 166, 166, 1)
                                    _VarGblAppColors.LightText
                                DisabledFill: |-
                                    =//RGBA(244, 244, 244, 1)
                                    _VarGblAppColors.BisleriBlue
                                DisplayMode: =DisplayMode.Disabled
                                Height: =50
                                OnSelect: =
                                RadiusBottomLeft: =5
                                RadiusBottomRight: =5
                                RadiusTopLeft: =5
                                RadiusTopRight: =5
                                Size: =_VarGblAppFonts.Size.Tiny
                                Text: ="Price"
                                Width: =62
                                X: =btnNewOrderHeaderCases_31.X+btnNewOrderHeaderCases_31.Width+5
                                Y: =5
                                ZIndex: =7

                            btnNewOrderHeaderCases_33 As button:
                                DisabledBorderColor: |-
                                    =//RGBA(166, 166, 166, 1)
                                    _VarGblAppColors.BisleriBlue
                                DisabledColor: |-
                                    =//RGBA(166, 166, 166, 1)
                                    _VarGblAppColors.LightText
                                DisabledFill: |-
                                    =//RGBA(244, 244, 244, 1)
                                    _VarGblAppColors.BisleriBlue
                                DisplayMode: =DisplayMode.Disabled
                                Height: =50
                                OnSelect: =
                                RadiusBottomLeft: =5
                                RadiusBottomRight: =5
                                RadiusTopLeft: =5
                                RadiusTopRight: =5
                                Size: =_VarGblAppFonts.Size.Tiny
                                Text: ="Total Price"
                                Width: =62
                                X: =btnNewOrderHeaderCases_32.X+btnNewOrderHeaderCases_32.Width+5
                                Y: =5
                                ZIndex: =8

                            btnNewOrderHeaderCases_34 As button:
                                DisabledBorderColor: |-
                                    =//RGBA(166, 166, 166, 1)
                                    _VarGblAppColors.BisleriBlue
                                DisabledColor: |-
                                    =//RGBA(166, 166, 166, 1)
                                    _VarGblAppColors.LightText
                                DisabledFill: |-
                                    =//RGBA(244, 244, 244, 1)
                                    _VarGblAppColors.BisleriBlue
                                DisplayMode: =DisplayMode.Disabled
                                Height: =50
                                OnSelect: =
                                RadiusBottomLeft: =5
                                RadiusBottomRight: =5
                                RadiusTopLeft: =5
                                RadiusTopRight: =5
                                Size: =_VarGblAppFonts.Size.Tiny
                                Text: ="Inv. Price"
                                Width: =62
                                X: =btnNewOrderHeaderCases_33.X+btnNewOrderHeaderCases_33.Width+5
                                Y: =5
                                ZIndex: =9

                        contHomeOrdersData_3 As groupContainer.horizontalAutoLayoutContainer:
                            AlignInContainer: =AlignInContainer.SetByContainer
                            FillPortions: =0
                            Height: =galHomeOrdersData_3.Height
                            LayoutMinHeight: =570
                            LayoutMinWidth: =640
                            LayoutMode: =LayoutMode.Auto
                            Width: =Parent.Width
                            ZIndex: =2

                            galHomeOrdersData_3 As gallery.galleryVertical:
                                AccessibleLabel: ="galHomeOrdersData"
                                AlignInContainer: =AlignInContainer.SetByContainer
                                Fill: |-
                                    =//RGBA(0, 0, 0, 0)
                                    _VarGblAppColors.LightText
                                FillPortions: =0
                                FocusedBorderColor: =Color.Transparent
                                FocusedBorderThickness: =0.2
                                Height: =(galHomeOrdersData_3.TemplateHeight * CountRows(galHomeOrdersData_3.AllItems)) + 30
                                Items: =paymentLines
                                Layout: =Layout.Vertical
                                LayoutMinHeight: =413
                                LayoutMinWidth: =1200
                                ShowScrollbar: =false
                                TabIndex: =0
                                TemplateSize: =60
                                Width: =Parent.Width
                                ZIndex: =1

                                btnHomeOrdersBackground_3 As button:
                                    DisabledBorderColor: =_VarGblAppColors.BisleriBlue
                                    DisabledFill: |-
                                        =//RGBA(244, 244, 244, 1)
                                        ColorFade( _VarGblAppColors.BisleriBlue, 80%)
                                    DisplayMode: =DisplayMode.Disabled
                                    Height: =58
                                    OnSelect: =Select(Parent)
                                    Size: =24
                                    Text: =""
                                    Width: =630
                                    ZIndex: =1

                                lblHomeOrdersCustomer_3 As label:
                                    Align: =Align.Center
                                    Fill: |-
                                        =RGBA(0, 0, 0, 0)
                                        //_VarGblAppColors.LightText
                                    Height: =58
                                    OnSelect: =Select(Parent)
                                    Size: =8
                                    Text: =LookUp('SKU Masters', 'SKU Master' = ThisItem.'Item SKU'.'SKU Master').'Name (zx_namess)'
                                    Width: =100
                                    ZIndex: =2

                                lblHomeOrdersMode_8 As label:
                                    Align: =Align.Center
                                    Fill: |-
                                        =RGBA(0, 0, 0, 0)
                                        //_VarGblAppColors.LightText
                                    Height: =50
                                    OnSelect: =Select(Parent)
                                    Size: =_VarGblAppFonts.Size.Tiny
                                    Text: =ThisItem.'Total Discount Amount'
                                    Width: =65
                                    X: =btnNewOrderHeaderCases_30.X
                                    Y: =4
                                    ZIndex: =6

                                lblHomeOrdersMode_9 As label:
                                    Align: =Align.Center
                                    Fill: |-
                                        =RGBA(0, 0, 0, 0)
                                        //_VarGblAppColors.LightText
                                    Height: =50
                                    OnSelect: =Select(Parent)
                                    Size: =_VarGblAppFonts.Size.Tiny
                                    Text: |-
                                        =Concatenate(
                                            "â‚¹",
                                            Text(
                                                ThisItem.'Tax Amount',
                                                "[$-hi-IN]##,##,##,###",
                                                "hi-IN"
                                            )
                                        )
                                    Width: =65
                                    X: =btnNewOrderHeaderCases_31.X
                                    Y: =4
                                    ZIndex: =7

                                lblHomeOrdersMode_10 As label:
                                    Align: =Align.Center
                                    Fill: |-
                                        =RGBA(0, 0, 0, 0)
                                        //_VarGblAppColors.LightText
                                    Height: =50
                                    OnSelect: =Select(Parent)
                                    Size: =_VarGblAppFonts.Size.Tiny
                                    Text: |-
                                        =Concatenate(
                                            "â‚¹",
                                            Text(
                                                ThisItem.'Total Amount' ,
                                                "[$-hi-IN]##,##,##,###",
                                                "hi-IN"
                                            )
                                        )
                                    Width: =65
                                    X: =btnNewOrderHeaderCases_32.X
                                    Y: =4
                                    ZIndex: =8

                                lblHomeOrdersMode_11 As label:
                                    Align: =Align.Center
                                    Fill: |-
                                        =RGBA(0, 0, 0, 0)
                                        //_VarGblAppColors.LightText
                                    Height: =50
                                    OnSelect: =Select(Parent)
                                    Size: =_VarGblAppFonts.Size.Tiny
                                    Text: |-
                                        =Concatenate(
                                            "â‚¹",
                                            Text(
                                                (ThisItem.'Total Amount' - ThisItem.'Total Discount Amount' ),
                                                "[$-hi-IN]##,##,##,###",
                                                "hi-IN"
                                            )
                                        )
                                    Width: =65
                                    X: =btnNewOrderHeaderCases_33.X
                                    Y: =4
                                    ZIndex: =9

                                lblHomeOrdersMode_12 As label:
                                    Align: =Align.Center
                                    Fill: |-
                                        =RGBA(0, 0, 0, 0)
                                        //_VarGblAppColors.LightText
                                    Height: =50
                                    OnSelect: =Select(Parent)
                                    Size: =_VarGblAppFonts.Size.Tiny
                                    Text: |-
                                        =Concatenate(
                                            "â‚¹",
                                            Text(
                                                ThisItem.'Net Amount',
                                                "[$-hi-IN]##,##,##,###",
                                                "hi-IN"
                                            )
                                        )
                                    Width: =65
                                    X: =btnNewOrderHeaderCases_34.X - 10
                                    Y: =4
                                    ZIndex: =10

                                TextInput1 As text:
                                    AccessibleLabel: ="TextInput1"
                                    Align: =Align.Center
                                    BorderColor: =RGBA(204, 204, 204, 1)
                                    BorderThickness: =1
                                    Default: =ThisItem.Cases
                                    FocusedBorderThickness: =1
                                    Format: =TextFormat.Number
                                    OnSelect: =Select(Parent)
                                    PaddingBottom: =3
                                    PaddingLeft: =3
                                    PaddingRight: =3
                                    PaddingTop: =3
                                    Size: =_VarGblAppFonts.Size.Tiny
                                    Width: =55
                                    X: =105
                                    Y: =10
                                    ZIndex: =12

                                TextInput1_2 As text:
                                    AccessibleLabel: ="TextInput1_2"
                                    Align: =Align.Center
                                    BorderColor: =RGBA(204, 204, 204, 1)
                                    BorderThickness: =1
                                    Default: =ThisItem.PCs
                                    FocusedBorderThickness: =1
                                    Format: =TextFormat.Number
                                    OnSelect: =Select(Parent)
                                    PaddingBottom: =3
                                    PaddingLeft: =3
                                    PaddingRight: =3
                                    PaddingTop: =3
                                    Size: =_VarGblAppFonts.Size.Tiny
                                    Width: =55
                                    X: =172
                                    Y: =10
                                    ZIndex: =13

                                TextInput1_3 As text:
                                    AccessibleLabel: ="TextInput1_3"
                                    Align: =Align.Center
                                    BorderColor: =RGBA(204, 204, 204, 1)
                                    BorderThickness: =1
                                    Default: =ThisItem.'Empty Jars'
                                    FocusedBorderThickness: =1
                                    Format: =TextFormat.Number
                                    OnSelect: =Select(Parent)
                                    PaddingBottom: =3
                                    PaddingLeft: =3
                                    PaddingRight: =3
                                    PaddingTop: =3
                                    Size: =_VarGblAppFonts.Size.Tiny
                                    Width: =55
                                    X: =239
                                    Y: =10
                                    ZIndex: =14

            Container7_1 As groupContainer.manualLayoutContainer:
                Height: =303
                Width: =640
                Y: =contHomeOrdersUpperVertical_3.Y + contHomeOrdersUpperVertical_3.Height+20
                ZIndex: =7

                Group4_1 As group:
                    Height: =5
                    Width: =5
                    X: =-10
                    Y: =-462
                    ZIndex: =8

                    Button4_4 As button:
                        DisplayMode: =DisplayMode.Disabled
                        Height: =188
                        Size: =24
                        Text: =""
                        Width: =540
                        X: =40
                        Y: =14
                        ZIndex: =1

                    Label5_16 As label:
                        Color: =_VarGblAppColors.BisleriBlue
                        FontWeight: =FontWeight.Semibold
                        Height: =45
                        Size: =_VarGblAppFonts.Size.Medium
                        Text: ="Total Qty"
                        Width: =192
                        X: =101
                        Y: =27
                        ZIndex: =2

                    Label5_26 As label:
                        Color: =_VarGblAppColors.BisleriBlue
                        FontWeight: =FontWeight.Semibold
                        Height: =45
                        Size: =_VarGblAppFonts.Size.Medium
                        Text: ="Total Inv Amt"
                        Width: =192
                        X: =101
                        Y: =67
                        ZIndex: =3

                    Label5_28 As label:
                        Color: =_VarGblAppColors.BisleriBlue
                        FontWeight: =FontWeight.Semibold
                        Height: =45
                        Size: =_VarGblAppFonts.Size.Medium
                        Text: ="Total Tax"
                        Width: =192
                        X: =101
                        Y: =112
                        ZIndex: =4

                    Label5_17 As label:
                        FontWeight: =FontWeight.Semibold
                        Height: =45
                        Size: =_VarGblAppFonts.Size.Medium
                        Text: |-
                            =((Sum(
                                paymentLines,
                                Cases
                            )) + (Sum(
                                paymentLines,
                                PCs
                            )))
                        Width: =192
                        X: =308
                        Y: =27
                        ZIndex: =5

                    Label5_27 As label:
                        FontWeight: =FontWeight.Semibold
                        Height: =45
                        Size: =_VarGblAppFonts.Size.Medium
                        Text: |-
                            =Concatenate(
                                "â‚¹",
                                Text(
                                    paymentData.'Net Amount',
                                    "[$-hi-IN]##,##,##,###",
                                    "hi-IN"
                                )
                            )
                        Width: =192
                        X: =308
                        Y: =67
                        ZIndex: =6

                    Label5_29 As label:
                        FontWeight: =FontWeight.Semibold
                        Height: =45
                        Size: =_VarGblAppFonts.Size.Medium
                        Text: |-
                            =Concatenate(
                                "â‚¹",
                                Text(
                                    paymentData.'Total Tax Amount' ,
                                    "[$-hi-IN]##,##,##,###",
                                    "hi-IN"
                                )
                            )
                        Width: =192
                        X: =308
                        Y: =112
                        ZIndex: =7

                Label5_30 As label:
                    Color: =_VarGblAppColors.BisleriBlue
                    FontWeight: =FontWeight.Semibold
                    Height: =45
                    Size: =_VarGblAppFonts.Size.Medium
                    Text: ="Discount"
                    Width: =192
                    X: =101
                    Y: =153
                    ZIndex: =9

                Label5_31 As label:
                    FontWeight: =FontWeight.Semibold
                    Height: =45
                    Size: =_VarGblAppFonts.Size.Medium
                    Text: |-
                        =Concatenate(
                            "â‚¹",
                            Text(
                                paymentData.'Total Discount Amount',
                                "[$-hi-IN]##,##,##,###",
                                "hi-IN"
                            )
                        )
                    Width: =192
                    X: =308
                    Y: =153
                    ZIndex: =10

                grpPaymentButtons_5 As group:
                    Height: =5
                    Width: =5
                    X: =-10
                    Y: =-462
                    ZIndex: =13

                    btnPaymentCancel_5 As button:
                        Fill: =_VarGblAppColors.BisleriBlue
                        FocusedBorderThickness: =2
                        Height: =50
                        HoverFill: =ColorFade(_VarGblAppColors.BisleriBlue, -20%)
                        OnSelect: =Navigate('Visit Screen');
                        Size: =_VarGblAppFonts.Size.UpperMedium
                        Text: ="Cancel"
                        Width: =150
                        X: =308
                        Y: =238
                        ZIndex: =11

                    btnPaymentConfirm_7 As button:
                        DisplayMode: |-
                            =/*If(
                                OrderData.'Mode Of Payment' = 'Payment Type (choice)'.Coupon,
                                If(
                                    Value(txtPaymentAmountValue_4.Text) < Value(
                                        Text(
                                            ((Sum(
                                                colCartItems,
                                                discountedPrice
                                            ) * ((Sum(
                                                colCartItems,
                                                tax
                                            )) * 0.01)) + Sum(
                                                colCartItems,
                                                discountedPrice
                                            ) + Sum(
                                                colCartItems,
                                                emptyJarValue
                                            )),
                                            "[$-hi-IN]##,##,##,###",
                                            "hi-IN"
                                        )
                                    ) || Value(txtPaymentAmountValue_4.Text) > Value(
                                        Text(
                                            ((Sum(
                                                colCartItems,
                                                discountedPrice
                                            ) * ((Sum(
                                                colCartItems,
                                                tax
                                            )) * 0.01)) + Sum(
                                                colCartItems,
                                                discountedPrice
                                            ) + Sum(
                                                colCartItems,
                                                emptyJarValue
                                            )),
                                            "[$-hi-IN]##,##,##,###",
                                            "hi-IN"
                                        )
                                    ),
                                    DisplayMode.Disabled,
                                    DisplayMode.Edit
                                ),
                                OrderData.'Mode Of Payment' = 'Payment Type (choice)'.Cash || OrderData.'Mode Of Payment' = 'Payment Type (choice)'.Credit,
                                If(
                                    Value(txtPaymentAmountValue_2.Text) < Value(
                                        Text(
                                            ((Sum(
                                                colCartItems,
                                                discountedPrice
                                            ) * ((Sum(
                                                colCartItems,
                                                tax
                                            )) * 0.01)) + Sum(
                                                colCartItems,
                                                discountedPrice
                                            ) + Sum(
                                                colCartItems,
                                                emptyJarValue
                                            )),
                                            "[$-hi-IN]##,##,##,###",
                                            "hi-IN"
                                        )
                                    ) || Value(txtPaymentAmountValue_2.Text) > Value(
                                        Text(
                                            ((Sum(
                                                colCartItems,
                                                discountedPrice
                                            ) * ((Sum(
                                                colCartItems,
                                                tax
                                            )) * 0.01)) + Sum(
                                                colCartItems,
                                                discountedPrice
                                            ) + Sum(
                                                colCartItems,
                                                emptyJarValue
                                            )),
                                            "[$-hi-IN]##,##,##,###",
                                            "hi-IN"
                                        )
                                    ),
                                    DisplayMode.Disabled,
                                    DisplayMode.Edit
                                )
                            )*/
                            DisplayMode.Edit
                        Fill: =_VarGblAppColors.BisleriBlue
                        FocusedBorderThickness: =2
                        Height: =50
                        HoverFill: =ColorFade(_VarGblAppColors.BisleriBlue, -20%)
                        OnSelect: |-
                            =/////////////////////////////////////////////////////////_______________STOCK UPDATION FOR CASES
                            ClearCollect(
                                CurrentQtyCases,
                                First(colCartItems).qtyCases
                            );
                            Clear(StockLinesForFIFO);
                            ForAll(
                                Filter(
                                    colCartItems,
                                    schemeOrder = false
                                ) As OneProductItem,
                                Collect(
                                    StockLinesForFIFO,
                                    Sort(
                                        Filter(
                                            Filter(
                                                'Stock Transfer Lines',
                                                ('Transfer Order No'.'Stock Transfer Header' exactin varGatePassHeader.headerGUID) && (SKU.'SKU Master' = OneProductItem.productId)
                                            ),
                                            'Created On' >= Today()
                                        ),
                                        'Manufacturing date',
                                        SortOrder.Ascending
                                    )
                                );
                                Patch(
                                    CurrentQtyCases,
                                    First(CurrentQtyCases),
                                    {Value: OneProductItem.qtyCases}
                                );
                                ForAll(
                                    StockLinesForFIFO As OneFifoItem,
                                    If(
                                        First(CurrentQtyCases).Value > 0 && OneFifoItem.'Remaining Qty Cases' > 0 && OneFifoItem.SKU.'SKU Master' = OneProductItem.productId,
                                        //Checking First condition if the qty is less then remainining of old_______________________________________________
                                        If(
                                            (First(CurrentQtyCases).Value <= OneFifoItem.'Remaining Qty Cases'),
                                            //////______________CART MANIPULATION
                                            If(
                                                !IsBlank(
                                                    LookUp(
                                                        colManipulatedCartItems,
                                                        skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date' && scheme = false
                                                    )
                                                ),
                                                Patch(
                                                    colManipulatedCartItems,
                                                    LookUp(
                                                        colManipulatedCartItems,
                                                        skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date' && scheme = false
                                                    ),
                                                    {
                                                        qtyCases: ((LookUp(
                                                            colManipulatedCartItems,
                                                            skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date'
                                                        ).qtyCases) + (First(CurrentQtyCases).Value)),
                                                        totalCasePriceWithoutDisc: OneProductItem.caseUnitPrice * (((LookUp(
                                                            colManipulatedCartItems,
                                                            skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date'
                                                        ).qtyCases) + (First(CurrentQtyCases).Value)))
                                                    }
                                                ),
                                                Collect(
                                                    colManipulatedCartItems,
                                                    {
                                                        cartItem: OneProductItem,
                                                        manDate: OneFifoItem.'Manufacturing date',
                                                        skuId: OneFifoItem.SKU.'SKU Master',
                                                        qtyCases: First(CurrentQtyCases).Value,
                                                        qtyPcs: 0,
                                                        scheme: false,
                                                        caseUnitPrice: OneProductItem.caseUnitPrice,
                                                        pcsUnitPrice: OneProductItem.pcsUnitPrice,
                                                        totalCasePriceWithoutDisc: OneProductItem.caseUnitPrice * First(CurrentQtyCases).Value,
                                                        totalPcsPriceWithoutDisc: 0,
                                                        TotalTax: OneProductItem.tax
                                                    }
                                                );
                                            );
                                            ///////________________UPDATE STOCK IN STOCK TRANSFER LINES
                            Patch(
                                                'Stock Transfer Lines',
                                                LookUp(
                                                    'Stock Transfer Lines' As oneStockLine,
                                                    ((oneStockLine.'Transfer Order No'.'Stock Transfer Header' = OneFifoItem.'Transfer Order No'.'Stock Transfer Header') && (oneStockLine.SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master') && (oneStockLine.'Manufacturing date' = OneFifoItem.'Manufacturing date') && oneStockLine.Date >= Today())
                                                ),
                                                {
                                                    'Remaining Qty Cases': OneFifoItem.'Remaining Qty Cases' - First(CurrentQtyCases).Value,
                                                    'Invoiced Qty Cases': ((LookUp(
                                                        'Stock Transfer Lines' As oneStockLine,
                                                        ((oneStockLine.'Transfer Order No'.'Stock Transfer Header' = OneFifoItem.'Transfer Order No'.'Stock Transfer Header') && (oneStockLine.SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master') && (oneStockLine.'Manufacturing date' = OneFifoItem.'Manufacturing date') && oneStockLine.Date >= Today())
                                                    ).'Invoiced Qty Cases') + First(CurrentQtyCases).Value)
                                                }
                                            );
                                            Patch(
                                                CurrentQtyCases,
                                                First(CurrentQtyCases),
                                                {Value: 0}
                                            );
                                            ,
                                            //Checking Second condition if the (qty is greater then remainining cases) 
                                            ((First(CurrentQtyCases).Value > OneFifoItem.'Remaining Qty Cases')),
                                             //////______________CART MANIPULATION
                                            If(
                                                !IsBlank(
                                                    LookUp(
                                                        colManipulatedCartItems,
                                                        skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date' && scheme = false
                                                    )
                                                ),
                                                Patch(
                                                    colManipulatedCartItems,
                                                    LookUp(
                                                        colManipulatedCartItems,
                                                        skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date' && scheme = false
                                                    ),
                                                    {
                                                        qtyCases: ((LookUp(
                                                            colManipulatedCartItems,
                                                            skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date'
                                                        ).qtyCases) + (OneFifoItem.'Remaining Qty Cases')),
                                                        totalCasePriceWithoutDisc: OneProductItem.caseUnitPrice * (((LookUp(
                                                            colManipulatedCartItems,
                                                            skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date'
                                                        ).qtyCases) + (OneFifoItem.'Remaining Qty Cases')))
                                                    }
                                                ),
                                                Collect(
                                                    colManipulatedCartItems,
                                                    {
                                                        cartItem: OneProductItem,
                                                        manDate: OneFifoItem.'Manufacturing date',
                                                        skuId: OneFifoItem.SKU.'SKU Master',
                                                        qtyCases: OneFifoItem.'Remaining Qty Cases',
                                                        qtyPcs: 0,
                                                        scheme: false,
                                                        caseUnitPrice: OneProductItem.caseUnitPrice,
                                                        pcsUnitPrice: OneProductItem.pcsUnitPrice,
                                                        totalCasePriceWithoutDisc: OneProductItem.caseUnitPrice * First(CurrentQtyCases).Value,
                                                        totalPcsPriceWithoutDisc: 0,
                                                        TotalTax: OneProductItem.tax
                                                    }
                                                );
                                            );
                                            ///////________________UPDATE STOCK IN STOCK TRANSFER LINES
                            Patch(
                                                'Stock Transfer Lines',
                                                LookUp(
                                                    'Stock Transfer Lines' As oneStockLine,
                                                    ((oneStockLine.'Transfer Order No'.'Stock Transfer Header' = OneFifoItem.'Transfer Order No'.'Stock Transfer Header') && (oneStockLine.SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master') && (oneStockLine.'Manufacturing date' = OneFifoItem.'Manufacturing date') && oneStockLine.Date >= Today())
                                                ),
                                                {
                                                    'Remaining Qty Cases': 0,
                                                    'Invoiced Qty Cases': ((LookUp(
                                                        'Stock Transfer Lines' As oneStockLine,
                                                        ((oneStockLine.'Transfer Order No'.'Stock Transfer Header' = OneFifoItem.'Transfer Order No'.'Stock Transfer Header') && (oneStockLine.SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master') && (oneStockLine.'Manufacturing date' = OneFifoItem.'Manufacturing date') && oneStockLine.Date >= Today())
                                                    ).'Invoiced Qty Cases') + OneFifoItem.'Remaining Qty Cases')
                                                }
                                            );
                                            Patch(
                                                CurrentQtyCases,
                                                First(CurrentQtyCases),
                                                {Value: ((First(CurrentQtyCases).Value - OneFifoItem.'Remaining Qty Cases'))}
                                            );
                                        )
                                    )
                                )
                            );
                            /////////////////////////////////////////////////////////_______________STOCK UPDATION FOR PCS       ____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________
                            ClearCollect(
                                CurrentQty,
                                First(colCartItems).qtyPcs
                            );
                            ClearCollect(
                                SequenceTestingVariable,
                                false
                            );
                            ClearCollect(
                                SequenceNo,
                                0
                            );
                            Clear(StockLinesForFIFO);
                            ForAll(
                                Filter(
                                    colCartItems,
                                    schemeOrder = false
                                ) As OneProductItem,
                                Collect(
                                    StockLinesForFIFO,
                                    Sort(
                                        Filter(
                                            Filter(
                                                'Stock Transfer Lines',
                                                ('Transfer Order No'.'Stock Transfer Header' exactin varGatePassHeader.headerGUID) && (SKU.'SKU Master' = OneProductItem.productId)
                                            ),
                                            'Created On' >= Today()
                                        ),
                                        'Manufacturing date',
                                        SortOrder.Ascending
                                    )
                                );
                                Patch(
                                    CurrentQty,
                                    First(CurrentQty),
                                    {Value: OneProductItem.qtyPcs}
                                );
                                ForAll(
                                    StockLinesForFIFO As OneFifoItem,
                                    If(
                                        First(CurrentQty).Value > 0 && OneFifoItem.'Remaining Qty Pcs' > 0 && OneFifoItem.SKU.'SKU Master' = OneProductItem.productId,
                                        //Checking First condition if the qty is less then remainining of old_______________________________________________
                                        If(
                                            (First(CurrentQty).Value <= OneFifoItem.'Remaining Qty Pcs'),
                                            //////______________CART MANIPULATION
                                            If(
                                                !IsBlank(
                                                    LookUp(
                                                        colManipulatedCartItems,
                                                        skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date' && scheme = false
                                                    )
                                                ),
                                                Patch(
                                                    colManipulatedCartItems,
                                                    LookUp(
                                                        colManipulatedCartItems,
                                                        skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date' && scheme = false
                                                    ),
                                                    {
                                                        qtyPcs: ((LookUp(
                                                            colManipulatedCartItems,
                                                            skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date'
                                                        ).qtyPcs) + (First(CurrentQty).Value)),
                                                        totalPcsPriceWithoutDisc: OneProductItem.pcsUnitPrice * (((LookUp(
                                                            colManipulatedCartItems,
                                                            skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date'
                                                        ).qtyPcs) + (First(CurrentQty).Value)))
                                                    }
                                                ),
                                                Collect(
                                                    colManipulatedCartItems,
                                                    {
                                                        cartItem: OneProductItem,
                                                        manDate: OneFifoItem.'Manufacturing date',
                                                        skuId: OneFifoItem.SKU.'SKU Master',
                                                        qtyCases: 0,
                                                        qtyPcs: First(CurrentQty).Value,
                                                        scheme: false,
                                                        caseUnitPrice: OneProductItem.caseUnitPrice,
                                                        pcsUnitPrice: OneProductItem.pcsUnitPrice,
                                                        totalPcsPriceWithoutDisc: OneProductItem.pcsUnitPrice * First(CurrentQty).Value,
                                                        totalCasePriceWithoutDisc: 0,
                                                        TotalTax: OneProductItem.tax
                                                    }
                                                );
                                            );
                                            ///////________________UPDATE STOCK IN STOCK TRANSFER LINES
                            Patch(
                                                'Stock Transfer Lines',
                                                LookUp(
                                                    'Stock Transfer Lines' As oneStockLine,
                                                    ((oneStockLine.'Transfer Order No'.'Stock Transfer Header' = OneFifoItem.'Transfer Order No'.'Stock Transfer Header') && (oneStockLine.SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master') && (oneStockLine.'Manufacturing date' = OneFifoItem.'Manufacturing date') && oneStockLine.Date >= Today())
                                                ),
                                                {
                                                    'Remaining Qty Pcs': OneFifoItem.'Remaining Qty Pcs' - First(CurrentQty).Value,
                                                    'Invoiced Qty Pcs.': ((LookUp(
                                                        'Stock Transfer Lines' As oneStockLine,
                                                        ((oneStockLine.'Transfer Order No'.'Stock Transfer Header' = OneFifoItem.'Transfer Order No'.'Stock Transfer Header') && (oneStockLine.SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master') && (oneStockLine.'Manufacturing date' = OneFifoItem.'Manufacturing date') && oneStockLine.Date >= Today())
                                                    ).'Invoiced Qty Pcs.') + First(CurrentQty).Value)
                                                }
                                            );
                                            Patch(
                                                CurrentQty,
                                                First(CurrentQty),
                                                {Value: 0}
                                            );
                                            ,
                                            //Checking Second condition if the (qty is greater then remainining pcs) && ((Qty-Rem Pcs)< Conversion) ______
                                            ((First(CurrentQty).Value > OneFifoItem.'Remaining Qty Pcs') && ((First(CurrentQty).Value - OneFifoItem.'Remaining Qty Pcs') < (OneFifoItem.'Remaining Qty Cases' * LookUp(
                                                'Item UOMS',
                                                SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master'
                                            ).'Quantity Per UOM'))),
                                             //////______________CART MANIPULATION
                                            If(
                                                !IsBlank(
                                                    LookUp(
                                                        colManipulatedCartItems,
                                                        skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date' && scheme = false
                                                    )
                                                ),
                                                Patch(
                                                    colManipulatedCartItems,
                                                    LookUp(
                                                        colManipulatedCartItems,
                                                        skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date' && scheme = false
                                                    ),
                                                    {
                                                        qtyPcs: ((LookUp(
                                                            colManipulatedCartItems,
                                                            skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date'
                                                        ).qtyPcs) + (First(CurrentQty).Value)),
                                                        totalPcsPriceWithoutDisc: OneProductItem.pcsUnitPrice * (((LookUp(
                                                            colManipulatedCartItems,
                                                            skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date'
                                                        ).qtyPcs) + (First(CurrentQty).Value)))
                                                    }
                                                ),
                                                Collect(
                                                    colManipulatedCartItems,
                                                    {
                                                        cartItem: OneProductItem,
                                                        manDate: OneFifoItem.'Manufacturing date',
                                                        skuId: OneFifoItem.SKU.'SKU Master',
                                                        qtyCases: 0,
                                                        qtyPcs: First(CurrentQty).Value,
                                                        scheme: false,
                                                        caseUnitPrice: OneProductItem.caseUnitPrice,
                                                        pcsUnitPrice: OneProductItem.pcsUnitPrice,
                                                        totalPcsPriceWithoutDisc: OneProductItem.pcsUnitPrice * First(CurrentQty).Value,
                                                        totalCasePriceWithoutDisc: 0,
                                                        TotalTax: OneProductItem.tax
                                                    }
                                                );
                                            );
                                            
                            //Testingggggg__________________________________________________________________________________________________
                            Patch(
                                                SequenceTestingVariable,
                                                First(SequenceTestingVariable),
                                                {Value: true}
                                            );
                                            ForAll(
                                                Sequence(OneFifoItem.'Remaining Qty Cases') As sequenceNo,
                                                If(
                                                    First(SequenceTestingVariable).Value,
                                                    If(
                                                        ((sequenceNo.Value * LookUp(
                                                            'Item UOMS',
                                                            SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master'
                                                        ).'Quantity Per UOM') >= (First(CurrentQty).Value - OneFifoItem.'Remaining Qty Pcs')),
                                                        Patch(
                                                            SequenceTestingVariable,
                                                            First(SequenceTestingVariable),
                                                            {Value: false}
                                                        );
                                                        Patch(
                                                            SequenceNo,
                                                            First(SequenceNo),
                                                            {Value: sequenceNo.Value}
                                                        );
                                                    )
                                                )
                                            );
                                            ///////________________UPDATE STOCK IN STOCK TRANSFER LINES
                            Patch(
                                                'Stock Transfer Lines',
                                                LookUp(
                                                    'Stock Transfer Lines' As oneStockLine,
                                                    ((oneStockLine.'Transfer Order No'.'Stock Transfer Header' = OneFifoItem.'Transfer Order No'.'Stock Transfer Header') && (oneStockLine.SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master') && (oneStockLine.'Manufacturing date' = OneFifoItem.'Manufacturing date') && oneStockLine.Date >= Today())
                                                ),
                                                {
                                                    'Remaining Qty Pcs': ((First(SequenceNo).Value) * LookUp(
                                                        'Item UOMS',
                                                        SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master'
                                                    ).'Quantity Per UOM') - (First(CurrentQty).Value - OneFifoItem.'Remaining Qty Pcs'),
                                                    'Invoiced Qty Pcs.': ((LookUp(
                                                        'Stock Transfer Lines' As oneStockLine,
                                                        ((oneStockLine.'Transfer Order No'.'Stock Transfer Header' = OneFifoItem.'Transfer Order No'.'Stock Transfer Header') && (oneStockLine.SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master') && (oneStockLine.'Manufacturing date' = OneFifoItem.'Manufacturing date') && oneStockLine.Date >= Today())
                                                    ).'Invoiced Qty Pcs.') + First(CurrentQty).Value),
                                                    'Remaining Qty Cases': ((LookUp(
                                                        'Stock Transfer Lines' As oneStockLine,
                                                        ((oneStockLine.'Transfer Order No'.'Stock Transfer Header' = OneFifoItem.'Transfer Order No'.'Stock Transfer Header') && (oneStockLine.SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master') && (oneStockLine.'Manufacturing date' = OneFifoItem.'Manufacturing date') && oneStockLine.Date >= Today())
                                                    ).'Remaining Qty Cases') - First(SequenceNo).Value)
                                                }
                                            );
                                            Patch(
                                                CurrentQty,
                                                First(CurrentQty),
                                                {Value: 0}
                                            );
                                            ,
                                            //Checking Third condition if the (qty is greater then remainining pcs) && ((Qty-Rem Pcs)> Conversion) ______
                                            ((First(CurrentQty).Value > OneFifoItem.'Remaining Qty Pcs') && ((First(CurrentQty).Value - OneFifoItem.'Remaining Qty Pcs') > (OneFifoItem.'Remaining Qty Cases' * LookUp(
                                                'Item UOMS',
                                                SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master'
                                            ).'Quantity Per UOM'))),
                                             //////______________CART MANIPULATION
                                            If(
                                                !IsBlank(
                                                    LookUp(
                                                        colManipulatedCartItems,
                                                        skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date' && scheme = false
                                                    )
                                                ),
                                                Patch(
                                                    colManipulatedCartItems,
                                                    LookUp(
                                                        colManipulatedCartItems,
                                                        skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date' && scheme = false
                                                    ),
                                                    {
                                                        qtyPcs: (( LookUp(
                                                            colManipulatedCartItems,
                                                            skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date'
                                                        ).qtyPcs) + ((OneFifoItem.'Remaining Qty Cases' * LookUp(
                                                            'Item UOMS',
                                                            SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master'
                                                        ).'Quantity Per UOM') + (OneFifoItem.'Remaining Qty Pcs'))),
                                                        totalPcsPriceWithoutDisc: OneProductItem.pcsUnitPrice * ((( LookUp(
                                                            colManipulatedCartItems,
                                                            skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date'
                                                        ).qtyPcs) + ((OneFifoItem.'Remaining Qty Cases' * LookUp(
                                                            'Item UOMS',
                                                            SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master'
                                                        ).'Quantity Per UOM') + (OneFifoItem.'Remaining Qty Pcs'))))
                                                    }
                                                ),
                                                Collect(
                                                    colManipulatedCartItems,
                                                    {
                                                        cartItem: OneProductItem,
                                                        manDate: OneFifoItem.'Manufacturing date',
                                                        skuId: OneFifoItem.SKU.'SKU Master',
                                                        qtyCases: 0,
                                                        qtyPcs: ((OneFifoItem.'Remaining Qty Cases' * LookUp(
                                                            'Item UOMS',
                                                            SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master'
                                                        ).'Quantity Per UOM') + (OneFifoItem.'Remaining Qty Pcs')),
                                                        scheme: false,
                                                        caseUnitPrice: OneProductItem.caseUnitPrice,
                                                        pcsUnitPrice: OneProductItem.pcsUnitPrice,
                                                        totalPcsPriceWithoutDisc: OneProductItem.pcsUnitPrice * ((OneFifoItem.'Remaining Qty Cases' * LookUp(
                                                            'Item UOMS',
                                                            SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master'
                                                        ).'Quantity Per UOM') + (OneFifoItem.'Remaining Qty Pcs')),
                                                        totalCasePriceWithoutDisc: 0,
                                                        TotalTax: OneProductItem.tax
                                                    }
                                                );
                                            );
                                            ///////________________UPDATE STOCK IN STOCK TRANSFER LINES
                            Patch(
                                                'Stock Transfer Lines',
                                                LookUp(
                                                    'Stock Transfer Lines' As oneStockLine,
                                                    ((oneStockLine.'Transfer Order No'.'Stock Transfer Header' = OneFifoItem.'Transfer Order No'.'Stock Transfer Header') && (oneStockLine.SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master') && (oneStockLine.'Manufacturing date' = OneFifoItem.'Manufacturing date') && oneStockLine.Date >= Today())
                                                ),
                                                {
                                                    'Remaining Qty Pcs': 0,
                                                    'Invoiced Qty Pcs.': ((LookUp(
                                                        'Stock Transfer Lines' As oneStockLine,
                                                        ((oneStockLine.'Transfer Order No'.'Stock Transfer Header' = OneFifoItem.'Transfer Order No'.'Stock Transfer Header') && (oneStockLine.SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master') && (oneStockLine.'Manufacturing date' = OneFifoItem.'Manufacturing date') && oneStockLine.Date >= Today())).'Invoiced Qty Pcs.') + ((OneFifoItem.'Remaining Qty Cases' * LookUp(
                                                        'Item UOMS',
                                                        SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master'
                                                    ).'Quantity Per UOM') + (OneFifoItem.'Remaining Qty Pcs'))),
                                                    'Remaining Qty Cases': 0
                                                  /*  'Invoiced Qty Cases': ((LookUp(
                                                        'Stock Transfer Lines' As oneStockLine,
                                                        ((oneStockLine.'Transfer Order No'.'Stock Transfer Header' = OneFifoItem.'Transfer Order No'.'Stock Transfer Header') && (oneStockLine.SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master') && (oneStockLine.'Manufacturing date' = OneFifoItem.'Manufacturing date') && oneStockLine.'Created On'>=Today())
                                                    ).'Invoiced Qty Cases') + OneFifoItem.'Remaining Qty Cases') */
                                                }
                                            );
                                            Patch(
                                                CurrentQty,
                                                First(CurrentQty),
                                                {
                                                    Value: ((First(CurrentQty).Value - OneFifoItem.'Remaining Qty Pcs') - (OneFifoItem.'Remaining Qty Cases' * LookUp(
                                                        'Item UOMS',
                                                        SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master'
                                                    ).'Quantity Per UOM'))
                                                }
                                            );
                                        )
                                    )
                                )
                            );
                            /////////////////////////////////////////////_______________///////SCHEME CART MANIPULATION AND FIFO IMPLEMENTATION
                            /////////////////////////////////////////////////////////_______________STOCK UPDATION FOR CASES __________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________
                            ClearCollect(
                                CurrentQtyCasesScheme,
                                First(colCartItems).qtyCases
                            );
                            Clear(StockLinesForFIFO);
                            ForAll(
                                Filter(
                                    colCartItems,
                                    schemeOrder = true
                                ) As OneProductItem,
                                Collect(
                                    StockLinesForFIFO,
                                    Sort(
                                        Filter(
                                            Filter(
                                                'Stock Transfer Lines',
                                                ('Transfer Order No'.'Stock Transfer Header' exactin varGatePassHeader.headerGUID) && (SKU.'SKU Master' = OneProductItem.productId)
                                            ),
                                            'Created On' >= Today()
                                        ),
                                        'Manufacturing date',
                                        SortOrder.Ascending
                                    )
                                );
                                Patch(
                                    CurrentQtyCasesScheme,
                                    First(CurrentQtyCasesScheme),
                                    {Value: OneProductItem.qtyCases}
                                );
                                ForAll(
                                    StockLinesForFIFO As OneFifoItem,
                                    If(
                                        First(CurrentQtyCasesScheme).Value > 0 && OneFifoItem.'Remaining Qty Cases' > 0 && OneFifoItem.SKU.'SKU Master' = OneProductItem.productId,
                                        //Checking First condition if the qty is less then remainining of old_______________________________________________
                                        If(
                                            (First(CurrentQtyCasesScheme).Value <= OneFifoItem.'Remaining Qty Cases'),
                                            //////______________CART MANIPULATION
                                            If(
                                                !IsBlank(
                                                    LookUp(
                                                        colManipulatedCartItems,
                                                        skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date' && scheme = true
                                                    )
                                                ),
                                                Patch(
                                                    colManipulatedCartItems,
                                                    LookUp(
                                                        colManipulatedCartItems,
                                                        skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date' && scheme = true
                                                    ),
                                                    {
                                                        qtyCases: ((LookUp(
                                                            colManipulatedCartItems,
                                                            skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date' && scheme = true
                                                        ).qtyCases) + (First(CurrentQtyCasesScheme).Value))
                                                    }
                                                ),
                                                Collect(
                                                    colManipulatedCartItems,
                                                    {
                                                        cartItem: OneProductItem,
                                                        manDate: OneFifoItem.'Manufacturing date',
                                                        skuId: OneFifoItem.SKU.'SKU Master',
                                                        qtyCases: First(CurrentQtyCasesScheme).Value,
                                                        qtyPcs: 0,
                                                        scheme: true
                                                    }
                                                );
                                            );
                                            ///////________________UPDATE STOCK IN STOCK TRANSFER LINES
                            Patch(
                                                'Stock Transfer Lines',
                                                LookUp(
                                                    'Stock Transfer Lines' As oneStockLine,
                                                    ((oneStockLine.'Transfer Order No'.'Stock Transfer Header' = OneFifoItem.'Transfer Order No'.'Stock Transfer Header') && (oneStockLine.SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master') && (oneStockLine.'Manufacturing date' = OneFifoItem.'Manufacturing date') && oneStockLine.Date >= Today())
                                                ),
                                                {
                                                    'Remaining Qty Cases': OneFifoItem.'Remaining Qty Cases' - First(CurrentQtyCasesScheme).Value,
                                                    'Invoiced Qty Cases': ((LookUp(
                                                        'Stock Transfer Lines' As oneStockLine,
                                                        ((oneStockLine.'Transfer Order No'.'Stock Transfer Header' = OneFifoItem.'Transfer Order No'.'Stock Transfer Header') && (oneStockLine.SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master') && (oneStockLine.'Manufacturing date' = OneFifoItem.'Manufacturing date') && oneStockLine.Date >= Today())
                                                    ).'Invoiced Qty Cases') + First(CurrentQtyCasesScheme).Value)
                                                }
                                            );
                                            Patch(
                                                CurrentQtyCasesScheme,
                                                First(CurrentQtyCasesScheme),
                                                {Value: 0}
                                            );
                                            ,
                                            //Checking Second condition if the (qty is greater then remainining cases) 
                                            ((First(CurrentQtyCasesScheme).Value > OneFifoItem.'Remaining Qty Cases')),
                                             //////______________CART MANIPULATION
                                            If(
                                                !IsBlank(
                                                    LookUp(
                                                        colManipulatedCartItems,
                                                        skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date' && scheme = true
                                                    )
                                                ),
                                                Patch(
                                                    colManipulatedCartItems,
                                                    LookUp(
                                                        colManipulatedCartItems,
                                                        skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date' && scheme = true
                                                    ),
                                                    {
                                                        qtyCases: ((LookUp(
                                                            colManipulatedCartItems,
                                                            skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date' && scheme = true
                                                        ).qtyCases) + (OneFifoItem.'Remaining Qty Cases'))
                                                    }
                                                ),
                                                Collect(
                                                    colManipulatedCartItems,
                                                    {
                                                        cartItem: OneProductItem,
                                                        manDate: OneFifoItem.'Manufacturing date',
                                                        skuId: OneFifoItem.SKU.'SKU Master',
                                                        qtyCases: OneFifoItem.'Remaining Qty Cases',
                                                        qtyPcs: 0,
                                                        scheme: true
                                                    }
                                                );
                                            );
                                            ///////________________UPDATE STOCK IN STOCK TRANSFER LINES
                            Patch(
                                                'Stock Transfer Lines',
                                                LookUp(
                                                    'Stock Transfer Lines' As oneStockLine,
                                                    ((oneStockLine.'Transfer Order No'.'Stock Transfer Header' = OneFifoItem.'Transfer Order No'.'Stock Transfer Header') && (oneStockLine.SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master') && (oneStockLine.'Manufacturing date' = OneFifoItem.'Manufacturing date') && oneStockLine.Date >= Today())
                                                ),
                                                {
                                                    'Remaining Qty Cases': 0,
                                                    'Invoiced Qty Cases': ((LookUp(
                                                        'Stock Transfer Lines' As oneStockLine,
                                                        ((oneStockLine.'Transfer Order No'.'Stock Transfer Header' = OneFifoItem.'Transfer Order No'.'Stock Transfer Header') && (oneStockLine.SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master') && (oneStockLine.'Manufacturing date' = OneFifoItem.'Manufacturing date') && oneStockLine.Date >= Today())
                                                    ).'Invoiced Qty Cases') + OneFifoItem.'Remaining Qty Cases')
                                                }
                                            );
                                            Patch(
                                                CurrentQtyCasesScheme,
                                                First(CurrentQtyCasesScheme),
                                                {Value: ((First(CurrentQtyCasesScheme).Value - OneFifoItem.'Remaining Qty Cases'))}
                                            );
                                        )
                                    )
                                )
                            );

                            ClearCollect(
                                CurrentQtyScheme,
                                First(colCartItems).qtyPcs
                            );
                            ClearCollect(
                                SequenceTestingVariable1,
                                false
                            );
                            ClearCollect(
                                SequenceNo1,
                                0
                            );
                            Clear(StockLinesForFIFO);
                            ForAll(
                                Filter(
                                    colCartItems,
                                    schemeOrder = true
                                ) As OneProductItem,
                                Collect(
                                    StockLinesForFIFO,
                                    Sort(
                                        Filter(
                                            Filter(
                                                'Stock Transfer Lines',
                                                ('Transfer Order No'.'Stock Transfer Header' exactin varGatePassHeader.headerGUID) && (SKU.'SKU Master' = OneProductItem.productId)
                                            ),
                                            'Created On' >= Today()
                                        ),
                                        'Manufacturing date',
                                        SortOrder.Ascending
                                    )
                                );
                                Patch(
                                    CurrentQtyScheme,
                                    First(CurrentQtyScheme),
                                    {Value: OneProductItem.qtyPcs}
                                );
                                ForAll(
                                    StockLinesForFIFO As OneFifoItem,
                                    If(
                                        First(CurrentQtyScheme).Value > 0 && OneFifoItem.'Remaining Qty Pcs' > 0 && OneFifoItem.SKU.'SKU Master' = OneProductItem.productId,
                                                    //Checking First condition if the qty is less then remainining of old_______________________________________________
                                        If(
                                            (First(CurrentQtyScheme).Value <= OneFifoItem.'Remaining Qty Pcs'),
                                            //////______________CART MANIPULATION
                                            If(
                                                !IsBlank(
                                                    LookUp(
                                                        colManipulatedCartItems,
                                                        skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date' && scheme = true
                                                    )
                                                ),
                                                Patch(
                                                    colManipulatedCartItems,
                                                    LookUp(
                                                        colManipulatedCartItems,
                                                        skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date' && scheme = true
                                                    ),
                                                    {
                                                        qtyPcs: ((LookUp(
                                                            colManipulatedCartItems,
                                                            skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date' && scheme = true
                                                        ).qtyPcs) + (First(CurrentQtyScheme).Value))
                                                    }
                                                ),
                                                Collect(
                                                    colManipulatedCartItems,
                                                    {
                                                        cartItem: OneProductItem,
                                                        manDate: OneFifoItem.'Manufacturing date',
                                                        skuId: OneFifoItem.SKU.'SKU Master',
                                                        qtyCases: 0,
                                                        qtyPcs: First(CurrentQtyScheme).Value,
                                                        scheme: true
                                                    }
                                                );
                                            );
                                            ///////________________UPDATE STOCK IN STOCK TRANSFER LINES
                            Patch(
                                                'Stock Transfer Lines',
                                                LookUp(
                                                    'Stock Transfer Lines' As oneStockLine,
                                                    ((oneStockLine.'Transfer Order No'.'Stock Transfer Header' = OneFifoItem.'Transfer Order No'.'Stock Transfer Header') && (oneStockLine.SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master') && (oneStockLine.'Manufacturing date' = OneFifoItem.'Manufacturing date') && oneStockLine.'Created On' >= Today())
                                                ),
                                                {
                                                    'Remaining Qty Pcs': OneFifoItem.'Remaining Qty Pcs' - First(CurrentQtyScheme).Value,
                                                    'Invoiced Qty Pcs.': ((LookUp(
                                                        'Stock Transfer Lines' As oneStockLine,
                                                        ((oneStockLine.'Transfer Order No'.'Stock Transfer Header' = OneFifoItem.'Transfer Order No'.'Stock Transfer Header') && (oneStockLine.SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master') && (oneStockLine.'Manufacturing date' = OneFifoItem.'Manufacturing date') && oneStockLine.'Created On' >= Today())
                                                    ).'Invoiced Qty Pcs.') + First(CurrentQtyScheme).Value)
                                                }
                                            );
                                            Patch(
                                                CurrentQtyScheme,
                                                First(CurrentQtyScheme),
                                                {Value: 0}
                                            );
                                            ,
                                            //Checking Second condition if the (qty is greater then remainining pcs) && ((Qty-Rem Pcs)< Conversion) ______
                                            ((First(CurrentQtyScheme).Value > OneFifoItem.'Remaining Qty Pcs') && ((First(CurrentQtyScheme).Value - OneFifoItem.'Remaining Qty Pcs') < (OneFifoItem.'Remaining Qty Cases' * LookUp(
                                                'Item UOMS',
                                                SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master'
                                            ).'Quantity Per UOM'))),
                                             //////______________CART MANIPULATION
                                            If(
                                                !IsBlank(
                                                    LookUp(
                                                        colManipulatedCartItems,
                                                        skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date' && scheme = true
                                                    )
                                                ),
                                                Patch(
                                                    colManipulatedCartItems,
                                                    LookUp(
                                                        colManipulatedCartItems,
                                                        skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date' && scheme = true
                                                    ),
                                                    {
                                                        qtyPcs: (LookUp(
                                                            colManipulatedCartItems,
                                                            skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date' && scheme = true
                                                        ).qtyPcs + (First(CurrentQtyScheme).Value))
                                                    }
                                                ),
                                                Collect(
                                                    colManipulatedCartItems,
                                                    {
                                                        cartItem: OneProductItem,
                                                        manDate: OneFifoItem.'Manufacturing date',
                                                        skuId: OneFifoItem.SKU.'SKU Master',
                                                        qtyCases: 0,
                                                        qtyPcs: First(CurrentQtyScheme).Value,
                                                        scheme: true
                                                    }
                                                );
                                            );
                                            //Testingggggg__________________________________________________________________________________________________
                            Patch(
                                                SequenceTestingVariable1,
                                                First(SequenceTestingVariable1),
                                                {Value: true}
                                            );
                                            ForAll(
                                                Sequence(OneFifoItem.'Remaining Qty Cases') As sequenceNo,
                                                If(
                                                    First(SequenceTestingVariable1).Value,
                                                    If(
                                                        ((sequenceNo.Value * LookUp(
                                                            'Item UOMS',
                                                            SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master'
                                                        ).'Quantity Per UOM') >= (First(CurrentQty).Value - OneFifoItem.'Remaining Qty Pcs')),
                                                        Patch(
                                                            SequenceTestingVariable1,
                                                            First(SequenceTestingVariable1),
                                                            {Value: false}
                                                        );
                                                        Patch(
                                                            SequenceNo1,
                                                            First(SequenceNo1),
                                                            {Value: sequenceNo.Value}
                                                        );
                                                    )
                                                )
                                            );
                                            ///////________________UPDATE STOCK IN STOCK TRANSFER LINES
                            Patch(
                                                'Stock Transfer Lines',
                                                LookUp(
                                                    'Stock Transfer Lines' As oneStockLine,
                                                    ((oneStockLine.'Transfer Order No'.'Stock Transfer Header' = OneFifoItem.'Transfer Order No'.'Stock Transfer Header') && (oneStockLine.SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master') && (oneStockLine.'Manufacturing date' = OneFifoItem.'Manufacturing date') && oneStockLine.'Created On' >= Today())
                                                ),
                                                {
                                                    'Remaining Qty Pcs': (First(SequenceNo1).Value * LookUp(
                                                        'Item UOMS',
                                                        SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master'
                                                    ).'Quantity Per UOM') - (First(CurrentQtyScheme).Value - OneFifoItem.'Remaining Qty Pcs'),
                                                    'Invoiced Qty Pcs.': ((LookUp(
                                                        'Stock Transfer Lines' As oneStockLine,
                                                        ((oneStockLine.'Transfer Order No'.'Stock Transfer Header' = OneFifoItem.'Transfer Order No'.'Stock Transfer Header') && (oneStockLine.SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master') && (oneStockLine.'Manufacturing date' = OneFifoItem.'Manufacturing date') && oneStockLine.'Created On' >= Today())
                                                    ).'Invoiced Qty Pcs.') + First(CurrentQtyScheme).Value),
                                                    'Remaining Qty Cases': OneFifoItem.'Remaining Qty Cases' - First(SequenceNo1).Value
                                                }
                                            );
                                            Patch(
                                                CurrentQtyScheme,
                                                First(CurrentQtyScheme),
                                                {Value: 0}
                                            );
                                            ,
                                            //Checking Third condition if the (qty is greater then remainining pcs) && ((Qty-Rem Pcs)> Conversion) ______
                                            ((First(CurrentQtyScheme).Value > OneFifoItem.'Remaining Qty Pcs') && ((First(CurrentQtyScheme).Value - OneFifoItem.'Remaining Qty Pcs') > (OneFifoItem.'Remaining Qty Cases' * LookUp(
                                                'Item UOMS',
                                                SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master'
                                            ).'Quantity Per UOM'))),
                                             //////______________CART MANIPULATION
                                            If(
                                                !IsBlank(
                                                    LookUp(
                                                        colManipulatedCartItems,
                                                        skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date' && scheme = true
                                                    )
                                                ),
                                                Patch(
                                                    colManipulatedCartItems,
                                                    LookUp(
                                                        colManipulatedCartItems,
                                                        skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date' && scheme = true
                                                    ),
                                                    {
                                                        qtyPcs: (( LookUp(
                                                            colManipulatedCartItems,
                                                            skuId = OneFifoItem.SKU.'SKU Master' && manDate = OneFifoItem.'Manufacturing date' && scheme = true
                                                        ).qtyPcs) + ((OneFifoItem.'Remaining Qty Cases' * LookUp(
                                                            'Item UOMS',
                                                            SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master'
                                                        ).'Quantity Per UOM') + (OneFifoItem.'Remaining Qty Pcs')))
                                                    }
                                                ),
                                                Collect(
                                                    colManipulatedCartItems,
                                                    {
                                                        cartItem: OneProductItem,
                                                        manDate: OneFifoItem.'Manufacturing date',
                                                        skuId: OneFifoItem.SKU.'SKU Master',
                                                        qtyCases: 0,
                                                        qtyPcs: ((OneFifoItem.'Remaining Qty Cases' * LookUp(
                                                            'Item UOMS',
                                                            SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master'
                                                        ).'Quantity Per UOM') + (OneFifoItem.'Remaining Qty Pcs')),
                                                        scheme: true
                                                    }
                                                );
                                            );
                                            ///////________________UPDATE STOCK IN STOCK TRANSFER LINES
                            Patch(
                                                'Stock Transfer Lines',
                                                LookUp(
                                                    'Stock Transfer Lines' As oneStockLine,
                                                    ((oneStockLine.'Transfer Order No'.'Stock Transfer Header' = OneFifoItem.'Transfer Order No'.'Stock Transfer Header') && (oneStockLine.SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master') && (oneStockLine.'Manufacturing date' = OneFifoItem.'Manufacturing date') && oneStockLine.'Created On' >= Today())
                                                ),
                                                {
                                                    'Remaining Qty Pcs': 0,
                                                    'Invoiced Qty Pcs.': ((LookUp(
                                                        'Stock Transfer Lines' As oneStockLine,
                                                        ((oneStockLine.'Transfer Order No'.'Stock Transfer Header' = OneFifoItem.'Transfer Order No'.'Stock Transfer Header') && (oneStockLine.SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master') && (oneStockLine.'Manufacturing date' = OneFifoItem.'Manufacturing date') && oneStockLine.'Created On' >= Today())
                                                    ).'Invoiced Qty Pcs.') + ((OneFifoItem.'Remaining Qty Cases' * LookUp(
                                                        'Item UOMS',
                                                        SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master'
                                                    ).'Quantity Per UOM') + (OneFifoItem.'Remaining Qty Pcs'))),
                                                    'Remaining Qty Cases': 0
                                                    /*'Invoiced Qty Cases': ((LookUp(
                                                        'Stock Transfer Lines' As oneStockLine,
                                                        ((oneStockLine.'Transfer Order No'.'Stock Transfer Header' = OneFifoItem.'Transfer Order No'.'Stock Transfer Header') && (oneStockLine.SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master') && (oneStockLine.'Manufacturing date' = OneFifoItem.'Manufacturing date') && oneStockLine.'Created On'>=Today())
                                                    ).'Invoiced Qty Cases') + OneFifoItem.'Remaining Qty Cases')*/
                                                }
                                            );
                                            Patch(
                                                CurrentQtyScheme,
                                                First(CurrentQtyScheme),
                                                {
                                                    Value: ((First(CurrentQtyScheme).Value - OneFifoItem.'Remaining Qty Pcs') - (OneFifoItem.'Remaining Qty Cases' * LookUp(
                                                        'Item UOMS',
                                                        SKU.'SKU Master' = OneFifoItem.SKU.'SKU Master'
                                                    ).'Quantity Per UOM'))
                                                }
                                            );
                                        )
                                    )
                                )
                            );
                            /////////////////////////////////////////////////////////_______________ORDER PLACEMENT
                            If(
                                paymentData.Customer.'Mode Of Payment' = 'Payment Type (choice)'.CASH || paymentData.Customer.'Mode Of Payment' = 'Payment Type (choice)'.COUPON,
                                ClearCollect(
                                    CreateOrderRecord,
                                    Patch(
                                        'Order Headers',
                                        Defaults('Order Headers'),
                                        {
                                            'Order Date': Today(),
                                            'Order Type': 'Order Type (Choice)'.'Sales Order',
                                            'Payment Type': If(
                                                paymentData.Customer.'Mode Of Payment' = 'Payment Type (choice)'.CASH,
                                                'Payment Type (Order Headers)'.Cash,
                                                paymentData.Customer.'Mode Of Payment' = 'Payment Type (choice)'.COUPON,
                                                'Payment Type (Order Headers)'.Coupon
                                            ),
                                            'Total Quantity': (Sum(
                                                colManipulatedCartItems,
                                                qtyCases
                                            ) + Sum(
                                                colManipulatedCartItems,
                                                qtyPcs
                                            )),
                                            'Net Amount': ((Sum(
                                                colManipulatedCartItems,
                                                cartItem.discountedPrice
                                            )) * ((Sum(
                                                colManipulatedCartItems,
                                                cartItem.tax
                                            )) * 0.01) + Sum(
                                                colManipulatedCartItems,
                                                cartItem.discountedPrice
                                            ) + Sum(
                                                colManipulatedCartItems,
                                                cartItem.emptyJarValue
                                            )),
                                            'Van No': LookUp(
                                                Warehouses,
                                                Warehouse = varUserVanNo.Van.Warehouse
                                            ),
                                            'Route No': Areavalueid,
                                            Customer: LookUp(
                                                Customers_1,
                                                Account = paymentData.Customer.Account
                                            ),
                                            Salesperson: LookUp(
                                                Users,
                                                'Primary Email' = User().Email
                                            ),
                                            'Delivery Date': Today(),
                                            'Total Amount': (Sum(
                                                colManipulatedCartItems,
                                                cartItem.discountedPrice
                                            ) ),
                                            'Total Tax Amount': (Sum(
                                                colManipulatedCartItems,
                                                cartItem.discountedPrice
                                            ) * ((Sum(
                                                colManipulatedCartItems,
                                                cartItem.tax
                                            )) * 0.01)),
                                            'Total Discount Amount': Sum(
                                                colManipulatedCartItems,
                                                cartItem.discount
                                            )
                                        }
                                    )
                                );
                                If(
                                    !IsBlank(CreateOrderRecord),
                                    ClearCollect(
                                        CreateItemsRecord,
                                        ForAll(
                                            colManipulatedCartItems As ThissItem,
                                            Patch(
                                                'Order Lines',
                                                Defaults('Order Lines'),
                                                {
                                                    'Total Quantity': ThissItem.qtyCases + ThissItem.qtyPcs,
                                                    Cases: ThissItem.qtyCases,
                                                    PCs: ThissItem.qtyPcs,
                                                    'Order Number': LookUp(
                                                        'Order Headers',
                                                        'Order Number' = First(CreateOrderRecord).'Order Number'
                                                    ),
                                                    Salesperson: LookUp(
                                                        Users,
                                                        'Primary Email' = User().Email
                                                    ),
                                                    'Van No': LookUp(
                                                        Warehouses,
                                                        Warehouse = varUserVanNo.Van.Warehouse
                                                    ),
                                                    'Item Type': If(
                                                        ThissItem.cartItem.schemeOrder = true,
                                                        'Item Type (Choice)'.Free,
                                                        'Item Type (Choice)'.Paid
                                                    ),
                                                    'Item SKU': LookUp(
                                                        'SKU Masters',
                                                        'SKU Master' = ThissItem.skuId
                                                    ),
                                                    'Cases Unit Price': ThissItem.caseUnitPrice,
                                                    'Pcs Unit Price': ThissItem.pcsUnitPrice,
                                                    // 'Total Amount': (ThissItem.qtyCases * ThissItem.caseUnitPrice) + (ThissItem.qtyPcs * ThissItem.pcsUnitPrice),
                                                    'Total Discount Amount': Value(ThissItem.cartItem.discount),
                                                    'Tax Amount': ThissItem.cartItem.discountedPrice * ThissItem.TotalTax * 0.01,
                                                    'Net Amount': ThissItem.cartItem.discountedPrice + (ThissItem.cartItem.discountedPrice * ThissItem.cartItem.tax * 0.01) + ThissItem.cartItem.emptyJarValue,
                                                    'Customer no.': LookUp(
                                                        Customers_1,
                                                        Account = paymentData.Customer.Account
                                                    ),
                                                    'Route No': Areavalueid,
                                                    'Reference Scheme ': LookUp(
                                                        'Scheme Orders',
                                                        'Scheme Order' = ThissItem.cartItem.schemeOrderValue.'Scheme Order'.'Scheme Order'
                                                    ),
                                                    'Reference Line': LookUp(
                                                        'Order Lines',
                                                        'Order Number'.'Order Number' = First(CreateOrderRecord).'Order Number' && 'Item SKU'.'SKU Master' = LookUp(
                                                            'Scheme Orders',
                                                            'Scheme Order' = ThissItem.cartItem.schemeOrderValue.'Scheme Order'.'Scheme Order'
                                                        ).'Item Code'.'SKU Master'
                                                    ),
                                                    'Manufacturing Date': DateValue(ThissItem.manDate)
                                                }
                                            )
                                        )
                                    );
                                    
                            /////////// Patch Invoice Header////////////////////
                            ClearCollect(
                                        CreateInvHeader,
                                        Patch(
                                            'Invoice Headers',
                                            Defaults('Invoice Headers'),
                                            {
                                                'Invoice Number': "RI" & Left(
                                                    LookUp(
                                                        'Invoice Series',
                                                        'Route No'.Area = Areavalueid.Area
                                                    ).'Sequence No',
                                                    4
                                                ) & Text(
                                                    LookUp(
                                                        'Invoice Series',
                                                        'Route No'.Area = Areavalueid.Area
                                                    ).'Route No'.'Name (zx_name)'
                                                ) &
                                                /*LookUp(
                                                    'Invoice Series',
                                                    'Route No'.Area = LookUp(
                                                        Areas,
                                                        Area = varUserArea.Area.Area
                                                    ).Area
                                                ).'Last Sequence No' + "000001",
                             Left(
                                                    LookUp(
                                                        'Invoice Series',
                                                        'Route No'.Area = LookUp(
                                                            Areas,
                                                            Area = varUserArea.Area.Area
                                                        ).Area
                                                    ).'Sequence No',
                                                    4
                                                ) &*/ 
                             Right(
                                                    LookUp(
                                                        'Invoice Series',
                                                        'Route No'.Area = Areavalueid.Area
                                                    ).'Sequence No' + 1,
                                                    6
                                                ),
                                                Salesperson: LookUp(
                                                    Users,
                                                    'Primary Email' = User().Email
                                                ),
                                                Customer: LookUp(
                                                    Customers_1,
                                                    Account = paymentData.Customer.Account
                                                ),
                                                'Route No': Areavalueid,
                                                'Van No': LookUp(
                                                    Warehouses,
                                                    Warehouse = varUserVanNo.Van.Warehouse
                                                ),
                                                'Invoice Date': Now(),
                                                'Order Type': 'Order Type (Choice)'.'Sales Order',
                                                'Order Number': LookUp(
                                                    'Order Headers',
                                                    'Order Number' = First(CreateOrderRecord).'Order Number'
                                                ),
                                                'Total Amount': (Sum(
                                                    colManipulatedCartItems,
                                                    cartItem.discountedPrice
                                                ) ),
                                                'Total Tax Amount': (Sum(
                                                    colManipulatedCartItems,
                                                    cartItem.discountedPrice
                                                ) * ((Sum(
                                                    colManipulatedCartItems,
                                                    cartItem.tax
                                                )) * 0.01)),
                                                'Total Discount Amount': Sum(
                                                    colManipulatedCartItems,
                                                    cartItem.discount
                                                ),
                                                'Net Amount': ((Sum(
                                                    colManipulatedCartItems,
                                                    cartItem.discountedPrice
                                                ) * ((Sum(
                                                    colManipulatedCartItems,
                                                    cartItem.tax
                                                )) * 0.01)) + Sum(
                                                    colManipulatedCartItems,
                                                    cartItem.discountedPrice
                                                ) + Sum(
                                                    colManipulatedCartItems,
                                                    cartItem.emptyJarValue
                                                )),
                                                'Mode of Payment': paymentData.Customer.'Mode Of Payment'
                                                //'IRN Number':,
                                                //'IRN Status':,
                                                //'IRN Message':,
                                                //'Signed QR Code':,
                                                //'Synced Date':,
                                            }
                                        )
                                    );
                                    Patch(
                                        'Invoice Series',
                                        LookUp(
                                            'Invoice Series',
                                            'Route No'.Area = Areavalueid.Area
                                        ),
                                        {
                                            'Sequence No': LookUp(
                                                'Invoice Series',
                                                'Route No'.Area = Areavalueid.Area
                                            ).'Sequence No' + 1
                                        }
                                    );
                                    
                            //////////////Patch Invoice Line ///////////////////
                            ClearCollect(
                                        CreateInvLine,
                                        ForAll(
                                            colManipulatedCartItems As OrdrItems,
                                            Patch(
                                                'Invoice Lines',
                                                Defaults('Invoice Lines'),
                                                {
                                                    'Invoice Number': LookUp(
                                                        'Invoice Headers',
                                                        'Invoice Header' = First(CreateInvHeader).'Invoice Header'
                                                    ),
                                                    'Order Number': LookUp(
                                                        'Order Headers',
                                                        'Order Number' = First(CreateOrderRecord).'Order Number'
                                                    ),
                                                    'Item Type': If(
                                                        OrdrItems.cartItem.schemeOrder = true,
                                                        'Item Type (Choice)'.Free,
                                                        'Item Type (Choice)'.Paid
                                                    ),
                                                    'Cases Unit Price': OrdrItems.totalCasePriceWithoutDisc,
                                                    'Pcs Unit Price': OrdrItems.totalPcsPriceWithoutDisc,
                                                    'Total Quantity': OrdrItems.qtyCases + OrdrItems.qtyPcs,
                                                    Cases: OrdrItems.qtyCases,
                                                    PCs: OrdrItems.qtyPcs,
                                                    'Total Discount Amount': Value(OrdrItems.cartItem.discount),
                                                    'Tax Amount': OrdrItems.cartItem.discountedPrice * OrdrItems.cartItem.tax * 0.01,
                                                    Rate: OrdrItems.cartItem.discountedPrice + (OrdrItems.cartItem.discountedPrice * OrdrItems.cartItem.tax * 0.01) + OrdrItems.cartItem.emptyJarValue,
                                                    Customer: LookUp(
                                                        Customers_1,
                                                        Account = paymentData.Customer.Account
                                                    ),
                                                    'Route No': Areavalueid,
                                                    Salesperson: LookUp(
                                                        Users,
                                                        'Primary Email' = User().Email
                                                    ),
                                                    'Van No': LookUp(
                                                        Warehouses,
                                                        Warehouse = varUserVanNo.Van.Warehouse
                                                    )
                                                }
                                            )
                                        )
                                    );
                                    
                            ////////// Print Invoice ///////////////
                            //Stock substraction from location ____________________________________________________________________________________
                            ForAll(
                                        colManipulatedCartItems As oneLine,
                                        Patch(
                                            'Current Stocks',
                                            LookUp(
                                                'Current Stocks',
                                                'Item SKU'.'SKU Master' = oneLine.skuId && 'Van No'.Warehouse = varUserVanNo.Van.Warehouse && 'Created On' >= Today()
                                            ),
                                            {
                                                Cases: Sum(
                                                    Filter(
                                                        'Stock Transfer Lines',
                                                        'Transfer Order No'.'Stock Transfer Header' exactin varGatePassHeader.headerGUID && SKU.'SKU Master' = oneLine.skuId && 'Created On' >= Today()
                                                    ),
                                                    'Remaining Qty Cases'
                                                ),
                                                PCs: Sum(
                                                    Filter(
                                                        'Stock Transfer Lines',
                                                        'Transfer Order No'.'Stock Transfer Header' exactin varGatePassHeader.headerGUID && SKU.'SKU Master' = oneLine.skuId && 'Created On' >= Today()
                                                    ),
                                                    'Remaining Qty Pcs'
                                                )
                                            }
                                        )
                                    );
                                    Refresh('Current Stocks');
                                /* Set(
                                    VarPaymentConfirm,
                                    true
                                ); */
                            ,
                                ///////////////////////////////////////////////////////////////////////////////////////////////Credit Customer____
                                    paymentData.Customer.'Mode Of Payment' = 'Payment Type (choice)'.CREDIT && LookUp(
                                        Customers_1,
                                        Account = paymentData.Customer.Account
                                    ).'Credit Activated' = 'Credit Activated (Customers_1)'.Yes,
                                    If(
                                        !IsBlank(
                                            LookUp(
                                                'Temporary Credit Limits',
                                                'Customer code'.Account = paymentData.Customer.Account && FromDate <= Today() && ToDate >= Today()
                                            )
                                        ),
                                    ///////////_____________________________________________________________________________Temporary Credit Exists
                                        If(
                                            ((LookUp(
                                                'Temporary Credit Limits',
                                                'Customer code'.Account = paymentData.Customer.Account && FromDate <= Today() && ToDate >= Today()
                                            ).'Available Limit') - (LookUp(
                                                Customers_1,
                                                Account = paymentData.Customer.Account
                                            ).'Used Credit Limit') - (Sum(
                                                Filter(
                                                    'Order Headers',
                                                    Customer.Account = paymentData.Customer.Account && 'Created On' >= Today()
                                                ),
                                                'Net Amount'
                                            ))) < ((Sum(
                                                colManipulatedCartItems,
                                                cartItem.discountedPrice
                                            ) * ((Sum(
                                                colManipulatedCartItems,
                                                cartItem.tax
                                            )) * 0.01)) + Sum(
                                                colManipulatedCartItems,
                                                cartItem.discountedPrice
                                            ) + Sum(
                                                colManipulatedCartItems,
                                                cartItem.emptyJarValue
                                            )),
                                            Notify(
                                                "You don't have sufficient credit limit left, Please check",
                                                NotificationType.Error,
                                                2000
                                            );
                                   // Navigate('Visit Screen'),
                            ,
                                            ClearCollect(
                                                CreateOrderRecord,
                                                Patch(
                                                    'Order Headers',
                                                    Defaults('Order Headers'),
                                                    {
                                                        'Order Date': Today(),
                                                        'Order Type': 'Order Type (Choice)'.'Sales Order',
                                                        'Payment Type': 'Payment Type (Order Headers)'.Credit,
                                                        'Total Quantity': Sum(
                                                            colManipulatedCartItems,
                                                            qtyCases
                                                        ) + Sum(
                                                            colManipulatedCartItems,
                                                            qtyPcs
                                                        ),
                                                        'Net Amount': ((Sum(
                                                            colManipulatedCartItems,
                                                            cartItem.discountedPrice
                                                        ) * ((Sum(
                                                            colManipulatedCartItems,
                                                            cartItem.tax
                                                        )) * 0.01)) + Sum(
                                                            colManipulatedCartItems,
                                                            cartItem.discountedPrice
                                                        ) + Sum(
                                                            colManipulatedCartItems,
                                                            cartItem.emptyJarValue
                                                        )),
                                                        'Van No': LookUp(
                                                            Warehouses,
                                                            Warehouse = varUserVanNo.Van.Warehouse
                                                        ),
                                                        'Route No': Areavalueid,
                                                        Customer: LookUp(
                                                            Customers_1,
                                                            Account = paymentData.Customer.Account
                                                        ),
                                                        Salesperson: LookUp(
                                                            Users,
                                                            'Primary Email' = User().Email
                                                        ),
                                                        'Delivery Date': Today(),
                                                        'Total Amount': (Sum(
                                                            colManipulatedCartItems,
                                                            cartItem.discountedPrice
                                                        )),
                                                        'Total Tax Amount': (Sum(
                                                            colManipulatedCartItems,
                                                            cartItem.discountedPrice
                                                        ) * ((Sum(
                                                            colManipulatedCartItems,
                                                            cartItem.tax
                                                        )) * 0.01)),
                                                        'Total Discount Amount': Sum(
                                                            colManipulatedCartItems,
                                                            cartItem.discount
                                                        )
                                                    }
                                                )
                                            );
                                            If(
                                                !IsBlank(CreateOrderRecord),
                                                ClearCollect(
                                                    CreateItemsRecord,
                                                    ForAll(
                                                        colManipulatedCartItems As ThissItem,
                                                        Patch(
                                                            'Order Lines',
                                                            Defaults('Order Lines'),
                                                            {
                                                                'Total Quantity': ThissItem.qtyCases + ThissItem.qtyPcs,
                                                                Cases: ThissItem.qtyCases,
                                                                PCs: ThissItem.qtyPcs,
                                                                'Order Number': LookUp(
                                                                    'Order Headers',
                                                                    'Order Number' = First(CreateOrderRecord).'Order Number'
                                                                ),
                                                                Salesperson: LookUp(
                                                                    Users,
                                                                    'Primary Email' = User().Email
                                                                ),
                                                                'Van No': LookUp(
                                                                    Warehouses,
                                                                    Warehouse = varUserVanNo.Van.Warehouse
                                                                ),
                                                                'Item Type': If(
                                                                    ThissItem.cartItem.schemeOrder = true,
                                                                    'Item Type (Choice)'.Free,
                                                                    'Item Type (Choice)'.Paid
                                                                ),
                                                                'Item SKU': LookUp(
                                                                    'SKU Masters',
                                                                    'SKU Master' = ThissItem.skuId
                                                                ),
                                                                'Cases Unit Price': ThissItem.caseUnitPrice,
                                                                'Pcs Unit Price': ThissItem.pcsUnitPrice,
                                                                'Total Discount Amount': Value(ThissItem.cartItem.discount),
                                                                'Tax Amount': ThissItem.cartItem.discountedPrice * ThissItem.cartItem.tax * 0.01,
                                                                'Net Amount': ThissItem.cartItem.discountedPrice + (ThissItem.cartItem.discountedPrice * ThissItem.cartItem.tax * 0.01) + ThissItem.cartItem.emptyJarValue,
                                                                'Customer no.': LookUp(
                                                                    Customers_1,
                                                                    Account = paymentData.Customer.Account
                                                                ),
                                                                'Route No': Areavalueid,
                                                                'Reference Scheme ': LookUp(
                                                                    'Scheme Orders',
                                                                    'Scheme Order' = ThissItem.cartItem.schemeOrderValue.'Scheme Order'.'Scheme Order'
                                                                ),
                                                                'Reference Line': LookUp(
                                                                    'Order Lines',
                                                                    'Order Number'.'Order Number' = First(CreateOrderRecord).'Order Number' && 'Item SKU'.'SKU Master' = LookUp(
                                                                        'Scheme Orders',
                                                                        'Scheme Order' = ThissItem.cartItem.schemeOrderValue.'Scheme Order'.'Scheme Order'
                                                                    ).'Item Code'.'SKU Master'
                                                                ),
                                                                'Manufacturing Date': DateValue(ThissItem.manDate)
                                                            }
                                                        )
                                                    )
                                                );
                                                
                            /////////// Patch Invoice Header////////////////////
                            ClearCollect(
                                                    CreateInvHeader,
                                                    Patch(
                                                        'Invoice Headers',
                                                        Defaults('Invoice Headers'),
                                                        {
                                                            'Invoice Number': "RI" & Left(
                                                                LookUp(
                                                                    'Invoice Series',
                                                                    'Route No'.Area = Areavalueid.Area
                                                                ).'Sequence No',
                                                                4
                                                            ) & Text(
                                                                LookUp(
                                                                    'Invoice Series',
                                                                    'Route No'.Area = Areavalueid.Area
                                                                ).'Route No'.'Name (zx_name)'
                                                            ) &
                                                /*LookUp(
                                                    'Invoice Series',
                                                    'Route No'.Area = Areavalueid.Area
                                                ).'Last Sequence No' + "000001",
                             Left(
                                                    LookUp(
                                                        'Invoice Series',
                                                        'Route No'.Area = Areavalueid.Area
                                                    ).'Sequence No',
                                                    4
                                                ) &*/ 
                             Right(
                                                                LookUp(
                                                                    'Invoice Series',
                                                                    'Route No'.Area = Areavalueid.Area
                                                                ).'Sequence No' + 1,
                                                                6
                                                            ),
                                                            Salesperson: LookUp(
                                                                Users,
                                                                'Primary Email' = User().Email
                                                            ),
                                                            Customer: LookUp(
                                                                Customers_1,
                                                                Account = paymentData.Customer.Account
                                                            ),
                                                            'Route No': Areavalueid,
                                                            'Van No': LookUp(
                                                                Warehouses,
                                                                Warehouse = varUserVanNo.Van.Warehouse
                                                            ),
                                                            'Invoice Date': Today(),
                                                            'Order Type': 'Order Type (Choice)'.'Sales Order',
                                                            'Order Number': LookUp(
                                                                'Order Headers',
                                                                'Order Number' = First(CreateOrderRecord).'Order Number'
                                                            ),
                                                            'Total Amount': (Sum(
                                                                colManipulatedCartItems,
                                                                cartItem.discountedPrice
                                                            ) ),
                                                            'Total Tax Amount': (Sum(
                                                                colManipulatedCartItems,
                                                                cartItem.discountedPrice
                                                            ) * ((Sum(
                                                                colManipulatedCartItems,
                                                                cartItem.tax
                                                            )) * 0.01)),
                                                            'Total Discount Amount': Sum(
                                                                colManipulatedCartItems,
                                                                cartItem.discount
                                                            ),
                                                            'Net Amount': ((Sum(
                                                                colManipulatedCartItems,
                                                                cartItem.discountedPrice
                                                            ) * ((Sum(
                                                                colManipulatedCartItems,
                                                                cartItem.tax
                                                            )) * 0.01)) + Sum(
                                                                colManipulatedCartItems,
                                                                cartItem.discountedPrice
                                                            ) + Sum(
                                                                colManipulatedCartItems,
                                                                cartItem.emptyJarValue
                                                            )),
                                                            'Mode of Payment': 'Payment Type (choice)'.CREDIT
                                                    //'IRN Number':,
                                                    //'IRN Status':,
                                                    //'IRN Message':,
                                                    //'Signed QR Code':,
                                                    //'Synced Date':,
                                                        }
                                                    )
                                                );
                                                Patch(
                                                    'Invoice Series',
                                                    LookUp(
                                                        'Invoice Series',
                                                        'Route No'.Area = Areavalueid.Area
                                                    ),
                                                    {
                                                        'Sequence No': LookUp(
                                                            'Invoice Series',
                                                            'Route No'.Area = Areavalueid.Area
                                                        ).'Sequence No' + 1
                                                    }
                                                );
                                                
                            //////////////Patch Invoice Line ///////////////////
                            ClearCollect(
                                                    CreateInvLine,
                                                    ForAll(
                                                        colManipulatedCartItems As OrdrItems,
                                                        Patch(
                                                            'Invoice Lines',
                                                            Defaults('Invoice Lines'),
                                                            {
                                                                'Invoice Number': LookUp(
                                                                    'Invoice Headers',
                                                                    'Invoice Header' = First(CreateInvHeader).'Invoice Header'
                                                                ),
                                                                'Order Number': LookUp(
                                                                    'Order Headers',
                                                                    'Order Number' = First(CreateOrderRecord).'Order Number'
                                                                ),
                                                                'Item Type': If(
                                                                    OrdrItems.cartItem.schemeOrder = true,
                                                                    'Item Type (Choice)'.Free,
                                                                    'Item Type (Choice)'.Paid
                                                                ),
                                                                'Cases Unit Price': OrdrItems.totalCasePriceWithoutDisc,
                                                                'Pcs Unit Price': OrdrItems.totalPcsPriceWithoutDisc,
                                                                'Total Quantity': OrdrItems.qtyCases + OrdrItems.qtyPcs,
                                                                Cases: OrdrItems.qtyCases,
                                                                PCs: OrdrItems.qtyPcs,
                                                                'Total Discount Amount': Value(OrdrItems.cartItem.discount),
                                                                'Tax Amount': OrdrItems.cartItem.discountedPrice * OrdrItems.cartItem.tax * 0.01,
                                                                Rate: OrdrItems.cartItem.discountedPrice + (OrdrItems.cartItem.discountedPrice * OrdrItems.cartItem.tax * 0.01) + OrdrItems.cartItem.emptyJarValue,
                                                                Customer: LookUp(
                                                                    Customers_1,
                                                                    Account = paymentData.Customer.Account
                                                                ),
                                                                'Route No': Areavalueid,
                                                                Salesperson: LookUp(
                                                                    Users,
                                                                    'Primary Email' = User().Email
                                                                ),
                                                                'Van No': LookUp(
                                                                    Warehouses,
                                                                    Warehouse = varUserVanNo.Van.Warehouse
                                                                )
                                                            }
                                                        )
                                                    )
                                                );
                                            );
                                            
                            //Stock substraction from location ____________________________________________________________________________________
                            ForAll(
                                                colManipulatedCartItems As oneLine,
                                                Patch(
                                                    'Current Stocks',
                                                    LookUp(
                                                        'Current Stocks',
                                                        'Item SKU'.'SKU Master' = oneLine.skuId && 'Van No'.Warehouse = varUserVanNo.Van.Warehouse && 'Created On' >= Today()
                                                    ),
                                                    {
                                                        Cases: Sum(
                                                            Filter(
                                                                'Stock Transfer Lines',
                                                                'Transfer Order No'.'Stock Transfer Header' exactin varGatePassHeader.headerGUID && SKU.'SKU Master' = oneLine.skuId && 'Created On' >= Today()
                                                            ),
                                                            'Remaining Qty Cases'
                                                        ),
                                                        PCs: Sum(
                                                            Filter(
                                                                'Stock Transfer Lines',
                                                                'Transfer Order No'.'Stock Transfer Header' exactin varGatePassHeader.headerGUID && SKU.'SKU Master' = oneLine.skuId && 'Created On' >= Today()
                                                            ),
                                                            'Remaining Qty Pcs'
                                                        )
                                                    }
                                                )
                                            );
                                            Refresh('Current Stocks');
                                            
                            ///////////////////////////////////////////////////////////////////////////Credit Updation in Temporary Credit customer
                            /*Patch(
                                            'Temporary Credit Limits',
                                            LookUp(
                                                'Temporary Credit Limits',
                                                'Customer code'.Account = paymentData.Customer.Account   && FromDate <= Today() && ToDate >= Today()
                                            ),
                                            {
                                                BlockedLimit: LookUp(
                                                    'Temporary Credit Limits',
                                                    'Customer code'.Account = paymentData.Customer.Account   && FromDate <= Today() && ToDate >= Today()
                                                ).BlockedLimit + ((Sum(
                                                    colManipulatedCartItems,
                                                    cartItem.discountedPrice
                                                ) * ((Sum(
                                                    colManipulatedCartItems,
                                                    cartItem.tax
                                                )) * 0.01)) + Sum(
                                                    colManipulatedCartItems,
                                                    cartItem.discountedPrice
                                                ) + Sum(
                                                    colManipulatedCartItems,
                                                    cartItem.emptyJarValue
                                                ))
                                            }
                                        ); */
                                     /*   Set(
                                            VarPaymentConfirm,
                                            true
                                        ); */
                                        ),
                                ////////////______________________________________________Temporary customer credit does not exists, Permanent exists    
                                        If(
                                            ((LookUp(
                                                Customers_1,
                                                Account = paymentData.Customer.Account
                                            ).'Total Credit limit') - (LookUp(
                                                Customers_1,
                                                Account = paymentData.Customer.Account
                                            ).'Used Credit Limit') - (Sum(
                                                Filter(
                                                    'Order Headers',
                                                    Customer.Account = paymentData.Customer.Account && 'Created On' >= Today()
                                                ),
                                                'Net Amount'
                                            ))) < ((Sum(
                                                colManipulatedCartItems,
                                                cartItem.discountedPrice
                                            ) * ((Sum(
                                                colManipulatedCartItems,
                                                cartItem.tax
                                            )) * 0.01)) + Sum(
                                                colManipulatedCartItems,
                                                cartItem.discountedPrice
                                            ) + Sum(
                                                colManipulatedCartItems,
                                                cartItem.emptyJarValue
                                            )),
                                            Notify(
                                                "You don't have sufficient credit limit left, Please check",
                                                NotificationType.Error,
                                                2000
                                            );
                                   // Navigate('Visit Screen'),
                            ,
                                            ClearCollect(
                                                CreateOrderRecord,
                                                Patch(
                                                    'Order Headers',
                                                    Defaults('Order Headers'),
                                                    {
                                                        'Order Date': Today(),
                                                        'Order Type': 'Order Type (Choice)'.'Sales Order',
                                                        'Payment Type': 'Payment Type (Order Headers)'.Credit,
                                                        'Total Quantity': Sum(
                                                            colManipulatedCartItems,
                                                            qtyCases
                                                        ) + Sum(
                                                            colManipulatedCartItems,
                                                            qtyPcs
                                                        ),
                                                        'Net Amount': ((Sum(
                                                            colManipulatedCartItems,
                                                            cartItem.discountedPrice
                                                        ) * ((Sum(
                                                            colManipulatedCartItems,
                                                            cartItem.tax
                                                        )) * 0.01)) + Sum(
                                                            colManipulatedCartItems,
                                                            cartItem.discountedPrice
                                                        ) + Sum(
                                                            colManipulatedCartItems,
                                                            cartItem.emptyJarValue
                                                        )),
                                                        'Van No': LookUp(
                                                            Warehouses,
                                                            Warehouse = varUserVanNo.Van.Warehouse
                                                        ),
                                                        'Route No': Areavalueid,
                                                        Customer: LookUp(
                                                            Customers_1,
                                                            Account = paymentData.Customer.Account
                                                        ),
                                                        Salesperson: LookUp(
                                                            Users,
                                                            'Primary Email' = User().Email
                                                        ),
                                                        'Delivery Date': Today(),
                                                        'Total Amount': (Sum(
                                                            colManipulatedCartItems,
                                                            cartItem.discountedPrice
                                                        ) ),
                                                        'Total Tax Amount': (Sum(
                                                            colManipulatedCartItems,
                                                            cartItem.discountedPrice
                                                        ) * ((Sum(
                                                            colManipulatedCartItems,
                                                            cartItem.tax
                                                        )) * 0.01)),
                                                        'Total Discount Amount': Sum(
                                                            colManipulatedCartItems,
                                                            cartItem.discount
                                                        )
                                                    }
                                                )
                                            );
                                            If(
                                                !IsBlank(CreateOrderRecord),
                                                ClearCollect(
                                                    CreateItemsRecord,
                                                    ForAll(
                                                        colManipulatedCartItems As ThissItem,
                                                        Patch(
                                                            'Order Lines',
                                                            Defaults('Order Lines'),
                                                            {
                                                                'Total Quantity': ThissItem.qtyCases + ThissItem.qtyPcs,
                                                                Cases: ThissItem.qtyCases,
                                                                PCs: ThissItem.qtyPcs,
                                                                'Order Number': LookUp(
                                                                    'Order Headers',
                                                                    'Order Number' = First(CreateOrderRecord).'Order Number'
                                                                ),
                                                                Salesperson: LookUp(
                                                                    Users,
                                                                    'Primary Email' = User().Email
                                                                ),
                                                                'Van No': LookUp(
                                                                    Warehouses,
                                                                    Warehouse = varUserVanNo.Van.Warehouse
                                                                ),
                                                                'Item Type': If(
                                                                    ThissItem.cartItem.schemeOrder = true,
                                                                    'Item Type (Choice)'.Free,
                                                                    'Item Type (Choice)'.Paid
                                                                ),
                                                                'Item SKU': LookUp(
                                                                    'SKU Masters',
                                                                    'SKU Master' = ThissItem.skuId
                                                                ),
                                                                'Cases Unit Price': ThissItem.caseUnitPrice,
                                                                'Pcs Unit Price': ThissItem.pcsUnitPrice,
                                                                'Total Discount Amount': Value(ThissItem.cartItem.discount),
                                                                'Tax Amount': ThissItem.cartItem.discountedPrice * ThissItem.cartItem.tax * 0.01,
                                                                'Net Amount': ThissItem.cartItem.discountedPrice + (ThissItem.cartItem.discountedPrice * ThissItem.cartItem.tax * 0.01) + ThissItem.cartItem.emptyJarValue,
                                                                'Customer no.': LookUp(
                                                                    Customers_1,
                                                                    Account = paymentData.Customer.Account
                                                                ),
                                                                'Route No': Areavalueid,
                                                                'Reference Scheme ': LookUp(
                                                                    'Scheme Orders',
                                                                    'Scheme Order' = ThissItem.cartItem.schemeOrderValue.'Scheme Order'.'Scheme Order'
                                                                ),
                                                                'Reference Line': LookUp(
                                                                    'Order Lines',
                                                                    'Order Number'.'Order Number' = First(CreateOrderRecord).'Order Number' && 'Item SKU'.'SKU Master' = LookUp(
                                                                        'Scheme Orders',
                                                                        'Scheme Order' = ThissItem.cartItem.schemeOrderValue.'Scheme Order'.'Scheme Order'
                                                                    ).'Item Code'.'SKU Master'
                                                                ),
                                                                'Manufacturing Date': DateValue(ThissItem.manDate)
                                                            }
                                                        )
                                                    )
                                                );
                                                
                            /////////// Patch Invoice Header////////////////////
                            ClearCollect(
                                                    CreateInvHeader,
                                                    Patch(
                                                        'Invoice Headers',
                                                        Defaults('Invoice Headers'),
                                                        {
                                                            'Invoice Number': "RI" & Left(
                                                                LookUp(
                                                                    'Invoice Series',
                                                                    'Route No'.Area = Areavalueid.Area
                                                                ).'Sequence No',
                                                                4
                                                            ) & Text(
                                                                LookUp(
                                                                    'Invoice Series',
                                                                    'Route No'.Area = Areavalueid.Area
                                                                ).'Route No'.'Name (zx_name)'
                                                            ) &
                                                /*LookUp(
                                                    'Invoice Series',
                                                    'Route No'.Area = Areavalueid.Area
                                                ).'Last Sequence No' + "000001",
                             Left(
                                                    LookUp(
                                                        'Invoice Series',
                                                        'Route No'.Area = Areavalueid.Area
                                                    ).'Sequence No',
                                                    4
                                                ) &*/ 
                             Right(
                                                                LookUp(
                                                                    'Invoice Series',
                                                                    'Route No'.Area = Areavalueid.Area
                                                                ).'Sequence No' + 1,
                                                                6
                                                            ),
                                                            Salesperson: LookUp(
                                                                Users,
                                                                'Primary Email' = User().Email
                                                            ),
                                                            Customer: LookUp(
                                                                Customers_1,
                                                                Account = paymentData.Customer.Account
                                                            ),
                                                            'Route No': Areavalueid,
                                                            'Van No': LookUp(
                                                                Warehouses,
                                                                Warehouse = varUserVanNo.Van.Warehouse
                                                            ),
                                                            'Invoice Date': Today(),
                                                            'Order Type': 'Order Type (Choice)'.'Sales Order',
                                                            'Order Number': LookUp(
                                                                'Order Headers',
                                                                'Order Number' = First(CreateOrderRecord).'Order Number'
                                                            ),
                                                            'Total Amount': (Sum(
                                                                colCartItems,
                                                                discountedPrice
                                                            ) ),
                                                            'Total Tax Amount': (Sum(
                                                                colCartItems,
                                                                discountedPrice
                                                            ) * ((Sum(
                                                                colCartItems,
                                                                tax
                                                            )) * 0.01)),
                                                            'Total Discount Amount': Sum(
                                                                colCartItems,
                                                                discount
                                                            ),
                                                            'Net Amount': ((Sum(
                                                                colCartItems,
                                                                discountedPrice
                                                            ) * ((Sum(
                                                                colCartItems,
                                                                tax
                                                            )) * 0.01)) + Sum(
                                                                colCartItems,
                                                                discountedPrice
                                                            ) + Sum(
                                                                colCartItems,
                                                                emptyJarValue
                                                            )),
                                                            'Mode of Payment': 'Payment Type (choice)'.CREDIT
                                                    //'IRN Number':,
                                                    //'IRN Status':,
                                                    //'IRN Message':,
                                                    //'Signed QR Code':,
                                                    //'Synced Date':,
                                                        }
                                                    )
                                                );
                                                Patch(
                                                    'Invoice Series',
                                                    LookUp(
                                                        'Invoice Series',
                                                        'Route No'.Area = Areavalueid.Area
                                                    ),
                                                    {
                                                        'Sequence No': LookUp(
                                                            'Invoice Series',
                                                            'Route No'.Area = Areavalueid.Area
                                                        ).'Sequence No' + 1
                                                    }
                                                );
                                                
                            //////////////Patch Invoice Line ///////////////////
                            ClearCollect(
                                                    CreateInvLine,
                                                    ForAll(
                                                        colManipulatedCartItems As OrdrItems,
                                                        Patch(
                                                            'Invoice Lines',
                                                            Defaults('Invoice Lines'),
                                                            {
                                                                'Invoice Number': LookUp(
                                                                    'Invoice Headers',
                                                                    'Invoice Header' = First(CreateInvHeader).'Invoice Header'
                                                                ),
                                                                'Order Number': LookUp(
                                                                    'Order Headers',
                                                                    'Order Number' = First(CreateOrderRecord).'Order Number'
                                                                ),
                                                                'Item Type': If(
                                                                    OrdrItems.cartItem.schemeOrder = true,
                                                                    'Item Type (Choice)'.Free,
                                                                    'Item Type (Choice)'.Paid
                                                                ),
                                                                'Cases Unit Price': OrdrItems.totalCasePriceWithoutDisc,
                                                                'Pcs Unit Price': OrdrItems.totalPcsPriceWithoutDisc,
                                                                'Total Quantity': OrdrItems.qtyCases + OrdrItems.qtyPcs,
                                                                Cases: OrdrItems.qtyCases,
                                                                PCs: OrdrItems.qtyPcs,
                                                                'Total Discount Amount': Value(OrdrItems.cartItem.discount),
                                                                'Tax Amount': OrdrItems.cartItem.discountedPrice * OrdrItems.cartItem.tax * 0.01,
                                                                Rate: OrdrItems.cartItem.discountedPrice + (OrdrItems.cartItem.discountedPrice * OrdrItems.cartItem.tax * 0.01) + OrdrItems.cartItem.emptyJarValue,
                                                                Customer: LookUp(
                                                                    Customers_1,
                                                                    Account = paymentData.Customer.Account
                                                                ),
                                                                'Route No': Areavalueid,
                                                                Salesperson: LookUp(
                                                                    Users,
                                                                    'Primary Email' = User().Email
                                                                ),
                                                                'Van No': LookUp(
                                                                    Warehouses,
                                                                    Warehouse = varUserVanNo.Van.Warehouse
                                                                )
                                                            }
                                                        )
                                                    )
                                                );
                                            );
                                            
                            //Stock substraction from location ____________________________________________________________________________________
                            ForAll(
                                                colManipulatedCartItems As oneLine,
                                                Patch(
                                                    'Current Stocks',
                                                    LookUp(
                                                        'Current Stocks',
                                                        'Item SKU'.'SKU Master' = oneLine.skuId && 'Van No'.Warehouse = varUserVanNo.Van.Warehouse && 'Created On' >= Today()
                                                    ),
                                                    {
                                                        Cases: Sum(
                                                            Filter(
                                                                'Stock Transfer Lines',
                                                                'Transfer Order No'.'Stock Transfer Header' exactin varGatePassHeader.headerGUID && SKU.'SKU Master' = oneLine.skuId && 'Created On' >= Today()
                                                            ),
                                                            'Remaining Qty Cases'
                                                        ),
                                                        PCs: Sum(
                                                            Filter(
                                                                'Stock Transfer Lines',
                                                                'Transfer Order No'.'Stock Transfer Header' exactin varGatePassHeader.headerGUID && SKU.'SKU Master' = oneLine.skuId && 'Created On' >= Today()
                                                            ),
                                                            'Remaining Qty Pcs'
                                                        )
                                                    }
                                                )
                                            );
                                            Refresh('Current Stocks');
                                            
                            ///////////////////////////////////////////////////////////////////////////Credit Updation in customer
                            /*Patch(
                                            Customers_1,
                                            LookUp(
                                                Customers_1,
                                                Account = paymentData.Customer.Account  
                                            ),
                                            {
                                                'Remaining Credit Limit': LookUp(
                                                    Customers_1,
                                                    Account = paymentData.Customer.Account  
                                                ).'Remaining Credit Limit' - ((Sum(
                                                    colManipulatedCartItems,
                                                    cartItem.discountedPrice
                                                ) * ((Sum(
                                                    colManipulatedCartItems,
                                                    cartItem.tax
                                                )) * 0.01)) + Sum(
                                                    colManipulatedCartItems,
                                                    cartItem.discountedPrice
                                                ) + Sum(
                                                    colManipulatedCartItems,
                                                    cartItem.emptyJarValue
                                                ))
                                            }
                                        );*/
                                      /*  Set(
                                            VarPaymentConfirm,
                                            true
                                        );*/
                                        )
                                    )
                                );
                                
                            ////////////////////////////////////////////////////IRN Item Data
                            Clear(ManipulatedCartCollection);
                                ForAll(
                                    CreateItemsRecord As Item,
                                    Collect(
                                        ManipulatedCartCollection,
                                        {
                                            SlNo: Item.'Order Line No',
                                            PrdDesc: Item.'Item SKU'.'Name (zx_namess)',
                                            IsServc: "N",
                                            HsnCd: "10019920",
                                            Barcde: "",
                                            Qty: Item.'Total Quantity',
                                            //   FreeQty: "",
                                            Unit: "PCS",
                                            UnitPrice: Item.'Cases Unit Price',
                                            TotAmt: Item.'Total Discount Amount',
                                            Discount: Item.'Total Discount Amount',
                                            PreTaxVal: 1,
                                            AssAmt: 9978.84,
                                            GstRt: 12.0,
                                            IgstAmt: 0,
                                            CgstAmt: 0,
                                            SgstAmt: 0,
                                            CesRt: 5,
                                            CesAmt: 498.94,
                                            CesNonAdvlAmt: 10,
                                            StateCesRt: 12,
                                            StateCesAmt: 1197.46,
                                            StateCesNonAdvlAmt: 5,
                                            OthChrg: 10,
                                            TotItemVal: Item.'Total Discount Amount',
                                            OrdLineRef: "3256",
                                            OrgCntry: "AG",
                                            PrdSlNo: "12345",
                                            AttribDtls: Table(
                                                {
                                                    Nm: "Rice",
                                                    Val: "10000"
                                                }
                                            )
                                        }
                                    );
                                )
                            )
                        Size: =_VarGblAppFonts.Size.UpperMedium
                        Text: ="Confirm"
                        Width: =150
                        X: =143
                        Y: =238
                        ZIndex: =12

    compPaymentHeader_1 As Header:
        HeaderText: ="Order Payment"
        ZIndex: =4

    compPaymentBottomBar_1 As BottomBar:
        Y: =1026
        ZIndex: =5

